{"id":"d515b803e15313cb7023f7b7fcabad60","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/BasicIslandGenesis.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {ERC1155} from \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\nerror MintedOut();\r\nerror MintNotActive();\r\nerror AlreadyMinted();\r\nerror TransferFailed();\r\nerror InvalidBuyPrice();\r\nerror TokenDoesNotExist();\r\nerror ContractsNotAllowedToMint();\r\n\r\ncontract BasicIslandGenesis is ERC1155, Ownable {\r\n    using Strings for uint256;\r\n\r\n    string private _baseURI;\r\n    bool private _mintOpen;\r\n\r\n    string public name = \"Basic Island Genesis\";\r\n    string public symbol = \"DESC\";\r\n\r\n    uint256 private _mintCount;\r\n    uint256 public _mintPrice = 250 * 10**18; //250 matic\r\n\r\n    uint256 private constant ID = 1;\r\n    uint256 private constant RESERVE = 10;\r\n    uint256 private constant MAX_PER_WALLET = 2;\r\n    uint256 private constant MAX_SUPPLY = 500;\r\n\r\n    mapping(address => uint256) private _amountMinted;\r\n\r\n    modifier allowedToMint(uint256 amount) {\r\n        if (!_mintOpen) revert MintNotActive();\r\n        if (msg.value < _mintPrice * amount) revert InvalidBuyPrice();\r\n        if (_amountMinted[msg.sender] + amount > MAX_PER_WALLET)\r\n            revert AlreadyMinted();\r\n        if (_mintCount + amount > MAX_SUPPLY) revert MintedOut();\r\n        if (msg.sender != tx.origin) revert ContractsNotAllowedToMint();\r\n        _;\r\n    }\r\n\r\n    constructor(string memory uri_, address addr) ERC1155(uri_) {\r\n        _baseURI = uri_;\r\n        _mint(addr, ID, RESERVE, \"\");\r\n        _mintCount = RESERVE;\r\n    }\r\n\r\n    ///@notice mint and sends the token to the callers address\r\n    function mint(uint256 amount) external payable allowedToMint(amount) {\r\n        _amountMinted[msg.sender] += amount;\r\n        _mintCount += amount;\r\n        _mint(msg.sender, ID, amount, \"\");\r\n    }\r\n\r\n    /// @notice Toggle mint on and off\r\n    function toggleMint() external onlyOwner {\r\n        !_mintOpen ? _mintOpen = true : _mintOpen = false;\r\n    }\r\n\r\n    ///@notice changes the mint price\r\n    function changeMintPrice(uint256 mintPrice) external onlyOwner {\r\n        _mintPrice = mintPrice;\r\n    }\r\n\r\n    /// @return total Basic Island Nft minted so far for token id 1\r\n    function totalAmountMinted() external view returns (uint256) {\r\n        return _mintCount;\r\n    }\r\n\r\n    ///@return the amount to token minted by account\r\n    function amountMinted(address account) external view returns (uint256) {\r\n        return _amountMinted[account];\r\n    }\r\n\r\n    /// @return _mintActive true if mint is active and vice versa\r\n    function getState() external view returns (bool) {\r\n        return _mintOpen;\r\n    }\r\n\r\n    /// @return tokenUri\r\n    function uri(uint256 id) public view override returns (string memory) {\r\n        if (id != ID) revert TokenDoesNotExist();\r\n        return string(abi.encodePacked(_baseURI, Strings.toString(id)));\r\n    }\r\n\r\n    ///@notice withdraws the matic in the contract to _addr\r\n    function withdrawal() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        (bool success, ) = payable(msg.sender).call{value: balance}(\"\");\r\n        if (!success) revert TransferFailed();\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1830],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1831,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1830,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1830],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Address":[1808],"Context":[1830],"ERC1155":[1335],"ERC165":[2080],"IERC1155":[1457],"IERC1155MetadataURI":[1513],"IERC1155Receiver":[1498],"IERC165":[2092]},"id":1336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1458,"src":"134:24:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1499,"src":"159:32:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1514,"src":"192:46:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1809,"src":"239:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1831,"src":"273:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":2081,"src":"307:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":122,"name":"Context","nameLocations":["590:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1830,"src":"590:7:1"},"id":123,"nodeType":"InheritanceSpecifier","src":"590:7:1"},{"baseName":{"id":124,"name":"ERC165","nameLocations":["599:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"599:6:1"},"id":125,"nodeType":"InheritanceSpecifier","src":"599:6:1"},{"baseName":{"id":126,"name":"IERC1155","nameLocations":["607:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"607:8:1"},"id":127,"nodeType":"InheritanceSpecifier","src":"607:8:1"},{"baseName":{"id":128,"name":"IERC1155MetadataURI","nameLocations":["617:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":1513,"src":"617:19:1"},"id":129,"nodeType":"InheritanceSpecifier","src":"617:19:1"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"355:214:1","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1335,"linearizedBaseContracts":[1335,1513,1457,2080,2092,1830],"name":"ERC1155","nameLocation":"579:7:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":132,"libraryName":{"id":130,"name":"Address","nameLocations":["649:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"649:7:1"},"nodeType":"UsingForDirective","src":"643:26:1","typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":138,"mutability":"mutable","name":"_balances","nameLocation":"780:9:1","nodeType":"VariableDeclaration","scope":1335,"src":"724:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":137,"keyType":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"724:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueType":{"id":136,"keyType":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"743:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":144,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"899:18:1","nodeType":"VariableDeclaration","scope":1335,"src":"846:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":143,"keyType":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":142,"keyType":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"865:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":146,"mutability":"mutable","name":"_uri","nameLocation":"1053:4:1","nodeType":"VariableDeclaration","scope":1335,"src":"1038:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":145,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"1139:30:1","statements":[{"expression":{"arguments":[{"id":153,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"1157:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":152,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1149:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"ExpressionStatement","src":"1149:13:1"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"1064:38:1","text":" @dev See {_setURI}."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"uri_","nameLocation":"1133:4:1","nodeType":"VariableDeclaration","scope":157,"src":"1119:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":148,"name":"string","nodeType":"ElementaryTypeName","src":"1119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1118:20:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"1139:0:1"},"scope":1335,"src":"1107:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2079,2091],"body":{"id":187,"nodeType":"Block","src":"1344:197:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1373:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":170,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"1393:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1457_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1457_$","typeString":"type(contract IERC1155)"}],"id":169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1388:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1388:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1457","typeString":"type(contract IERC1155)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1403:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1388:26:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1373:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1430:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":176,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1450:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1513_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1513_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1445:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1513","typeString":"type(contract IERC1155MetadataURI)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1471:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1445:37:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1430:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:109:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":183,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1522:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":181,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1498:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1335_$","typeString":"type(contract super ERC1155)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1504:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2079,"src":"1498:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:161:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":167,"id":186,"nodeType":"Return","src":"1354:180:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1175:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":188,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1245:17:1","nodeType":"FunctionDefinition","overrides":{"id":164,"nodeType":"OverrideSpecifier","overrides":[{"id":162,"name":"ERC165","nameLocations":["1312:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"1312:6:1"},{"id":163,"name":"IERC165","nameLocations":["1320:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2092,"src":"1320:7:1"}],"src":"1303:25:1"},"parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"interfaceId","nameLocation":"1270:11:1","nodeType":"VariableDeclaration","scope":188,"src":"1263:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":159,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1263:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1262:20:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":188,"src":"1338:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1338:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1337:6:1"},"scope":1335,"src":"1236:305:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1512],"body":{"id":199,"nodeType":"Block","src":"2015:28:1","statements":[{"expression":{"id":197,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2032:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":196,"id":198,"nodeType":"Return","src":"2025:11:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1547:388:1","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":200,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1949:3:1","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"1982:8:1"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"1953:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1952:9:1"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"2000:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":194,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1999:15:1"},"scope":1335,"src":"1940:103:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":227,"nodeType":"Block","src":"2280:132:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2298:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2309:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:1","typeDescriptions":{}}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2321:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"2290:76:1"},{"expression":{"baseExpression":{"baseExpression":{"id":221,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2383:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":223,"indexExpression":{"id":222,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2393:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":225,"indexExpression":{"id":224,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":210,"id":226,"nodeType":"Return","src":"2376:29:1"}]},"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2049:131:1","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2194:9:1","nodeType":"FunctionDefinition","overrides":{"id":207,"nodeType":"OverrideSpecifier","overrides":[],"src":"2253:8:1"},"parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"account","nameLocation":"2212:7:1","nodeType":"VariableDeclaration","scope":228,"src":"2204:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2204:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"id","nameLocation":"2229:2:1","nodeType":"VariableDeclaration","scope":228,"src":"2221:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:29:1"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"2271:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:1"},"scope":1335,"src":"2185:227:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1408],"body":{"id":291,"nodeType":"Block","src":"2742:335:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":243,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2760:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2769:6:1","memberName":"length","nodeType":"MemberAccess","src":"2760:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":245,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"2779:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2783:6:1","memberName":"length","nodeType":"MemberAccess","src":"2779:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2760:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2791:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2752:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2752:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"2752:83:1"},{"assignments":[255],"declarations":[{"constant":false,"id":255,"mutability":"mutable","name":"batchBalances","nameLocation":"2863:13:1","nodeType":"VariableDeclaration","scope":291,"src":"2846:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":254,"nodeType":"ArrayTypeName","src":"2846:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":262,"initialValue":{"arguments":[{"expression":{"id":259,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2893:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2902:6:1","memberName":"length","nodeType":"MemberAccess","src":"2893:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2879:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2883:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":257,"nodeType":"ArrayTypeName","src":"2883:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2879:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2846:63:1"},{"body":{"id":287,"nodeType":"Block","src":"2966:74:1","statements":[{"expression":{"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":274,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2980:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":276,"indexExpression":{"id":275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2994:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2980:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":278,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"3009:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":280,"indexExpression":{"id":279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3018:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3009:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":281,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3022:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":283,"indexExpression":{"id":282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3026:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3022:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2999:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2999:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2980:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":286,"nodeType":"ExpressionStatement","src":"2980:49:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2940:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":268,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2944:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2953:6:1","memberName":"length","nodeType":"MemberAccess","src":"2944:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2940:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":288,"initializationExpression":{"assignments":[264],"declarations":[{"constant":false,"id":264,"mutability":"mutable","name":"i","nameLocation":"2933:1:1","nodeType":"VariableDeclaration","scope":288,"src":"2925:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2925:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":266,"initialValue":{"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2937:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2925:13:1"},"loopExpression":{"expression":{"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2961:3:1","subExpression":{"id":271,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2963:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":273,"nodeType":"ExpressionStatement","src":"2961:3:1"},"nodeType":"ForStatement","src":"2920:120:1"},{"expression":{"id":289,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3057:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":241,"id":290,"nodeType":"Return","src":"3050:20:1"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"2418:146:1","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":292,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2578:14:1","nodeType":"FunctionDefinition","overrides":{"id":237,"nodeType":"OverrideSpecifier","overrides":[],"src":"2694:8:1"},"parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"accounts","nameLocation":"2610:8:1","nodeType":"VariableDeclaration","scope":292,"src":"2593:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"2593:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":231,"nodeType":"ArrayTypeName","src":"2593:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"ids","nameLocation":"2637:3:1","nodeType":"VariableDeclaration","scope":292,"src":"2620:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2620:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":234,"nodeType":"ArrayTypeName","src":"2620:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2592:49:1"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"2720:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":239,"nodeType":"ArrayTypeName","src":"2720:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2719:18:1"},"scope":1335,"src":"2569:508:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1416],"body":{"id":308,"nodeType":"Block","src":"3229:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3258:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":304,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"3272:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3282:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":301,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3239:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":307,"nodeType":"ExpressionStatement","src":"3239:52:1"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"3083:57:1","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":309,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3154:17:1","nodeType":"FunctionDefinition","overrides":{"id":299,"nodeType":"OverrideSpecifier","overrides":[],"src":"3220:8:1"},"parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"operator","nameLocation":"3180:8:1","nodeType":"VariableDeclaration","scope":309,"src":"3172:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"3172:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"approved","nameLocation":"3195:8:1","nodeType":"VariableDeclaration","scope":309,"src":"3190:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"3190:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3171:33:1"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"3229:0:1"},"scope":1335,"src":"3145:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1426],"body":{"id":326,"nodeType":"Block","src":"3470:61:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":320,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3487:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":322,"indexExpression":{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"3506:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3487:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":324,"indexExpression":{"id":323,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"3515:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3487:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":319,"id":325,"nodeType":"Return","src":"3480:44:1"}]},"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3304:56:1","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":327,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:1","nodeType":"FunctionDefinition","overrides":{"id":316,"nodeType":"OverrideSpecifier","overrides":[],"src":"3446:8:1"},"parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"account","nameLocation":"3399:7:1","nodeType":"VariableDeclaration","scope":327,"src":"3391:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"operator","nameLocation":"3416:8:1","nodeType":"VariableDeclaration","scope":327,"src":"3408:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"3464:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":317,"name":"bool","nodeType":"ElementaryTypeName","src":"3464:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3463:6:1"},"scope":1335,"src":"3365:166:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1440],"body":{"id":364,"nodeType":"Block","src":"3767:226:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3798:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":344,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3806:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3798:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":348,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3839:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3845:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3845:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":347,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3822:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3872:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","typeString":"literal_string \"ERC1155: caller is not token owner nor approved\""},"value":"ERC1155: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","typeString":"literal_string \"ERC1155: caller is not token owner nor approved\""}],"id":342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3777:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3777:154:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"3777:154:1"},{"expression":{"arguments":[{"id":357,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3959:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3965:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"3969:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":360,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3973:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3981:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":356,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3941:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3941:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"3941:45:1"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"3537:56:1","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":365,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3607:16:1","nodeType":"FunctionDefinition","overrides":{"id":340,"nodeType":"OverrideSpecifier","overrides":[],"src":"3758:8:1"},"parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"from","nameLocation":"3641:4:1","nodeType":"VariableDeclaration","scope":365,"src":"3633:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"3663:2:1","nodeType":"VariableDeclaration","scope":365,"src":"3655:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"id","nameLocation":"3683:2:1","nodeType":"VariableDeclaration","scope":365,"src":"3675:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3675:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"amount","nameLocation":"3703:6:1","nodeType":"VariableDeclaration","scope":365,"src":"3695:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3695:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"data","nameLocation":"3732:4:1","nodeType":"VariableDeclaration","scope":365,"src":"3719:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3719:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3623:119:1"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"3767:0:1"},"scope":1335,"src":"3598:395:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1456],"body":{"id":404,"nodeType":"Block","src":"4259:233:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4290:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4298:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4290:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":388,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4331:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":389,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4337:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":387,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4314:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4290:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4364:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","typeString":"literal_string \"ERC1155: caller is not token owner nor approved\""},"value":"ERC1155: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","typeString":"literal_string \"ERC1155: caller is not token owner nor approved\""}],"id":382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4269:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4269:154:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"4269:154:1"},{"expression":{"arguments":[{"id":397,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4456:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4462:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4466:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":400,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4471:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":401,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4480:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":396,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"4433:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4433:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"4433:52:1"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"3999:61:1","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":405,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4074:21:1","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"4250:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"from","nameLocation":"4113:4:1","nodeType":"VariableDeclaration","scope":405,"src":"4105:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"4105:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"to","nameLocation":"4135:2:1","nodeType":"VariableDeclaration","scope":405,"src":"4127:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"4127:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"ids","nameLocation":"4164:3:1","nodeType":"VariableDeclaration","scope":405,"src":"4147:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4147:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ArrayTypeName","src":"4147:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"amounts","nameLocation":"4194:7:1","nodeType":"VariableDeclaration","scope":405,"src":"4177:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"4177:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":375,"nodeType":"ArrayTypeName","src":"4177:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"data","nameLocation":"4224:4:1","nodeType":"VariableDeclaration","scope":405,"src":"4211:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":377,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4095:139:1"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"4259:0:1"},"scope":1335,"src":"4065:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":521,"nodeType":"Block","src":"5105:784:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":420,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5123:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5137:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5129:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"5129:7:1","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5129:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5123:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5141:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5115:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5115:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"5115:66:1"},{"assignments":[430],"declarations":[{"constant":false,"id":430,"mutability":"mutable","name":"operator","nameLocation":"5200:8:1","nodeType":"VariableDeclaration","scope":521,"src":"5192:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"5192:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"5211:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5211:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5192:31:1"},{"assignments":[438],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"ids","nameLocation":"5250:3:1","nodeType":"VariableDeclaration","scope":521,"src":"5233:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"5233:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"5233:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"id":440,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5274:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":439,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"5256:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5256:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5233:44:1"},{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"amounts","nameLocation":"5304:7:1","nodeType":"VariableDeclaration","scope":521,"src":"5287:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"5287:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"nodeType":"ArrayTypeName","src":"5287:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":451,"initialValue":{"arguments":[{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5332:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":448,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"5314:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5314:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5287:52:1"},{"expression":{"arguments":[{"id":453,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5371:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5381:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5387:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":456,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5391:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":457,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5396:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":458,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5405:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":452,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5350:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"5350:60:1"},{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"fromBalance","nameLocation":"5429:11:1","nodeType":"VariableDeclaration","scope":521,"src":"5421:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5421:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":468,"initialValue":{"baseExpression":{"baseExpression":{"id":463,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5443:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":465,"indexExpression":{"id":464,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5453:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5443:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":467,"indexExpression":{"id":466,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5457:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5443:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5421:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5480:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5495:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5480:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5503:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5472:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"5472:76:1"},{"id":486,"nodeType":"UncheckedBlock","src":"5558:77:1","statements":[{"expression":{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":476,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5582:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":479,"indexExpression":{"id":477,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5592:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5582:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":480,"indexExpression":{"id":478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5596:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5582:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5604:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5618:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5604:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5582:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":485,"nodeType":"ExpressionStatement","src":"5582:42:1"}]},{"expression":{"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":487,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5644:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":490,"indexExpression":{"id":488,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5654:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5644:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":491,"indexExpression":{"id":489,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5658:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5644:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5665:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5644:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":494,"nodeType":"ExpressionStatement","src":"5644:27:1"},{"eventCall":{"arguments":[{"id":496,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5702:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5712:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5718:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5722:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5726:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":495,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"5687:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5687:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"EmitStatement","src":"5682:51:1"},{"expression":{"arguments":[{"id":504,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5764:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5774:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5780:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5784:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":508,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5789:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":509,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5798:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":503,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5744:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5744:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"5744:59:1"},{"expression":{"arguments":[{"id":513,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5845:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":514,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5855:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5861:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5865:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5869:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":518,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5877:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":512,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5814:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5814:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"5814:68:1"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"4498:439:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"4951:17:1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"from","nameLocation":"4986:4:1","nodeType":"VariableDeclaration","scope":522,"src":"4978:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"to","nameLocation":"5008:2:1","nodeType":"VariableDeclaration","scope":522,"src":"5000:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"id","nameLocation":"5028:2:1","nodeType":"VariableDeclaration","scope":522,"src":"5020:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"5020:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"amount","nameLocation":"5048:6:1","nodeType":"VariableDeclaration","scope":522,"src":"5040:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"5040:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"data","nameLocation":"5077:4:1","nodeType":"VariableDeclaration","scope":522,"src":"5064:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":415,"name":"bytes","nodeType":"ElementaryTypeName","src":"5064:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4968:119:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"5105:0:1"},"scope":1335,"src":"4942:947:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":656,"nodeType":"Block","src":"6423:927:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":539,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6441:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6445:6:1","memberName":"length","nodeType":"MemberAccess","src":"6441:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":541,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6455:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6463:6:1","memberName":"length","nodeType":"MemberAccess","src":"6455:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6441:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6471:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6433:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"ExpressionStatement","src":"6433:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6532:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6546:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6538:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"6538:7:1","typeDescriptions":{}}},"id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6538:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6532:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6550:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6524:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6524:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"6524:66:1"},{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"operator","nameLocation":"6609:8:1","nodeType":"VariableDeclaration","scope":656,"src":"6601:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"6601:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":561,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":559,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"6620:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6620:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6601:31:1"},{"expression":{"arguments":[{"id":563,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6664:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6680:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6684:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":567,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6689:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":568,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6698:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":562,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6643:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6643:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"ExpressionStatement","src":"6643:60:1"},{"body":{"id":628,"nodeType":"Block","src":"6755:370:1","statements":[{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"id","nameLocation":"6777:2:1","nodeType":"VariableDeclaration","scope":628,"src":"6769:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6769:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":587,"initialValue":{"baseExpression":{"id":584,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6782:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":586,"indexExpression":{"id":585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6786:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6782:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6769:19:1"},{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"amount","nameLocation":"6810:6:1","nodeType":"VariableDeclaration","scope":628,"src":"6802:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"6802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":593,"initialValue":{"baseExpression":{"id":590,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6819:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":592,"indexExpression":{"id":591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6827:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6819:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6802:27:1"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"fromBalance","nameLocation":"6852:11:1","nodeType":"VariableDeclaration","scope":628,"src":"6844:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":601,"initialValue":{"baseExpression":{"baseExpression":{"id":596,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6866:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":598,"indexExpression":{"id":597,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6876:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":600,"indexExpression":{"id":599,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6880:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6844:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"6907:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":604,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6922:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6907:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6930:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6899:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6899:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"6899:76:1"},{"id":619,"nodeType":"UncheckedBlock","src":"6989:85:1","statements":[{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":609,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"7017:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":612,"indexExpression":{"id":610,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7027:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7017:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":613,"indexExpression":{"id":611,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7031:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7017:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7039:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":615,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7053:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7039:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7017:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ExpressionStatement","src":"7017:42:1"}]},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":620,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"7087:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":623,"indexExpression":{"id":621,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7097:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7087:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":624,"indexExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7101:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7087:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7108:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7087:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"7087:27:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6734:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":576,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6738:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6742:6:1","memberName":"length","nodeType":"MemberAccess","src":"6738:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"initializationExpression":{"assignments":[572],"declarations":[{"constant":false,"id":572,"mutability":"mutable","name":"i","nameLocation":"6727:1:1","nodeType":"VariableDeclaration","scope":629,"src":"6719:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":574,"initialValue":{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6731:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6719:13:1"},"loopExpression":{"expression":{"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6750:3:1","subExpression":{"id":579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6752:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":581,"nodeType":"ExpressionStatement","src":"6750:3:1"},"nodeType":"ForStatement","src":"6714:411:1"},{"eventCall":{"arguments":[{"id":631,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7154:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7164:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7170:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7174:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":635,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7179:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":630,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7140:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7140:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"EmitStatement","src":"7135:52:1"},{"expression":{"arguments":[{"id":639,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7218:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7228:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7234:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7238:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":643,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7243:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":644,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7252:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":638,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"7198:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7198:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"7198:59:1"},{"expression":{"arguments":[{"id":648,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7304:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7314:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7320:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7324:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":652,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7329:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":653,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7338:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":647,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"7268:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7268:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"7268:75:1"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5895:335:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":657,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"6244:22:1","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"from","nameLocation":"6284:4:1","nodeType":"VariableDeclaration","scope":657,"src":"6276:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"6276:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"to","nameLocation":"6306:2:1","nodeType":"VariableDeclaration","scope":657,"src":"6298:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"6298:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"ids","nameLocation":"6335:3:1","nodeType":"VariableDeclaration","scope":657,"src":"6318:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6318:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":529,"nodeType":"ArrayTypeName","src":"6318:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"amounts","nameLocation":"6365:7:1","nodeType":"VariableDeclaration","scope":657,"src":"6348:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"6348:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":532,"nodeType":"ArrayTypeName","src":"6348:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"data","nameLocation":"6395:4:1","nodeType":"VariableDeclaration","scope":657,"src":"6382:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"6382:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6266:139:1"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"6423:0:1"},"scope":1335,"src":"6235:1115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"8229:30:1","statements":[{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":663,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"8239:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":664,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8246:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8239:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":666,"nodeType":"ExpressionStatement","src":"8239:13:1"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"7356:812:1","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"8182:7:1","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"newuri","nameLocation":"8204:6:1","nodeType":"VariableDeclaration","scope":668,"src":"8190:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":659,"name":"string","nodeType":"ElementaryTypeName","src":"8190:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8189:22:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"8229:0:1"},"scope":1335,"src":"8173:86:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":768,"nodeType":"Block","src":"8761:580:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8779:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8793:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8785:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"8785:7:1","typeDescriptions":{}}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8785:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8779:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8797:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8771:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8771:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"8771:62:1"},{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"operator","nameLocation":"8852:8:1","nodeType":"VariableDeclaration","scope":768,"src":"8844:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"8844:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":694,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":692,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"8863:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8863:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8844:31:1"},{"assignments":[699],"declarations":[{"constant":false,"id":699,"mutability":"mutable","name":"ids","nameLocation":"8902:3:1","nodeType":"VariableDeclaration","scope":768,"src":"8885:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8885:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":698,"nodeType":"ArrayTypeName","src":"8885:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":703,"initialValue":{"arguments":[{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8926:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":700,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8908:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8908:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8885:44:1"},{"assignments":[708],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"amounts","nameLocation":"8956:7:1","nodeType":"VariableDeclaration","scope":768,"src":"8939:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"8939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ArrayTypeName","src":"8939:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[{"id":710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8984:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":709,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8966:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8966:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8939:52:1"},{"expression":{"arguments":[{"id":714,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9023:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9041:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9033:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"9033:7:1","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9045:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"9049:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":721,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9054:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":722,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9063:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":713,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"9002:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9002:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"9002:66:1"},{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":725,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"9079:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":728,"indexExpression":{"id":726,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9089:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9079:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":729,"indexExpression":{"id":727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9093:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9079:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9100:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9079:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"9079:27:1"},{"eventCall":{"arguments":[{"id":734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9136:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9146:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"9146:7:1","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9146:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9158:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9162:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9166:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"9121:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9121:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"EmitStatement","src":"9116:57:1"},{"expression":{"arguments":[{"id":745,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9204:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9222:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9214:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"9214:7:1","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9226:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"9230:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":752,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9235:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":753,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9244:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"9184:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9184:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"9184:65:1"},{"expression":{"arguments":[{"id":757,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9291:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9309:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9301:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"9301:7:1","typeDescriptions":{}}},"id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9301:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9313:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9317:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9321:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":765,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9329:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":756,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9260:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9260:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"9260:74:1"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"8265:362:1","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":769,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8641:5:1","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"to","nameLocation":"8664:2:1","nodeType":"VariableDeclaration","scope":769,"src":"8656:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"id","nameLocation":"8684:2:1","nodeType":"VariableDeclaration","scope":769,"src":"8676:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"8676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"amount","nameLocation":"8704:6:1","nodeType":"VariableDeclaration","scope":769,"src":"8696:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"data","nameLocation":"8733:4:1","nodeType":"VariableDeclaration","scope":769,"src":"8720:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"8720:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8646:97:1"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"8761:0:1"},"scope":1335,"src":"8632:709:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":879,"nodeType":"Block","src":"9885:637:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9903:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9917:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9909:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"9909:7:1","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9909:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9903:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9921:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9895:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9895:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"9895:62:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":794,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9975:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9979:6:1","memberName":"length","nodeType":"MemberAccess","src":"9975:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":796,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9989:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9997:6:1","memberName":"length","nodeType":"MemberAccess","src":"9989:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9975:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10005:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9967:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9967:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"9967:81:1"},{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"operator","nameLocation":"10067:8:1","nodeType":"VariableDeclaration","scope":879,"src":"10059:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"10059:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"10078:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10078:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10059:31:1"},{"expression":{"arguments":[{"id":808,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10122:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10140:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10132:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"10132:7:1","typeDescriptions":{}}},"id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10132:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10144:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10148:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":815,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10153:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":816,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10162:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":807,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"10101:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10101:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10101:66:1"},{"body":{"id":842,"nodeType":"Block","src":"10219:60:1","statements":[{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"10233:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":835,"indexExpression":{"baseExpression":{"id":831,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10243:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":833,"indexExpression":{"id":832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10247:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10243:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10233:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":836,"indexExpression":{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10251:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10233:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":837,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10258:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":839,"indexExpression":{"id":838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10266:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10258:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10233:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10233:35:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10198:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":824,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10202:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10206:6:1","memberName":"length","nodeType":"MemberAccess","src":"10202:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10198:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"initializationExpression":{"assignments":[820],"declarations":[{"constant":false,"id":820,"mutability":"mutable","name":"i","nameLocation":"10191:1:1","nodeType":"VariableDeclaration","scope":843,"src":"10183:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"10183:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":822,"initialValue":{"hexValue":"30","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10195:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10183:13:1"},"loopExpression":{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10214:3:1","subExpression":{"id":827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10214:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"10214:3:1"},"nodeType":"ForStatement","src":"10178:101:1"},{"eventCall":{"arguments":[{"id":845,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10308:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10326:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10318:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"10318:7:1","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10318:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10330:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10334:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":852,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10339:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":844,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10294:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10294:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"EmitStatement","src":"10289:58:1"},{"expression":{"arguments":[{"id":856,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10378:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10388:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"10388:7:1","typeDescriptions":{}}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10388:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10400:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10404:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":863,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10409:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":864,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10418:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":855,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"10358:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10358:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"10358:65:1"},{"expression":{"arguments":[{"id":868,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10470:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10488:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10480:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10480:7:1","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10480:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10492:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10496:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":875,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10501:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":876,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10510:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":867,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"10434:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10434:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"10434:81:1"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"9347:379:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"9740:10:1","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"to","nameLocation":"9768:2:1","nodeType":"VariableDeclaration","scope":880,"src":"9760:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"9760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"ids","nameLocation":"9797:3:1","nodeType":"VariableDeclaration","scope":880,"src":"9780:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"9780:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":774,"nodeType":"ArrayTypeName","src":"9780:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"amounts","nameLocation":"9827:7:1","nodeType":"VariableDeclaration","scope":880,"src":"9810:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"9810:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ArrayTypeName","src":"9810:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"data","nameLocation":"9857:4:1","nodeType":"VariableDeclaration","scope":880,"src":"9844:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":779,"name":"bytes","nodeType":"ElementaryTypeName","src":"9844:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9750:117:1"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"9885:0:1"},"scope":1335,"src":"9731:791:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":984,"nodeType":"Block","src":"10912:682:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"10930:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10946:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10938:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"10938:7:1","typeDescriptions":{}}},"id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10938:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10930:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10950:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10922:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10922:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"ExpressionStatement","src":"10922:66:1"},{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"operator","nameLocation":"11007:8:1","nodeType":"VariableDeclaration","scope":984,"src":"10999:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"10999:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":902,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"11018:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11018:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10999:31:1"},{"assignments":[909],"declarations":[{"constant":false,"id":909,"mutability":"mutable","name":"ids","nameLocation":"11057:3:1","nodeType":"VariableDeclaration","scope":984,"src":"11040:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"11040:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ArrayTypeName","src":"11040:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[{"id":911,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11081:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11063:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11063:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11040:44:1"},{"assignments":[918],"declarations":[{"constant":false,"id":918,"mutability":"mutable","name":"amounts","nameLocation":"11111:7:1","nodeType":"VariableDeclaration","scope":984,"src":"11094:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11094:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"nodeType":"ArrayTypeName","src":"11094:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":922,"initialValue":{"arguments":[{"id":920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11139:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11121:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11121:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11094:52:1"},{"expression":{"arguments":[{"id":924,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11178:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11188:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11202:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11194:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"11194:7:1","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":930,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"11206:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":931,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11211:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11220:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":923,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"11157:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11157:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"11157:66:1"},{"assignments":[936],"declarations":[{"constant":false,"id":936,"mutability":"mutable","name":"fromBalance","nameLocation":"11242:11:1","nodeType":"VariableDeclaration","scope":984,"src":"11234:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"11234:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"initialValue":{"baseExpression":{"baseExpression":{"id":937,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"11256:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":939,"indexExpression":{"id":938,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11266:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11256:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":941,"indexExpression":{"id":940,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11270:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11256:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11234:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11293:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":945,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11308:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11293:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11316:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11285:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11285:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"11285:70:1"},{"id":960,"nodeType":"UncheckedBlock","src":"11365:77:1","statements":[{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":950,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"11389:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":953,"indexExpression":{"id":951,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11399:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11389:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":954,"indexExpression":{"id":952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11403:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11389:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11411:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":956,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11425:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11389:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ExpressionStatement","src":"11389:42:1"}]},{"eventCall":{"arguments":[{"id":962,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11472:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11482:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11496:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11488:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"11488:7:1","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11488:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11500:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11504:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":961,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"11457:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11457:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"EmitStatement","src":"11452:59:1"},{"expression":{"arguments":[{"id":973,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11542:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11552:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11558:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"11558:7:1","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"11570:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":980,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11575:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11584:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":972,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"11522:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"11522:65:1"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"10528:275:1","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10817:5:1","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"from","nameLocation":"10840:4:1","nodeType":"VariableDeclaration","scope":985,"src":"10832:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10832:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"id","nameLocation":"10862:2:1","nodeType":"VariableDeclaration","scope":985,"src":"10854:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10854:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"amount","nameLocation":"10882:6:1","nodeType":"VariableDeclaration","scope":985,"src":"10874:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"10874:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:72:1"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"10912:0:1"},"scope":1335,"src":"10808:786:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"11962:814:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"11980:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11996:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11988:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11988:7:1","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11988:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11980:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12000:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11972:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11972:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"11972:66:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12056:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12060:6:1","memberName":"length","nodeType":"MemberAccess","src":"12056:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1010,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12070:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12078:6:1","memberName":"length","nodeType":"MemberAccess","src":"12070:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12056:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12086:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12048:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12048:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"12048:81:1"},{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"operator","nameLocation":"12148:8:1","nodeType":"VariableDeclaration","scope":1107,"src":"12140:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"12140:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1020,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1018,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"12159:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12140:31:1"},{"expression":{"arguments":[{"id":1022,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12203:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12213:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12227:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12219:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:1","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12219:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12231:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1029,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12236:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12245:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1021,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"12182:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12182:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"ExpressionStatement","src":"12182:66:1"},{"body":{"id":1082,"nodeType":"Block","src":"12300:323:1","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"id","nameLocation":"12322:2:1","nodeType":"VariableDeclaration","scope":1082,"src":"12314:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1049,"initialValue":{"baseExpression":{"id":1046,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12327:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1048,"indexExpression":{"id":1047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12331:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12327:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12314:19:1"},{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"amount","nameLocation":"12355:6:1","nodeType":"VariableDeclaration","scope":1082,"src":"12347:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12347:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1055,"initialValue":{"baseExpression":{"id":1052,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12364:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1054,"indexExpression":{"id":1053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12372:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12364:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12347:27:1"},{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"fromBalance","nameLocation":"12397:11:1","nodeType":"VariableDeclaration","scope":1082,"src":"12389:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12389:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1063,"initialValue":{"baseExpression":{"baseExpression":{"id":1058,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"12411:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1060,"indexExpression":{"id":1059,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12421:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12411:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1062,"indexExpression":{"id":1061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12425:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12411:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12389:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12452:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1066,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12467:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12452:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12475:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12444:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12444:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"12444:70:1"},{"id":1081,"nodeType":"UncheckedBlock","src":"12528:85:1","statements":[{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1071,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"12556:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1074,"indexExpression":{"id":1072,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12566:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12556:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1075,"indexExpression":{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12570:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12556:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1076,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12578:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1077,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12592:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12578:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12556:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ExpressionStatement","src":"12556:42:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12279:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1038,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12283:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12287:6:1","memberName":"length","nodeType":"MemberAccess","src":"12283:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12279:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1083,"initializationExpression":{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"i","nameLocation":"12272:1:1","nodeType":"VariableDeclaration","scope":1083,"src":"12264:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"12264:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1036,"initialValue":{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12276:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12264:13:1"},"loopExpression":{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12295:3:1","subExpression":{"id":1041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12295:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1043,"nodeType":"ExpressionStatement","src":"12295:3:1"},"nodeType":"ForStatement","src":"12259:364:1"},{"eventCall":{"arguments":[{"id":1085,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12652:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12662:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12676:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12668:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"12668:7:1","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12668:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1091,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12680:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1092,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12685:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1084,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"12638:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12638:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"EmitStatement","src":"12633:60:1"},{"expression":{"arguments":[{"id":1096,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12724:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12734:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12748:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12740:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"12740:7:1","typeDescriptions":{}}},"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12740:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12752:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1103,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12757:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12766:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1095,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"12704:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12704:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"12704:65:1"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"11600:228:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"11842:10:1","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"from","nameLocation":"11870:4:1","nodeType":"VariableDeclaration","scope":1108,"src":"11862:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"11862:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"ids","nameLocation":"11901:3:1","nodeType":"VariableDeclaration","scope":1108,"src":"11884:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11884:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ArrayTypeName","src":"11884:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"amounts","nameLocation":"11931:7:1","nodeType":"VariableDeclaration","scope":1108,"src":"11914:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"11914:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ArrayTypeName","src":"11914:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11852:92:1"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"11962:0:1"},"scope":1335,"src":"11833:943:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"13035:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13053:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1120,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13062:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13053:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13072:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13045:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13045:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"13045:71:1"},{"expression":{"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1125,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"13126:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1128,"indexExpression":{"id":1126,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13145:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13126:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1129,"indexExpression":{"id":1127,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13152:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13126:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1130,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13164:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13126:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1132,"nodeType":"ExpressionStatement","src":"13126:46:1"},{"eventCall":{"arguments":[{"id":1134,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13202:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13209:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13219:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1133,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"13187:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13187:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"EmitStatement","src":"13182:46:1"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"12782:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12921:18:1","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"owner","nameLocation":"12957:5:1","nodeType":"VariableDeclaration","scope":1140,"src":"12949:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"operator","nameLocation":"12980:8:1","nodeType":"VariableDeclaration","scope":1140,"src":"12972:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"12972:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"approved","nameLocation":"13003:8:1","nodeType":"VariableDeclaration","scope":1140,"src":"12998:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1114,"name":"bool","nodeType":"ElementaryTypeName","src":"12998:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12939:78:1"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"13035:0:1"},"scope":1335,"src":"12912:323:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"14383:2:1","statements":[]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"13241:925:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14180:20:1","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"operator","nameLocation":"14218:8:1","nodeType":"VariableDeclaration","scope":1159,"src":"14210:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"14210:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"from","nameLocation":"14244:4:1","nodeType":"VariableDeclaration","scope":1159,"src":"14236:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"14236:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"to","nameLocation":"14266:2:1","nodeType":"VariableDeclaration","scope":1159,"src":"14258:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"14258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"ids","nameLocation":"14295:3:1","nodeType":"VariableDeclaration","scope":1159,"src":"14278:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"14278:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ArrayTypeName","src":"14278:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"amounts","nameLocation":"14325:7:1","nodeType":"VariableDeclaration","scope":1159,"src":"14308:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"14308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1152,"nodeType":"ArrayTypeName","src":"14308:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"data","nameLocation":"14355:4:1","nodeType":"VariableDeclaration","scope":1159,"src":"14342:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1154,"name":"bytes","nodeType":"ElementaryTypeName","src":"14342:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14200:165:1"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[],"src":"14383:0:1"},"scope":1335,"src":"14171:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1177,"nodeType":"Block","src":"15529:2:1","statements":[]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"14391:922:1","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15327:19:1","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"operator","nameLocation":"15364:8:1","nodeType":"VariableDeclaration","scope":1178,"src":"15356:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"15356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"from","nameLocation":"15390:4:1","nodeType":"VariableDeclaration","scope":1178,"src":"15382:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"15382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"to","nameLocation":"15412:2:1","nodeType":"VariableDeclaration","scope":1178,"src":"15404:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"15404:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"ids","nameLocation":"15441:3:1","nodeType":"VariableDeclaration","scope":1178,"src":"15424:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"15424:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ArrayTypeName","src":"15424:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"amounts","nameLocation":"15471:7:1","nodeType":"VariableDeclaration","scope":1178,"src":"15454:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"15454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1171,"nodeType":"ArrayTypeName","src":"15454:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"data","nameLocation":"15501:4:1","nodeType":"VariableDeclaration","scope":1178,"src":"15488:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"15488:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15346:165:1"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"15529:0:1"},"scope":1335,"src":"15318:213:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"15730:532:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1193,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"15744:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15747:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"15744:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15744:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"15740:516:1","trueBody":{"id":1238,"nodeType":"Block","src":"15761:495:1","statements":[{"clauses":[{"block":{"id":1220,"nodeType":"Block","src":"15878:184:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"15900:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1210,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15912:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15929:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"15912:34:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15947:8:1","memberName":"selector","nodeType":"MemberAccess","src":"15912:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15900:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"15896:152:1","trueBody":{"id":1218,"nodeType":"Block","src":"15957:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15986:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1214,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15979:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15979:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"ExpressionStatement","src":"15979:50:1"}]}}]},"errorName":"","id":1221,"nodeType":"TryCatchClause","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"response","nameLocation":"15868:8:1","nodeType":"VariableDeclaration","scope":1221,"src":"15861:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1206,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15861:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15860:17:1"},"src":"15852:210:1"},{"block":{"id":1229,"nodeType":"Block","src":"16097:47:1","statements":[{"expression":{"arguments":[{"id":1226,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"16122:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1225,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16115:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16115:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"16115:14:1"}]},"errorName":"Error","id":1230,"nodeType":"TryCatchClause","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"reason","nameLocation":"16089:6:1","nodeType":"VariableDeclaration","scope":1230,"src":"16075:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1222,"name":"string","nodeType":"ElementaryTypeName","src":"16075:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16074:22:1"},"src":"16063:81:1"},{"block":{"id":1235,"nodeType":"Block","src":"16151:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16176:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""}],"id":1231,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16169:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16169:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"16169:62:1"}]},"errorName":"","id":1236,"nodeType":"TryCatchClause","src":"16145:101:1"}],"externalCall":{"arguments":[{"id":1200,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"15818:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1201,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"15828:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"15834:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1203,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"15838:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1204,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15846:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1197,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"15796:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1196,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15779:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15779:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15800:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"15779:38:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15779:72:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1237,"nodeType":"TryStatement","src":"15775:471:1"}]}}]},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"15546:30:1","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"operator","nameLocation":"15594:8:1","nodeType":"VariableDeclaration","scope":1241,"src":"15586:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"15586:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"from","nameLocation":"15620:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"15612:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"15612:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"to","nameLocation":"15642:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"15634:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"id","nameLocation":"15662:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"15654:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"15654:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"amount","nameLocation":"15682:6:1","nodeType":"VariableDeclaration","scope":1241,"src":"15674:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"15674:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"data","nameLocation":"15711:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"15698:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1189,"name":"bytes","nodeType":"ElementaryTypeName","src":"15698:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15576:145:1"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"15730:0:1"},"scope":1335,"src":"15537:725:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1305,"nodeType":"Block","src":"16486:574:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1258,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"16500:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16503:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"16500:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16500:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"IfStatement","src":"16496:558:1","trueBody":{"id":1303,"nodeType":"Block","src":"16517:537:1","statements":[{"clauses":[{"block":{"id":1285,"nodeType":"Block","src":"16671:189:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"16693:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1275,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"16705:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16722:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"16705:39:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16745:8:1","memberName":"selector","nodeType":"MemberAccess","src":"16705:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16693:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1284,"nodeType":"IfStatement","src":"16689:157:1","trueBody":{"id":1283,"nodeType":"Block","src":"16755:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16784:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1279,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16777:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16777:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"16777:50:1"}]}}]},"errorName":"","id":1286,"nodeType":"TryCatchClause","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"response","nameLocation":"16648:8:1","nodeType":"VariableDeclaration","scope":1286,"src":"16641:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1271,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16641:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16623:47:1"},"src":"16615:245:1"},{"block":{"id":1294,"nodeType":"Block","src":"16895:47:1","statements":[{"expression":{"arguments":[{"id":1291,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"16920:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1290,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16913:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16913:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"16913:14:1"}]},"errorName":"Error","id":1295,"nodeType":"TryCatchClause","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"reason","nameLocation":"16887:6:1","nodeType":"VariableDeclaration","scope":1295,"src":"16873:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"16873:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16872:22:1"},"src":"16861:81:1"},{"block":{"id":1300,"nodeType":"Block","src":"16949:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16974:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""}],"id":1296,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16967:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16967:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"ExpressionStatement","src":"16967:62:1"}]},"errorName":"","id":1301,"nodeType":"TryCatchClause","src":"16943:101:1"}],"externalCall":{"arguments":[{"id":1265,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"16579:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"16589:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1267,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"16595:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1268,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"16600:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1269,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"16609:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"16552:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1261,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"16535:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16535:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16556:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"16535:43:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16535:79:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1302,"nodeType":"TryStatement","src":"16531:513:1"}]}}]},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"16277:35:1","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"operator","nameLocation":"16330:8:1","nodeType":"VariableDeclaration","scope":1306,"src":"16322:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"16322:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"from","nameLocation":"16356:4:1","nodeType":"VariableDeclaration","scope":1306,"src":"16348:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"16348:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"16378:2:1","nodeType":"VariableDeclaration","scope":1306,"src":"16370:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"16370:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"ids","nameLocation":"16407:3:1","nodeType":"VariableDeclaration","scope":1306,"src":"16390:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"16390:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ArrayTypeName","src":"16390:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"amounts","nameLocation":"16437:7:1","nodeType":"VariableDeclaration","scope":1306,"src":"16420:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"16420:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1252,"nodeType":"ArrayTypeName","src":"16420:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"data","nameLocation":"16467:4:1","nodeType":"VariableDeclaration","scope":1306,"src":"16454:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"16454:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16312:165:1"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[],"src":"16486:0:1"},"scope":1335,"src":"16268:792:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1333,"nodeType":"Block","src":"17150:109:1","statements":[{"assignments":[1318],"declarations":[{"constant":false,"id":1318,"mutability":"mutable","name":"array","nameLocation":"17177:5:1","nodeType":"VariableDeclaration","scope":1333,"src":"17160:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"17160:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"17160:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1324,"initialValue":{"arguments":[{"hexValue":"31","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17199:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17185:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"17189:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1320,"nodeType":"ArrayTypeName","src":"17189:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17185:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17160:41:1"},{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1325,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17211:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1327,"indexExpression":{"hexValue":"30","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17217:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17211:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1328,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"17222:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17211:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"17211:18:1"},{"expression":{"id":1331,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17247:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"17240:12:1"}]},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"17075:17:1","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"element","nameLocation":"17101:7:1","nodeType":"VariableDeclaration","scope":1334,"src":"17093:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"17093:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17092:17:1"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"17132:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"17132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ArrayTypeName","src":"17132:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17131:18:1"},"scope":1335,"src":"17066:193:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1336,"src":"570:16691:1","usedErrors":[]}],"src":"109:17153:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1457],"IERC165":[2092]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":2093,"src":"135:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1340,"name":"IERC165","nameLocations":["372:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2092,"src":"372:7:2"},"id":1341,"nodeType":"InheritanceSpecifier","src":"372:7:2"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"184:165:2","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1457,"linearizedBaseContracts":[1457,2092],"name":"IERC1155","nameLocation":"360:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"386:121:2","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1354,"name":"TransferSingle","nameLocation":"518:14:2","nodeType":"EventDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"549:8:2","nodeType":"VariableDeclaration","scope":1354,"src":"533:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"575:4:2","nodeType":"VariableDeclaration","scope":1354,"src":"559:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"597:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"581:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"609:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"601:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"621:5:2","nodeType":"VariableDeclaration","scope":1354,"src":"613:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:2"},"src":"512:116:2"},{"anonymous":false,"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"634:144:2","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1369,"name":"TransferBatch","nameLocation":"789:13:2","nodeType":"EventDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"828:8:2","nodeType":"VariableDeclaration","scope":1369,"src":"812:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1359,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"862:4:2","nodeType":"VariableDeclaration","scope":1369,"src":"846:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"892:2:2","nodeType":"VariableDeclaration","scope":1369,"src":"876:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"914:3:2","nodeType":"VariableDeclaration","scope":1369,"src":"904:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ArrayTypeName","src":"904:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1367,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"937:6:2","nodeType":"VariableDeclaration","scope":1369,"src":"927:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1366,"nodeType":"ArrayTypeName","src":"927:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:2"},"src":"783:167:2"},{"anonymous":false,"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"956:147:2","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1378,"name":"ApprovalForAll","nameLocation":"1114:14:2","nodeType":"EventDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1145:7:2","nodeType":"VariableDeclaration","scope":1378,"src":"1129:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1170:8:2","nodeType":"VariableDeclaration","scope":1378,"src":"1154:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1185:8:2","nodeType":"VariableDeclaration","scope":1378,"src":"1180:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1375,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:2"},"src":"1108:87:2"},{"anonymous":false,"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1201:343:2","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1385,"name":"URI","nameLocation":"1555:3:2","nodeType":"EventDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1566:5:2","nodeType":"VariableDeclaration","scope":1385,"src":"1559:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1383,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1589:2:2","nodeType":"VariableDeclaration","scope":1385,"src":"1573:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:2"},"src":"1549:44:2"},{"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"1599:173:2","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1786:9:2","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"account","nameLocation":"1804:7:2","nodeType":"VariableDeclaration","scope":1395,"src":"1796:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"id","nameLocation":"1821:2:2","nodeType":"VariableDeclaration","scope":1395,"src":"1813:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:2"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"1848:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:2"},"scope":1457,"src":"1777:80:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"1863:188:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1408,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2065:14:2","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"accounts","nameLocation":"2099:8:2","nodeType":"VariableDeclaration","scope":1408,"src":"2080:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"2080:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1398,"nodeType":"ArrayTypeName","src":"2080:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"ids","nameLocation":"2128:3:2","nodeType":"VariableDeclaration","scope":1408,"src":"2109:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ArrayTypeName","src":"2109:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:53:2"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1408,"src":"2180:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1405,"nodeType":"ArrayTypeName","src":"2180:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2179:18:2"},"scope":1457,"src":"2056:142:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"2204:248:2","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2466:17:2","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"operator","nameLocation":"2492:8:2","nodeType":"VariableDeclaration","scope":1416,"src":"2484:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"approved","nameLocation":"2507:8:2","nodeType":"VariableDeclaration","scope":1416,"src":"2502:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"2502:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2483:33:2"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"2525:0:2"},"scope":1457,"src":"2457:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"2532:135:2","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1426,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2681:16:2","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"account","nameLocation":"2706:7:2","nodeType":"VariableDeclaration","scope":1426,"src":"2698:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"2698:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"operator","nameLocation":"2723:8:2","nodeType":"VariableDeclaration","scope":1426,"src":"2715:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2697:35:2"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"2756:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"2756:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2755:6:2"},"scope":1457,"src":"2672:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"2768:556:2","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1440,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3338:16:2","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"from","nameLocation":"3372:4:2","nodeType":"VariableDeclaration","scope":1440,"src":"3364:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"to","nameLocation":"3394:2:2","nodeType":"VariableDeclaration","scope":1440,"src":"3386:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"id","nameLocation":"3414:2:2","nodeType":"VariableDeclaration","scope":1440,"src":"3406:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"amount","nameLocation":"3434:6:2","nodeType":"VariableDeclaration","scope":1440,"src":"3426:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3426:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"data","nameLocation":"3465:4:2","nodeType":"VariableDeclaration","scope":1440,"src":"3450:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1436,"name":"bytes","nodeType":"ElementaryTypeName","src":"3450:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3354:121:2"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"3484:0:2"},"scope":1457,"src":"3329:156:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"3491:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1456,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3895:21:2","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"from","nameLocation":"3934:4:2","nodeType":"VariableDeclaration","scope":1456,"src":"3926:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"3926:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"to","nameLocation":"3956:2:2","nodeType":"VariableDeclaration","scope":1456,"src":"3948:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"3948:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"ids","nameLocation":"3987:3:2","nodeType":"VariableDeclaration","scope":1456,"src":"3968:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ArrayTypeName","src":"3968:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"amounts","nameLocation":"4019:7:2","nodeType":"VariableDeclaration","scope":1456,"src":"4000:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"4000:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ArrayTypeName","src":"4000:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"data","nameLocation":"4051:4:2","nodeType":"VariableDeclaration","scope":1456,"src":"4036:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"4036:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3916:145:2"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[],"src":"4070:0:2"},"scope":1457,"src":"3886:185:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1458,"src":"350:3723:2","usedErrors":[]}],"src":"110:3964:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1498],"IERC165":[2092]},"id":1499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":2093,"src":"143:47:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1462,"name":"IERC165","nameLocations":["262:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2092,"src":"262:7:3"},"id":1463,"nodeType":"InheritanceSpecifier","src":"262:7:3"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"192:39:3","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1498,"linearizedBaseContracts":[1498,2092],"name":"IERC1155Receiver","nameLocation":"242:16:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"276:826:3","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1479,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:3","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"operator","nameLocation":"1151:8:3","nodeType":"VariableDeclaration","scope":1479,"src":"1143:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"from","nameLocation":"1177:4:3","nodeType":"VariableDeclaration","scope":1479,"src":"1169:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"id","nameLocation":"1199:2:3","nodeType":"VariableDeclaration","scope":1479,"src":"1191:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"1219:5:3","nodeType":"VariableDeclaration","scope":1479,"src":"1211:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"data","nameLocation":"1249:4:3","nodeType":"VariableDeclaration","scope":1479,"src":"1234:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1473,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:3"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"1278:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1476,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:3"},"scope":1498,"src":"1107:179:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"1292:994:3","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1497,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:3","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"operator","nameLocation":"2340:8:3","nodeType":"VariableDeclaration","scope":1497,"src":"2332:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"from","nameLocation":"2366:4:3","nodeType":"VariableDeclaration","scope":1497,"src":"2358:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"ids","nameLocation":"2399:3:3","nodeType":"VariableDeclaration","scope":1497,"src":"2380:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ArrayTypeName","src":"2380:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"values","nameLocation":"2431:6:3","nodeType":"VariableDeclaration","scope":1497,"src":"2412:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ArrayTypeName","src":"2412:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"data","nameLocation":"2462:4:3","nodeType":"VariableDeclaration","scope":1497,"src":"2447:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1491,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:3"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"2491:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:3"},"scope":1498,"src":"2291:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1499,"src":"232:2269:3","usedErrors":[]}],"src":"118:2384:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1457],"IERC1155MetadataURI":[1513],"IERC165":[2092]},"id":1514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1500,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1514,"sourceUnit":1458,"src":"142:25:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1503,"name":"IERC1155","nameLocations":["397:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"397:8:4"},"id":1504,"nodeType":"InheritanceSpecifier","src":"397:8:4"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"169:194:4","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1513,"linearizedBaseContracts":[1513,1457,2092],"name":"IERC1155MetadataURI","nameLocation":"374:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"412:192:4","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1512,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"618:3:4","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"id","nameLocation":"630:2:4","nodeType":"VariableDeclaration","scope":1512,"src":"622:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:12:4"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"657:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1509,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:4"},"scope":1513,"src":"609:63:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1514,"src":"364:310:4","usedErrors":[]}],"src":"117:558:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1808]},"id":1809,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1515,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1808,"linearizedBaseContracts":[1808],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1530,"nodeType":"Block","src":"1241:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1524,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1465:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:5","memberName":"code","nodeType":"MemberAccess","src":"1465:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:5","memberName":"length","nodeType":"MemberAccess","src":"1465:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1523,"id":1529,"nodeType":"Return","src":"1458:30:5"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"216:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:5","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"account","nameLocation":"1203:7:5","nodeType":"VariableDeclaration","scope":1531,"src":"1195:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:5"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"1235:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1521,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:5"},"scope":1808,"src":"1175:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1564,"nodeType":"Block","src":"2483:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1542,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1808","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1808","typeString":"library Address"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2526:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"ExpressionStatement","src":"2493:73:5"},{"assignments":[1551,null],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"success","nameLocation":"2583:7:5","nodeType":"VariableDeclaration","scope":1564,"src":"2578:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1558,"initialValue":{"arguments":[{"hexValue":"","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1552,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2596:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:5","memberName":"call","nodeType":"MemberAccess","src":"2596:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1554,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:5"},{"expression":{"arguments":[{"id":1560,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"2647:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"ExpressionStatement","src":"2639:78:5"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"1501:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:5","nodeType":"VariableDeclaration","scope":1565,"src":"2431:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"amount","nameLocation":"2466:6:5","nodeType":"VariableDeclaration","scope":1565,"src":"2458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:5"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[],"src":"2483:0:5"},"scope":1808,"src":"2412:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1581,"nodeType":"Block","src":"3555:84:5","statements":[{"expression":{"arguments":[{"id":1576,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"3585:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1577,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"3593:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1575,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1582,1602],"referencedDeclaration":1602,"src":"3572:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1574,"id":1580,"nodeType":"Return","src":"3565:67:5"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"2730:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:5","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"target","nameLocation":"3496:6:5","nodeType":"VariableDeclaration","scope":1582,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"data","nameLocation":"3517:4:5","nodeType":"VariableDeclaration","scope":1582,"src":"3504:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1569,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:5"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1582,"src":"3541:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:5"},"scope":1808,"src":"3466:173:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"4008:76:5","statements":[{"expression":{"arguments":[{"id":1595,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"4047:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"4055:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1598,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"4064:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1594,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1622,1672],"referencedDeclaration":1672,"src":"4025:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1593,"id":1600,"nodeType":"Return","src":"4018:59:5"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"3645:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:5","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"target","nameLocation":"3900:6:5","nodeType":"VariableDeclaration","scope":1602,"src":"3892:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"data","nameLocation":"3929:4:5","nodeType":"VariableDeclaration","scope":1602,"src":"3916:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1586,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:5","nodeType":"VariableDeclaration","scope":1602,"src":"3943:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1588,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:5"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1602,"src":"3994:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:5"},"scope":1808,"src":"3861:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1621,"nodeType":"Block","src":"4589:111:5","statements":[{"expression":{"arguments":[{"id":1615,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"4628:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"4636:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4642:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1614,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1622,1672],"referencedDeclaration":1672,"src":"4606:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1613,"id":1620,"nodeType":"Return","src":"4599:94:5"}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"4090:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:5","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"target","nameLocation":"4494:6:5","nodeType":"VariableDeclaration","scope":1622,"src":"4486:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"data","nameLocation":"4523:4:5","nodeType":"VariableDeclaration","scope":1622,"src":"4510:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"4545:5:5","nodeType":"VariableDeclaration","scope":1622,"src":"4537:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:5"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1622,"src":"4575:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1611,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:5"},"scope":1808,"src":"4446:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1671,"nodeType":"Block","src":"5127:320:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1639,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1808","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1808","typeString":"library Address"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:5","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5159:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5145:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"5170:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5137:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"ExpressionStatement","src":"5137:81:5"},{"expression":{"arguments":[{"arguments":[{"id":1649,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"5247:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1648,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5236:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"ExpressionStatement","src":"5228:60:5"},{"assignments":[1655,1657],"declarations":[{"constant":false,"id":1655,"mutability":"mutable","name":"success","nameLocation":"5305:7:5","nodeType":"VariableDeclaration","scope":1671,"src":"5300:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1654,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:5","nodeType":"VariableDeclaration","scope":1671,"src":"5314:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1656,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1664,"initialValue":{"arguments":[{"id":1662,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"5367:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1658,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"5341:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:4:5","memberName":"call","nodeType":"MemberAccess","src":"5341:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"5360:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:5"},{"expression":{"arguments":[{"id":1666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"5406:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1667,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5415:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1668,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5427:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1665,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"5389:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1635,"id":1670,"nodeType":"Return","src":"5382:58:5"}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"4706:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:5","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"target","nameLocation":"4996:6:5","nodeType":"VariableDeclaration","scope":1672,"src":"4988:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"data","nameLocation":"5025:4:5","nodeType":"VariableDeclaration","scope":1672,"src":"5012:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"5047:5:5","nodeType":"VariableDeclaration","scope":1672,"src":"5039:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:5","nodeType":"VariableDeclaration","scope":1672,"src":"5062:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1630,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:5"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1672,"src":"5113:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1633,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:5"},"scope":1808,"src":"4948:499:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"5724:97:5","statements":[{"expression":{"arguments":[{"id":1683,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5760:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1684,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"5768:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1682,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1689,1724],"referencedDeclaration":1724,"src":"5741:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1681,"id":1687,"nodeType":"Return","src":"5734:80:5"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"5453:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:5","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"target","nameLocation":"5660:6:5","nodeType":"VariableDeclaration","scope":1689,"src":"5652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"data","nameLocation":"5681:4:5","nodeType":"VariableDeclaration","scope":1689,"src":"5668:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1676,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:5"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"5710:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1679,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:5"},"scope":1808,"src":"5624:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1723,"nodeType":"Block","src":"6163:228:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1703,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6192:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1702,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"6181:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6181:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"6173:67:5"},{"assignments":[1709,1711],"declarations":[{"constant":false,"id":1709,"mutability":"mutable","name":"success","nameLocation":"6257:7:5","nodeType":"VariableDeclaration","scope":1723,"src":"6252:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1708,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:5","nodeType":"VariableDeclaration","scope":1723,"src":"6266:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1716,"initialValue":{"arguments":[{"id":1714,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"6311:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1712,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6293:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6300:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:5"},{"expression":{"arguments":[{"id":1718,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6350:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1719,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6359:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1720,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"6371:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1717,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6333:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1700,"id":1722,"nodeType":"Return","src":"6326:58:5"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"5827:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:5","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"target","nameLocation":"6050:6:5","nodeType":"VariableDeclaration","scope":1724,"src":"6042:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"data","nameLocation":"6079:4:5","nodeType":"VariableDeclaration","scope":1724,"src":"6066:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1693,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:5","nodeType":"VariableDeclaration","scope":1724,"src":"6093:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1695,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:5"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1724,"src":"6149:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1698,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:5"},"scope":1808,"src":"6005:386:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"6667:101:5","statements":[{"expression":{"arguments":[{"id":1735,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"6705:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1736,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6713:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1734,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1741,1776],"referencedDeclaration":1776,"src":"6684:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1733,"id":1739,"nodeType":"Return","src":"6677:84:5"}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"6397:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:5","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"target","nameLocation":"6608:6:5","nodeType":"VariableDeclaration","scope":1741,"src":"6600:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1729,"mutability":"mutable","name":"data","nameLocation":"6629:4:5","nodeType":"VariableDeclaration","scope":1741,"src":"6616:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1728,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:5"},"returnParameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"6653:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1731,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:5"},"scope":1808,"src":"6570:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1775,"nodeType":"Block","src":"7109:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1755,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"7138:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1754,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"7127:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7127:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"7119:69:5"},{"assignments":[1761,1763],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"success","nameLocation":"7205:7:5","nodeType":"VariableDeclaration","scope":1775,"src":"7200:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1760,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:5","nodeType":"VariableDeclaration","scope":1775,"src":"7214:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1768,"initialValue":{"arguments":[{"id":1766,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"7261:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1764,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"7241:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7248:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7241:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:5"},{"expression":{"arguments":[{"id":1770,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"7300:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1771,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"7309:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1772,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7321:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1769,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7283:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1752,"id":1774,"nodeType":"Return","src":"7276:58:5"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"6774:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:5","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"target","nameLocation":"7001:6:5","nodeType":"VariableDeclaration","scope":1776,"src":"6993:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"data","nameLocation":"7030:4:5","nodeType":"VariableDeclaration","scope":1776,"src":"7017:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1745,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:5","nodeType":"VariableDeclaration","scope":1776,"src":"7044:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1747,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:5"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1776,"src":"7095:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1750,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:5"},"scope":1808,"src":"6954:387:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1806,"nodeType":"Block","src":"7721:582:5","statements":[{"condition":{"id":1788,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7735:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1804,"nodeType":"Block","src":"7792:505:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1792,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"7876:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7887:6:5","memberName":"length","nodeType":"MemberAccess","src":"7876:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1802,"nodeType":"Block","src":"8234:53:5","statements":[{"expression":{"arguments":[{"id":1799,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"8259:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1798,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8252:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1801,"nodeType":"ExpressionStatement","src":"8252:20:5"}]},"id":1803,"nodeType":"IfStatement","src":"7872:415:5","trueBody":{"id":1797,"nodeType":"Block","src":"7899:329:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:5"},"nodeType":"YulFunctionCall","src":"8114:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:5"},"nodeType":"YulFunctionCall","src":"8159:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:5"},"nodeType":"YulFunctionCall","src":"8152:44:5"},"nodeType":"YulExpressionStatement","src":"8152:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1781,"isOffset":false,"isSlot":false,"src":"8120:10:5","valueSize":1},{"declaration":1781,"isOffset":false,"isSlot":false,"src":"8167:10:5","valueSize":1}],"id":1796,"nodeType":"InlineAssembly","src":"8060:154:5"}]}}]},"id":1805,"nodeType":"IfStatement","src":"7731:566:5","trueBody":{"id":1791,"nodeType":"Block","src":"7744:42:5","statements":[{"expression":{"id":1789,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"7765:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1787,"id":1790,"nodeType":"Return","src":"7758:17:5"}]}}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"7347:209:5","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1807,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:5","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"success","nameLocation":"7601:7:5","nodeType":"VariableDeclaration","scope":1807,"src":"7596:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1778,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:5","nodeType":"VariableDeclaration","scope":1807,"src":"7618:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1780,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:5","nodeType":"VariableDeclaration","scope":1807,"src":"7651:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1782,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:5"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1807,"src":"7707:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1785,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:5"},"scope":1808,"src":"7561:742:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1809,"src":"194:8111:5","usedErrors":[]}],"src":"101:8205:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1830]},"id":1831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1810,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1830,"linearizedBaseContracts":[1830],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1819,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1815,"id":1818,"nodeType":"Return","src":"712:17:6"}]},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1830,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1825,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1824,"id":1827,"nodeType":"Return","src":"819:15:6"}]},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1830,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1831,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2056]},"id":2057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1832,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"126:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":2056,"linearizedBaseContracts":[2056],"name":"Strings","nameLocation":"169:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1836,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:7","nodeType":"VariableDeclaration","scope":2056,"src":"183:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1834,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1839,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:7","nodeType":"VariableDeclaration","scope":2056,"src":"247:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1837,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1917,"nodeType":"Block","src":"463:632:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"665:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"IfStatement","src":"661:51:7","trueBody":{"id":1852,"nodeType":"Block","src":"677:35:7","statements":[{"expression":{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1846,"id":1851,"nodeType":"Return","src":"691:10:7"}]}},{"assignments":[1855],"declarations":[{"constant":false,"id":1855,"mutability":"mutable","name":"temp","nameLocation":"729:4:7","nodeType":"VariableDeclaration","scope":1917,"src":"721:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1857,"initialValue":{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"736:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:7"},{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"digits","nameLocation":"759:6:7","nodeType":"VariableDeclaration","scope":1917,"src":"751:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"nodeType":"VariableDeclarationStatement","src":"751:14:7"},{"body":{"id":1871,"nodeType":"Block","src":"793:57:7","statements":[{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:7","subExpression":{"id":1864,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"807:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"807:8:7"},{"expression":{"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1867,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"829:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1870,"nodeType":"ExpressionStatement","src":"829:10:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"782:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"WhileStatement","src":"775:75:7"},{"assignments":[1874],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"buffer","nameLocation":"872:6:7","nodeType":"VariableDeclaration","scope":1917,"src":"859:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1873,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1879,"initialValue":{"arguments":[{"id":1877,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"891:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1875,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:7"},{"body":{"id":1910,"nodeType":"Block","src":"927:131:7","statements":[{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1883,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"941:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1886,"nodeType":"ExpressionStatement","src":"941:11:7"},{"expression":{"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1887,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"966:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1889,"indexExpression":{"id":1888,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"973:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1009:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:7","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1892,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:7","typeDescriptions":{}}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"990:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1890,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:7","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"983:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1905,"nodeType":"ExpressionStatement","src":"966:56:7"},{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1909,"nodeType":"ExpressionStatement","src":"1036:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"915:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1911,"nodeType":"WhileStatement","src":"908:150:7"},{"expression":{"arguments":[{"id":1914,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"1081:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1912,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:7","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1846,"id":1916,"nodeType":"Return","src":"1067:21:7"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"297:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:7","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"value","nameLocation":"418:5:7","nodeType":"VariableDeclaration","scope":1918,"src":"410:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:7"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1918,"src":"448:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1844,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:7"},"scope":2056,"src":"392:703:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1958,"nodeType":"Block","src":"1274:255:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"1288:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1932,"nodeType":"IfStatement","src":"1284:54:7","trueBody":{"id":1931,"nodeType":"Block","src":"1300:38:7","statements":[{"expression":{"hexValue":"30783030","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1925,"id":1930,"nodeType":"Return","src":"1314:13:7"}]}},{"assignments":[1934],"declarations":[{"constant":false,"id":1934,"mutability":"mutable","name":"temp","nameLocation":"1355:4:7","nodeType":"VariableDeclaration","scope":1958,"src":"1347:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1936,"initialValue":{"id":1935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"1362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:7"},{"assignments":[1938],"declarations":[{"constant":false,"id":1938,"mutability":"mutable","name":"length","nameLocation":"1385:6:7","nodeType":"VariableDeclaration","scope":1958,"src":"1377:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1940,"initialValue":{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:7"},{"body":{"id":1951,"nodeType":"Block","src":"1423:57:7","statements":[{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:7","subExpression":{"id":1944,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1437:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"1437:8:7"},{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1459:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"1459:10:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1412:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"nodeType":"WhileStatement","src":"1405:75:7"},{"expression":{"arguments":[{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"1508:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1955,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1515:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1959,2035,2055],"referencedDeclaration":2035,"src":"1496:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1496:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1925,"id":1957,"nodeType":"Return","src":"1489:33:7"}]},"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"1101:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:7","nodeType":"FunctionDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"value","nameLocation":"1229:5:7","nodeType":"VariableDeclaration","scope":1959,"src":"1221:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:7"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"1259:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1923,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:7"},"scope":2056,"src":"1200:329:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2034,"nodeType":"Block","src":"1742:351:7","statements":[{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:7","nodeType":"VariableDeclaration","scope":2034,"src":"1752:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1979,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1974,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1788:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:7"},{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1980,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1809:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1982,"indexExpression":{"hexValue":"30","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1985,"nodeType":"ExpressionStatement","src":"1809:15:7"},{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1986,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1834:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1988,"indexExpression":{"hexValue":"31","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1991,"nodeType":"ExpressionStatement","src":"1834:15:7"},{"body":{"id":2020,"nodeType":"Block","src":"1904:87:7","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2006,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1918:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2008,"indexExpression":{"id":2007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1925:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2009,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1930:12:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2013,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1943:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2015,"nodeType":"ExpressionStatement","src":"1918:37:7"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1969:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"1969:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1892:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"initializationExpression":{"assignments":[1993],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"i","nameLocation":"1872:1:7","nodeType":"VariableDeclaration","scope":2021,"src":"1864:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1999,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1995,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1880:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:7"},"loopExpression":{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:7","subExpression":{"id":2003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1901:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"1899:3:7"},"nodeType":"ForStatement","src":"1859:132:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2008:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2000:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"2000:55:7"},{"expression":{"arguments":[{"id":2031,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2079:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2029,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:7","typeDescriptions":{}}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1968,"id":2033,"nodeType":"Return","src":"2065:21:7"}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"1535:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:7","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"value","nameLocation":"1681:5:7","nodeType":"VariableDeclaration","scope":2035,"src":"1673:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"length","nameLocation":"1696:6:7","nodeType":"VariableDeclaration","scope":2035,"src":"1688:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:7"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"1727:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1966,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:7"},"scope":2056,"src":"1652:441:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"2318:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2048,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"2363:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2046,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:7","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:7","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2051,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"2371:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2043,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1959,2035,2055],"referencedDeclaration":2035,"src":"2335:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2042,"id":2053,"nodeType":"Return","src":"2328:59:7"}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"2099:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:7","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"addr","nameLocation":"2274:4:7","nodeType":"VariableDeclaration","scope":2055,"src":"2266:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:7"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"2303:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2040,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:7"},"scope":2056,"src":"2245:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2057,"src":"161:2235:7","usedErrors":[]}],"src":"101:2296:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2080],"IERC165":[2092]},"id":2081,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2058,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":2093,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2061,"name":"IERC165","nameLocations":["754:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2092,"src":"754:7:8"},"id":2062,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2080,"linearizedBaseContracts":[2080,2092],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2091],"body":{"id":2078,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2073,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2092_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2092_$","typeString":"type(contract IERC165)"}],"id":2072,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2092","typeString":"type(contract IERC165)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2070,"id":2077,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":2067,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":2079,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2064,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2068,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":2080,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2081,"src":"726:260:8","usedErrors":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2092]},"id":2093,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2082,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2092,"linearizedBaseContracts":[2092],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2091,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":2091,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2085,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2088,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":2092,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2093,"src":"405:447:9","usedErrors":[]}],"src":"100:753:9"},"id":9},"contracts/BasicIslandGenesis.sol":{"ast":{"absolutePath":"contracts/BasicIslandGenesis.sol","exportedSymbols":{"AlreadyMinted":[2106],"BasicIslandGenesis":[2388],"ContractsNotAllowedToMint":[2114],"ERC1155":[1335],"InvalidBuyPrice":[2110],"MintNotActive":[2104],"MintedOut":[2102],"Ownable":[112],"Strings":[2056],"TokenDoesNotExist":[2112],"TransferFailed":[2108]},"id":2389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2094,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"33:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2389,"sourceUnit":2057,"src":"61:66:10","symbolAliases":[{"foreign":{"id":2095,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"69:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2389,"sourceUnit":113,"src":"129:67:10","symbolAliases":[{"foreign":{"id":2097,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"137:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":2100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2389,"sourceUnit":1336,"src":"198:74:10","symbolAliases":[{"foreign":{"id":2099,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"206:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"errorSelector":"846fb9e2","id":2102,"name":"MintedOut","nameLocation":"282:9:10","nodeType":"ErrorDefinition","parameters":{"id":2101,"nodeType":"ParameterList","parameters":[],"src":"291:2:10"},"src":"276:18:10"},{"errorSelector":"914edb0f","id":2104,"name":"MintNotActive","nameLocation":"302:13:10","nodeType":"ErrorDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[],"src":"315:2:10"},"src":"296:22:10"},{"errorSelector":"ddefae28","id":2106,"name":"AlreadyMinted","nameLocation":"326:13:10","nodeType":"ErrorDefinition","parameters":{"id":2105,"nodeType":"ParameterList","parameters":[],"src":"339:2:10"},"src":"320:22:10"},{"errorSelector":"90b8ec18","id":2108,"name":"TransferFailed","nameLocation":"350:14:10","nodeType":"ErrorDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[],"src":"364:2:10"},"src":"344:23:10"},{"errorSelector":"36c64b27","id":2110,"name":"InvalidBuyPrice","nameLocation":"375:15:10","nodeType":"ErrorDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"src":"369:24:10"},{"errorSelector":"ceea21b6","id":2112,"name":"TokenDoesNotExist","nameLocation":"401:17:10","nodeType":"ErrorDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[],"src":"418:2:10"},"src":"395:26:10"},{"errorSelector":"21bd4017","id":2114,"name":"ContractsNotAllowedToMint","nameLocation":"429:25:10","nodeType":"ErrorDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"454:2:10"},"src":"423:34:10"},{"abstract":false,"baseContracts":[{"baseName":{"id":2115,"name":"ERC1155","nameLocations":["492:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"492:7:10"},"id":2116,"nodeType":"InheritanceSpecifier","src":"492:7:10"},{"baseName":{"id":2117,"name":"Ownable","nameLocations":["501:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"501:7:10"},"id":2118,"nodeType":"InheritanceSpecifier","src":"501:7:10"}],"canonicalName":"BasicIslandGenesis","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2388,"linearizedBaseContracts":[2388,112,1335,1513,1457,2080,2092,1830],"name":"BasicIslandGenesis","nameLocation":"470:18:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2121,"libraryName":{"id":2119,"name":"Strings","nameLocations":["522:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"522:7:10"},"nodeType":"UsingForDirective","src":"516:26:10","typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"534:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2123,"mutability":"mutable","name":"_baseURI","nameLocation":"565:8:10","nodeType":"VariableDeclaration","scope":2388,"src":"550:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2122,"name":"string","nodeType":"ElementaryTypeName","src":"550:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2125,"mutability":"mutable","name":"_mintOpen","nameLocation":"593:9:10","nodeType":"VariableDeclaration","scope":2388,"src":"580:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2124,"name":"bool","nodeType":"ElementaryTypeName","src":"580:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"functionSelector":"06fdde03","id":2128,"mutability":"mutable","name":"name","nameLocation":"625:4:10","nodeType":"VariableDeclaration","scope":2388,"src":"611:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2126,"name":"string","nodeType":"ElementaryTypeName","src":"611:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"42617369632049736c616e642047656e65736973","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"632:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e053beb58a81da29caeaf6270831c7fda40df2de0edd1843c54305db1b33b6ac","typeString":"literal_string \"Basic Island Genesis\""},"value":"Basic Island Genesis"},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":2131,"mutability":"mutable","name":"symbol","nameLocation":"675:6:10","nodeType":"VariableDeclaration","scope":2388,"src":"661:29:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2129,"name":"string","nodeType":"ElementaryTypeName","src":"661:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"44455343","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"684:6:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb586d069289d751cff23d105f39d8b8cf93527ea2052842afff91fa2d64fa19","typeString":"literal_string \"DESC\""},"value":"DESC"},"visibility":"public"},{"constant":false,"id":2133,"mutability":"mutable","name":"_mintCount","nameLocation":"715:10:10","nodeType":"VariableDeclaration","scope":2388,"src":"699:26:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"0387da42","id":2140,"mutability":"mutable","name":"_mintPrice","nameLocation":"747:10:10","nodeType":"VariableDeclaration","scope":2388,"src":"732:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_250000000000000000000_by_1","typeString":"int_const 250000000000000000000"},"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"323530","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"760:3:10","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"766:6:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"760:12:10","typeDescriptions":{"typeIdentifier":"t_rational_250000000000000000000_by_1","typeString":"int_const 250000000000000000000"}},"visibility":"public"},{"constant":true,"id":2143,"mutability":"constant","name":"ID","nameLocation":"818:2:10","nodeType":"VariableDeclaration","scope":2388,"src":"793:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2146,"mutability":"constant","name":"RESERVE","nameLocation":"856:7:10","nodeType":"VariableDeclaration","scope":2388,"src":"831:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"866:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"private"},{"constant":true,"id":2149,"mutability":"constant","name":"MAX_PER_WALLET","nameLocation":"900:14:10","nodeType":"VariableDeclaration","scope":2388,"src":"875:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"917:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":2152,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"950:10:10","nodeType":"VariableDeclaration","scope":2388,"src":"925:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"963:3:10","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"private"},{"constant":false,"id":2156,"mutability":"mutable","name":"_amountMinted","nameLocation":"1011:13:10","nodeType":"VariableDeclaration","scope":2388,"src":"975:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2155,"keyType":{"id":2153,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"975:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2207,"nodeType":"Block","src":"1072:385:10","statements":[{"condition":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1087:10:10","subExpression":{"id":2160,"name":"_mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1088:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2165,"nodeType":"IfStatement","src":"1083:38:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2162,"name":"MintNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"1106:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1106:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2164,"nodeType":"RevertStatement","src":"1099:22:10"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1136:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:5:10","memberName":"value","nodeType":"MemberAccess","src":"1136:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"_mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"1148:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2169,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"1161:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1148:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1136:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2175,"nodeType":"IfStatement","src":"1132:61:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2172,"name":"InvalidBuyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"1176:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"RevertStatement","src":"1169:24:10"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2176,"name":"_amountMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"1208:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2179,"indexExpression":{"expression":{"id":2177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1222:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1226:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1222:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1208:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2180,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"1236:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1208:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2182,"name":"MAX_PER_WALLET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1245:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1208:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2187,"nodeType":"IfStatement","src":"1204:92:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2184,"name":"AlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1281:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1281:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"RevertStatement","src":"1274:22:10"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2188,"name":"_mintCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"1311:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2189,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"1324:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1311:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2191,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1333:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1311:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2196,"nodeType":"IfStatement","src":"1307:56:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2193,"name":"MintedOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"1352:9:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1352:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2195,"nodeType":"RevertStatement","src":"1345:18:10"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1378:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1382:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1378:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2199,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"1392:2:10","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1395:6:10","memberName":"origin","nodeType":"MemberAccess","src":"1392:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1378:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2205,"nodeType":"IfStatement","src":"1374:63:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2202,"name":"ContractsNotAllowedToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"1410:25:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1410:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2204,"nodeType":"RevertStatement","src":"1403:34:10"}},{"id":2206,"nodeType":"PlaceholderStatement","src":"1448:1:10"}]},"id":2208,"name":"allowedToMint","nameLocation":"1042:13:10","nodeType":"ModifierDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"amount","nameLocation":"1064:6:10","nodeType":"VariableDeclaration","scope":2208,"src":"1056:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1055:16:10"},"src":"1033:424:10","virtual":false,"visibility":"internal"},{"body":{"id":2233,"nodeType":"Block","src":"1525:104:10","statements":[{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2218,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"1536:8:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2219,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1547:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1536:15:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2221,"nodeType":"ExpressionStatement","src":"1536:15:10"},{"expression":{"arguments":[{"id":2223,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1568:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2224,"name":"ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"1574:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2225,"name":"RESERVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"1578:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1587:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2222,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1562:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1562:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"1562:28:10"},{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2229,"name":"_mintCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"1601:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2230,"name":"RESERVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"1614:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"nodeType":"ExpressionStatement","src":"1601:20:10"}]},"id":2234,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2215,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1519:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2216,"kind":"baseConstructorSpecifier","modifierName":{"id":2214,"name":"ERC1155","nameLocations":["1511:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"1511:7:10"},"nodeType":"ModifierInvocation","src":"1511:13:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"uri_","nameLocation":"1491:4:10","nodeType":"VariableDeclaration","scope":2234,"src":"1477:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2209,"name":"string","nodeType":"ElementaryTypeName","src":"1477:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"addr","nameLocation":"1505:4:10","nodeType":"VariableDeclaration","scope":2234,"src":"1497:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1476:34:10"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[],"src":"1525:0:10"},"scope":2388,"src":"1465:164:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2262,"nodeType":"Block","src":"1770:129:10","statements":[{"expression":{"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2243,"name":"_amountMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"1781:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2246,"indexExpression":{"expression":{"id":2244,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1795:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1795:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1781:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2247,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1810:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2249,"nodeType":"ExpressionStatement","src":"1781:35:10"},{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2250,"name":"_mintCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"1827:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2251,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1841:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1827:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ExpressionStatement","src":"1827:20:10"},{"expression":{"arguments":[{"expression":{"id":2255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1864:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1864:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2257,"name":"ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"1876:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1888:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2254,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1858:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1858:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"ExpressionStatement","src":"1858:33:10"}]},"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"1637:58:10","text":"@notice mint and sends the token to the callers address"},"functionSelector":"a0712d68","id":2263,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2240,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1762:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2241,"kind":"modifierInvocation","modifierName":{"id":2239,"name":"allowedToMint","nameLocations":["1748:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2208,"src":"1748:13:10"},"nodeType":"ModifierInvocation","src":"1748:21:10"}],"name":"mint","nameLocation":"1710:4:10","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"amount","nameLocation":"1723:6:10","nodeType":"VariableDeclaration","scope":2263,"src":"1715:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:16:10"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[],"src":"1770:0:10"},"scope":2388,"src":"1701:198:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2279,"nodeType":"Block","src":"1988:68:10","statements":[{"expression":{"condition":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1999:10:10","subExpression":{"id":2269,"name":"_mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2000:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2274,"name":"_mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2031:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2043:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2031:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1999:49:10","trueExpression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"_mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2012:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2024:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2012:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"ExpressionStatement","src":"1999:49:10"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"1907:34:10","text":"@notice Toggle mint on and off"},"functionSelector":"d3dd5fe0","id":2280,"implemented":true,"kind":"function","modifiers":[{"id":2267,"kind":"modifierInvocation","modifierName":{"id":2266,"name":"onlyOwner","nameLocations":["1978:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1978:9:10"},"nodeType":"ModifierInvocation","src":"1978:9:10"}],"name":"toggleMint","nameLocation":"1956:10:10","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"1966:2:10"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[],"src":"1988:0:10"},"scope":2388,"src":"1947:109:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2292,"nodeType":"Block","src":"2166:41:10","statements":[{"expression":{"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2288,"name":"_mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2177:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2289,"name":"mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"2190:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2177:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2291,"nodeType":"ExpressionStatement","src":"2177:22:10"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"2064:33:10","text":"@notice changes the mint price"},"functionSelector":"3fd17366","id":2293,"implemented":true,"kind":"function","modifiers":[{"id":2286,"kind":"modifierInvocation","modifierName":{"id":2285,"name":"onlyOwner","nameLocations":["2156:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2156:9:10"},"nodeType":"ModifierInvocation","src":"2156:9:10"}],"name":"changeMintPrice","nameLocation":"2112:15:10","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"mintPrice","nameLocation":"2136:9:10","nodeType":"VariableDeclaration","scope":2293,"src":"2128:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2128:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2127:19:10"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[],"src":"2166:0:10"},"scope":2388,"src":"2103:104:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2301,"nodeType":"Block","src":"2345:36:10","statements":[{"expression":{"id":2299,"name":"_mintCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2363:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2298,"id":2300,"nodeType":"Return","src":"2356:17:10"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"2215:63:10","text":"@return total Basic Island Nft minted so far for token id 1"},"functionSelector":"01ffeaa4","id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"totalAmountMinted","nameLocation":"2293:17:10","nodeType":"FunctionDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"2310:2:10"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"2336:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:9:10"},"scope":2388,"src":"2284:97:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2314,"nodeType":"Block","src":"2514:48:10","statements":[{"expression":{"baseExpression":{"id":2310,"name":"_amountMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"2532:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2312,"indexExpression":{"id":2311,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2546:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2532:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2309,"id":2313,"nodeType":"Return","src":"2525:29:10"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"2389:48:10","text":"@return the amount to token minted by account"},"functionSelector":"438a67e7","id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"amountMinted","nameLocation":"2452:12:10","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"account","nameLocation":"2473:7:10","nodeType":"VariableDeclaration","scope":2315,"src":"2465:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:17:10"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"2505:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2504:9:10"},"scope":2388,"src":"2443:119:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2323,"nodeType":"Block","src":"2686:35:10","statements":[{"expression":{"id":2321,"name":"_mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2704:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2320,"id":2322,"nodeType":"Return","src":"2697:16:10"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"2570:61:10","text":"@return _mintActive true if mint is active and vice versa"},"functionSelector":"1865c57d","id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"getState","nameLocation":"2646:8:10","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[],"src":"2654:2:10"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2324,"src":"2680:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"2680:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2679:6:10"},"scope":2388,"src":"2637:84:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[200],"body":{"id":2352,"nodeType":"Block","src":"2825:133:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2840:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2334,"name":"ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2846:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2840:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2339,"nodeType":"IfStatement","src":"2836:40:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2336,"name":"TokenDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2857:17:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2338,"nodeType":"RevertStatement","src":"2850:26:10"}},{"expression":{"arguments":[{"arguments":[{"id":2344,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2918:8:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":2347,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2945:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2345,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2928:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2056_$","typeString":"type(library Strings)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2936:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"2928:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2342,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2901:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2905:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"2901:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2894:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2340,"name":"string","nodeType":"ElementaryTypeName","src":"2894:6:10","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2332,"id":2351,"nodeType":"Return","src":"2887:63:10"}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"2729:20:10","text":"@return tokenUri"},"functionSelector":"0e89341c","id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2764:3:10","nodeType":"FunctionDefinition","overrides":{"id":2329,"nodeType":"OverrideSpecifier","overrides":[],"src":"2792:8:10"},"parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"id","nameLocation":"2776:2:10","nodeType":"VariableDeclaration","scope":2353,"src":"2768:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:12:10"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"2810:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2330,"name":"string","nodeType":"ElementaryTypeName","src":"2810:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2809:15:10"},"scope":2388,"src":"2755:203:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2386,"nodeType":"Block","src":"3068:180:10","statements":[{"assignments":[2360],"declarations":[{"constant":false,"id":2360,"mutability":"mutable","name":"balance","nameLocation":"3087:7:10","nodeType":"VariableDeclaration","scope":2386,"src":"3079:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2366,"initialValue":{"expression":{"arguments":[{"id":2363,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3105:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_BasicIslandGenesis_$2388","typeString":"contract BasicIslandGenesis"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasicIslandGenesis_$2388","typeString":"contract BasicIslandGenesis"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3097:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"3097:7:10","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3097:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3111:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3097:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3079:39:10"},{"assignments":[2368,null],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"success","nameLocation":"3135:7:10","nodeType":"VariableDeclaration","scope":2386,"src":"3130:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2367,"name":"bool","nodeType":"ElementaryTypeName","src":"3130:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2379,"initialValue":{"arguments":[{"hexValue":"","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3189:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3156:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3160:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3156:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3148:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"3148:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3168:4:10","memberName":"call","nodeType":"MemberAccess","src":"3148:24:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2375,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"3180:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3148:40:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3129:63:10"},{"condition":{"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3207:8:10","subExpression":{"id":2380,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"3208:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2385,"nodeType":"IfStatement","src":"3203:37:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2382,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"3224:14:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2384,"nodeType":"RevertStatement","src":"3217:23:10"}}]},"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"2966:55:10","text":"@notice withdraws the matic in the contract to _addr"},"functionSelector":"d4e93292","id":2387,"implemented":true,"kind":"function","modifiers":[{"id":2357,"kind":"modifierInvocation","modifierName":{"id":2356,"name":"onlyOwner","nameLocations":["3058:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3058:9:10"},"nodeType":"ModifierInvocation","src":"3058:9:10"}],"name":"withdrawal","nameLocation":"3036:10:10","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"3046:2:10"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[],"src":"3068:0:10"},"scope":2388,"src":"3027:221:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2389,"src":"461:2790:10","usedErrors":[2102,2104,2106,2108,2110,2112,2114]}],"src":"33:3220:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"constructor":{"details":"See {_setURI}."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_setURI_668":{"entryPoint":79,"id":668,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":377,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":503,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":248,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":100,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":279,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":695,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":584,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1016,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":831,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":977,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":851,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1171,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":333,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":716,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":642,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1141,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":194,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":841,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1109,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":595,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":147,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":891,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":120,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":125,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":115,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":110,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":130,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":732,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1096,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":949,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":745,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":901,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":944,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8245:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"423:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:11"},"nodeType":"YulFunctionCall","src":"433:12:11"},"nodeType":"YulExpressionStatement","src":"433:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:11"},{"body":{"nodeType":"YulBlock","src":"546:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:11"},"nodeType":"YulFunctionCall","src":"556:12:11"},"nodeType":"YulExpressionStatement","src":"556:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:11"},{"body":{"nodeType":"YulBlock","src":"628:54:11","statements":[{"nodeType":"YulAssignment","src":"638:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:11"},"nodeType":"YulFunctionCall","src":"652:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:11"},"nodeType":"YulFunctionCall","src":"668:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:11"},"nodeType":"YulFunctionCall","src":"648:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:11","type":""}],"src":"580:102:11"},{"body":{"nodeType":"YulBlock","src":"716:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:11"},"nodeType":"YulFunctionCall","src":"726:88:11"},"nodeType":"YulExpressionStatement","src":"726:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:11"},"nodeType":"YulFunctionCall","src":"823:15:11"},"nodeType":"YulExpressionStatement","src":"823:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:11"},"nodeType":"YulFunctionCall","src":"847:15:11"},"nodeType":"YulExpressionStatement","src":"847:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:11"},{"body":{"nodeType":"YulBlock","src":"917:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:11"},"nodeType":"YulFunctionCall","src":"957:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:11"},"nodeType":"YulFunctionCall","src":"945:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:11"},"nodeType":"YulFunctionCall","src":"1098:18:11"},"nodeType":"YulExpressionStatement","src":"1098:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:11"},"nodeType":"YulFunctionCall","src":"1036:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:11"},"nodeType":"YulFunctionCall","src":"1072:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:11"},"nodeType":"YulFunctionCall","src":"1033:62:11"},"nodeType":"YulIf","src":"1030:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:11"},"nodeType":"YulFunctionCall","src":"1127:22:11"},"nodeType":"YulExpressionStatement","src":"1127:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:11","type":""}],"src":"874:281:11"},{"body":{"nodeType":"YulBlock","src":"1202:88:11","statements":[{"nodeType":"YulAssignment","src":"1212:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:11"},"nodeType":"YulFunctionCall","src":"1222:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:11"},"nodeType":"YulFunctionCall","src":"1251:33:11"},"nodeType":"YulExpressionStatement","src":"1251:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:11","type":""}],"src":"1161:129:11"},{"body":{"nodeType":"YulBlock","src":"1363:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:11"},"nodeType":"YulFunctionCall","src":"1470:18:11"},"nodeType":"YulExpressionStatement","src":"1470:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:11"},"nodeType":"YulFunctionCall","src":"1437:30:11"},"nodeType":"YulIf","src":"1434:56:11"},{"nodeType":"YulAssignment","src":"1500:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:11"},"nodeType":"YulFunctionCall","src":"1508:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:11"}]},{"nodeType":"YulAssignment","src":"1574:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:11"},"nodeType":"YulFunctionCall","src":"1582:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:11"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:11","type":""}],"src":"1296:308:11"},{"body":{"nodeType":"YulBlock","src":"1672:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:11"},"nodeType":"YulFunctionCall","src":"1772:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:11"},"nodeType":"YulFunctionCall","src":"1791:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:11"},"nodeType":"YulFunctionCall","src":"1785:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:11"},"nodeType":"YulFunctionCall","src":"1765:39:11"},"nodeType":"YulExpressionStatement","src":"1765:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:11"},"nodeType":"YulFunctionCall","src":"1709:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:11","statements":[{"nodeType":"YulAssignment","src":"1725:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:11"},"nodeType":"YulFunctionCall","src":"1730:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:11","statements":[]},"src":"1701:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:11"},"nodeType":"YulFunctionCall","src":"1830:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:11"},"nodeType":"YulFunctionCall","src":"1823:27:11"},"nodeType":"YulExpressionStatement","src":"1823:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:11","type":""}],"src":"1610:246:11"},{"body":{"nodeType":"YulBlock","src":"1957:339:11","statements":[{"nodeType":"YulAssignment","src":"1967:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:11"},"nodeType":"YulFunctionCall","src":"1992:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:11"},"nodeType":"YulFunctionCall","src":"1976:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:11"},"nodeType":"YulFunctionCall","src":"2051:21:11"},"nodeType":"YulExpressionStatement","src":"2051:21:11"},{"nodeType":"YulVariableDeclaration","src":"2081:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:11"},"nodeType":"YulFunctionCall","src":"2092:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:11"},"nodeType":"YulFunctionCall","src":"2148:79:11"},"nodeType":"YulExpressionStatement","src":"2148:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:11"},"nodeType":"YulFunctionCall","src":"2123:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:11"},"nodeType":"YulFunctionCall","src":"2120:25:11"},"nodeType":"YulIf","src":"2117:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:11"},"nodeType":"YulFunctionCall","src":"2238:52:11"},"nodeType":"YulExpressionStatement","src":"2238:52:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:11","type":""}],"src":"1862:434:11"},{"body":{"nodeType":"YulBlock","src":"2389:282:11","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:11"},"nodeType":"YulFunctionCall","src":"2440:79:11"},"nodeType":"YulExpressionStatement","src":"2440:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:11"},"nodeType":"YulFunctionCall","src":"2413:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:11"},"nodeType":"YulFunctionCall","src":"2409:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:11"},"nodeType":"YulFunctionCall","src":"2402:35:11"},"nodeType":"YulIf","src":"2399:122:11"},{"nodeType":"YulVariableDeclaration","src":"2530:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:11"},"nodeType":"YulFunctionCall","src":"2544:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:11"},"nodeType":"YulFunctionCall","src":"2634:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:11"},"nodeType":"YulFunctionCall","src":"2575:90:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:11","type":""}],"src":"2316:355:11"},{"body":{"nodeType":"YulBlock","src":"2764:437:11","statements":[{"body":{"nodeType":"YulBlock","src":"2810:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2812:77:11"},"nodeType":"YulFunctionCall","src":"2812:79:11"},"nodeType":"YulExpressionStatement","src":"2812:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2785:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2781:3:11"},"nodeType":"YulFunctionCall","src":"2781:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2806:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2777:3:11"},"nodeType":"YulFunctionCall","src":"2777:32:11"},"nodeType":"YulIf","src":"2774:119:11"},{"nodeType":"YulBlock","src":"2903:291:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2918:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:11"},"nodeType":"YulFunctionCall","src":"2938:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2932:5:11"},"nodeType":"YulFunctionCall","src":"2932:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2922:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3003:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3005:77:11"},"nodeType":"YulFunctionCall","src":"3005:79:11"},"nodeType":"YulExpressionStatement","src":"3005:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2975:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2983:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2972:2:11"},"nodeType":"YulFunctionCall","src":"2972:30:11"},"nodeType":"YulIf","src":"2969:117:11"},{"nodeType":"YulAssignment","src":"3100:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3156:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3167:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3152:3:11"},"nodeType":"YulFunctionCall","src":"3152:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3176:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3110:41:11"},"nodeType":"YulFunctionCall","src":"3110:74:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3100:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2734:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2745:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2757:6:11","type":""}],"src":"2677:524:11"},{"body":{"nodeType":"YulBlock","src":"3266:40:11","statements":[{"nodeType":"YulAssignment","src":"3277:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3293:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3287:5:11"},"nodeType":"YulFunctionCall","src":"3287:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3277:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3259:6:11","type":""}],"src":"3207:99:11"},{"body":{"nodeType":"YulBlock","src":"3340:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3360:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3350:6:11"},"nodeType":"YulFunctionCall","src":"3350:88:11"},"nodeType":"YulExpressionStatement","src":"3350:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3454:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3457:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3447:6:11"},"nodeType":"YulFunctionCall","src":"3447:15:11"},"nodeType":"YulExpressionStatement","src":"3447:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3478:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3481:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3471:6:11"},"nodeType":"YulFunctionCall","src":"3471:15:11"},"nodeType":"YulExpressionStatement","src":"3471:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3312:180:11"},{"body":{"nodeType":"YulBlock","src":"3549:269:11","statements":[{"nodeType":"YulAssignment","src":"3559:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3573:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"3579:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3569:3:11"},"nodeType":"YulFunctionCall","src":"3569:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3559:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"3590:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3620:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"3626:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3616:3:11"},"nodeType":"YulFunctionCall","src":"3616:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3594:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3667:51:11","statements":[{"nodeType":"YulAssignment","src":"3681:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3695:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3703:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3691:3:11"},"nodeType":"YulFunctionCall","src":"3691:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3681:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3647:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3640:6:11"},"nodeType":"YulFunctionCall","src":"3640:26:11"},"nodeType":"YulIf","src":"3637:81:11"},{"body":{"nodeType":"YulBlock","src":"3770:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3784:16:11"},"nodeType":"YulFunctionCall","src":"3784:18:11"},"nodeType":"YulExpressionStatement","src":"3784:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3734:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3757:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3765:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3754:2:11"},"nodeType":"YulFunctionCall","src":"3754:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3731:2:11"},"nodeType":"YulFunctionCall","src":"3731:38:11"},"nodeType":"YulIf","src":"3728:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3533:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3542:6:11","type":""}],"src":"3498:320:11"},{"body":{"nodeType":"YulBlock","src":"3878:87:11","statements":[{"nodeType":"YulAssignment","src":"3888:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3896:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3888:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3916:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3919:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3909:6:11"},"nodeType":"YulFunctionCall","src":"3909:14:11"},"nodeType":"YulExpressionStatement","src":"3909:14:11"},{"nodeType":"YulAssignment","src":"3932:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3940:9:11"},"nodeType":"YulFunctionCall","src":"3940:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3932:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3865:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3873:4:11","type":""}],"src":"3824:141:11"},{"body":{"nodeType":"YulBlock","src":"4015:49:11","statements":[{"nodeType":"YulAssignment","src":"4025:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4043:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:11"},"nodeType":"YulFunctionCall","src":"4039:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4055:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4035:3:11"},"nodeType":"YulFunctionCall","src":"4035:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4025:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3998:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4008:6:11","type":""}],"src":"3971:93:11"},{"body":{"nodeType":"YulBlock","src":"4123:54:11","statements":[{"nodeType":"YulAssignment","src":"4133:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4158:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"4164:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4154:3:11"},"nodeType":"YulFunctionCall","src":"4154:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4133:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4098:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"4104:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4114:8:11","type":""}],"src":"4070:107:11"},{"body":{"nodeType":"YulBlock","src":"4259:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4269:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4290:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4302:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4286:3:11"},"nodeType":"YulFunctionCall","src":"4286:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4273:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4313:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4355:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4325:18:11"},"nodeType":"YulFunctionCall","src":"4325:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4317:4:11","type":""}]},{"nodeType":"YulAssignment","src":"4431:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4462:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4473:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4443:18:11"},"nodeType":"YulFunctionCall","src":"4443:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4431:8:11"}]},{"nodeType":"YulAssignment","src":"4491:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4504:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4515:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4511:3:11"},"nodeType":"YulFunctionCall","src":"4511:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4500:3:11"},"nodeType":"YulFunctionCall","src":"4500:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:11"}]},{"nodeType":"YulAssignment","src":"4530:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4543:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4554:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"4564:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4550:3:11"},"nodeType":"YulFunctionCall","src":"4550:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4540:2:11"},"nodeType":"YulFunctionCall","src":"4540:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4530:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4220:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4227:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4239:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4252:6:11","type":""}],"src":"4183:393:11"},{"body":{"nodeType":"YulBlock","src":"4627:32:11","statements":[{"nodeType":"YulAssignment","src":"4637:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"4648:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4637:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4609:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4619:7:11","type":""}],"src":"4582:77:11"},{"body":{"nodeType":"YulBlock","src":"4697:28:11","statements":[{"nodeType":"YulAssignment","src":"4707:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"4714:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4707:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4683:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4693:3:11","type":""}],"src":"4665:60:11"},{"body":{"nodeType":"YulBlock","src":"4791:82:11","statements":[{"nodeType":"YulAssignment","src":"4801:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4859:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4841:17:11"},"nodeType":"YulFunctionCall","src":"4841:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4832:8:11"},"nodeType":"YulFunctionCall","src":"4832:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4814:17:11"},"nodeType":"YulFunctionCall","src":"4814:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4801:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4771:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4781:9:11","type":""}],"src":"4731:142:11"},{"body":{"nodeType":"YulBlock","src":"4926:28:11","statements":[{"nodeType":"YulAssignment","src":"4936:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"4943:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4936:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4912:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4922:3:11","type":""}],"src":"4879:75:11"},{"body":{"nodeType":"YulBlock","src":"5036:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5046:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5101:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5070:30:11"},"nodeType":"YulFunctionCall","src":"5070:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5050:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5125:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5165:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5159:5:11"},"nodeType":"YulFunctionCall","src":"5159:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5172:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5204:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5180:23:11"},"nodeType":"YulFunctionCall","src":"5180:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5131:27:11"},"nodeType":"YulFunctionCall","src":"5131:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5118:6:11"},"nodeType":"YulFunctionCall","src":"5118:105:11"},"nodeType":"YulExpressionStatement","src":"5118:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5013:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5019:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5027:7:11","type":""}],"src":"4960:269:11"},{"body":{"nodeType":"YulBlock","src":"5284:24:11","statements":[{"nodeType":"YulAssignment","src":"5294:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5301:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5294:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5280:3:11","type":""}],"src":"5235:73:11"},{"body":{"nodeType":"YulBlock","src":"5367:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5377:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5391:30:11"},"nodeType":"YulFunctionCall","src":"5391:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5381:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5476:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5482:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5490:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5432:43:11"},"nodeType":"YulFunctionCall","src":"5432:65:11"},"nodeType":"YulExpressionStatement","src":"5432:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5353:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5359:6:11","type":""}],"src":"5314:189:11"},{"body":{"nodeType":"YulBlock","src":"5559:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"5626:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5670:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5677:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5640:29:11"},"nodeType":"YulFunctionCall","src":"5640:39:11"},"nodeType":"YulExpressionStatement","src":"5640:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5579:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"5586:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5576:2:11"},"nodeType":"YulFunctionCall","src":"5576:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5591:26:11","statements":[{"nodeType":"YulAssignment","src":"5593:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5606:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5613:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:11"},"nodeType":"YulFunctionCall","src":"5602:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5593:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"5573:2:11","statements":[]},"src":"5569:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5547:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"5554:3:11","type":""}],"src":"5509:186:11"},{"body":{"nodeType":"YulBlock","src":"5780:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"5806:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5820:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5868:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5836:31:11"},"nodeType":"YulFunctionCall","src":"5836:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"5824:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5887:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5910:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5938:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5920:17:11"},"nodeType":"YulFunctionCall","src":"5920:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:11"},"nodeType":"YulFunctionCall","src":"5906:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"5891:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6107:27:11","statements":[{"nodeType":"YulAssignment","src":"6109:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6124:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6109:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6091:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6088:2:11"},"nodeType":"YulFunctionCall","src":"6088:18:11"},"nodeType":"YulIf","src":"6085:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6176:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6193:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6221:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6203:17:11"},"nodeType":"YulFunctionCall","src":"6203:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6189:3:11"},"nodeType":"YulFunctionCall","src":"6189:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6147:28:11"},"nodeType":"YulFunctionCall","src":"6147:80:11"},"nodeType":"YulExpressionStatement","src":"6147:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5797:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5802:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5794:2:11"},"nodeType":"YulFunctionCall","src":"5794:11:11"},"nodeType":"YulIf","src":"5791:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5756:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"5763:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"5768:10:11","type":""}],"src":"5701:543:11"},{"body":{"nodeType":"YulBlock","src":"6313:54:11","statements":[{"nodeType":"YulAssignment","src":"6323:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6348:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"6354:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6344:3:11"},"nodeType":"YulFunctionCall","src":"6344:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6323:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6288:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"6294:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6304:8:11","type":""}],"src":"6250:117:11"},{"body":{"nodeType":"YulBlock","src":"6424:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6434:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6483:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6486:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6479:3:11"},"nodeType":"YulFunctionCall","src":"6479:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6498:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6494:3:11"},"nodeType":"YulFunctionCall","src":"6494:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6450:28:11"},"nodeType":"YulFunctionCall","src":"6450:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6446:3:11"},"nodeType":"YulFunctionCall","src":"6446:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6438:4:11","type":""}]},{"nodeType":"YulAssignment","src":"6511:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6525:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"6531:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6521:3:11"},"nodeType":"YulFunctionCall","src":"6521:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6511:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6401:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6407:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6417:6:11","type":""}],"src":"6373:169:11"},{"body":{"nodeType":"YulBlock","src":"6628:214:11","statements":[{"nodeType":"YulAssignment","src":"6761:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6788:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"6794:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6769:18:11"},"nodeType":"YulFunctionCall","src":"6769:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6761:4:11"}]},{"nodeType":"YulAssignment","src":"6807:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6818:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6828:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"6831:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6824:3:11"},"nodeType":"YulFunctionCall","src":"6824:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6815:2:11"},"nodeType":"YulFunctionCall","src":"6815:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"6807:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6609:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"6615:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6623:4:11","type":""}],"src":"6547:295:11"},{"body":{"nodeType":"YulBlock","src":"6939:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6950:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6997:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6964:32:11"},"nodeType":"YulFunctionCall","src":"6964:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"6954:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7086:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7088:16:11"},"nodeType":"YulFunctionCall","src":"7088:18:11"},"nodeType":"YulExpressionStatement","src":"7088:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7058:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7066:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7055:2:11"},"nodeType":"YulFunctionCall","src":"7055:30:11"},"nodeType":"YulIf","src":"7052:56:11"},{"nodeType":"YulVariableDeclaration","src":"7118:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7164:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7158:5:11"},"nodeType":"YulFunctionCall","src":"7158:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7132:25:11"},"nodeType":"YulFunctionCall","src":"7132:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7122:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7263:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7269:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"7277:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7217:45:11"},"nodeType":"YulFunctionCall","src":"7217:67:11"},"nodeType":"YulExpressionStatement","src":"7217:67:11"},{"nodeType":"YulVariableDeclaration","src":"7294:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7311:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7298:9:11","type":""}]},{"nodeType":"YulAssignment","src":"7322:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7335:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7322:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7386:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7400:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7419:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7431:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7427:3:11"},"nodeType":"YulFunctionCall","src":"7427:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7415:3:11"},"nodeType":"YulFunctionCall","src":"7415:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7404:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7451:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7497:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7465:31:11"},"nodeType":"YulFunctionCall","src":"7465:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7455:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7515:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7524:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7519:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7583:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7608:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7626:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7631:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7622:3:11"},"nodeType":"YulFunctionCall","src":"7622:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7616:5:11"},"nodeType":"YulFunctionCall","src":"7616:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7601:6:11"},"nodeType":"YulFunctionCall","src":"7601:42:11"},"nodeType":"YulExpressionStatement","src":"7601:42:11"},{"nodeType":"YulAssignment","src":"7660:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7674:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7682:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7670:3:11"},"nodeType":"YulFunctionCall","src":"7670:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7660:6:11"}]},{"nodeType":"YulAssignment","src":"7701:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7718:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7729:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:11"},"nodeType":"YulFunctionCall","src":"7714:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7701:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7549:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7552:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7546:2:11"},"nodeType":"YulFunctionCall","src":"7546:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7561:21:11","statements":[{"nodeType":"YulAssignment","src":"7563:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7572:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"7575:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7568:3:11"},"nodeType":"YulFunctionCall","src":"7568:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7563:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"7542:3:11","statements":[]},"src":"7538:208:11"},{"body":{"nodeType":"YulBlock","src":"7782:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7800:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7827:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7832:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7823:3:11"},"nodeType":"YulFunctionCall","src":"7823:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7817:5:11"},"nodeType":"YulFunctionCall","src":"7817:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"7804:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7867:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"7894:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7909:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7917:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7905:3:11"},"nodeType":"YulFunctionCall","src":"7905:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7875:18:11"},"nodeType":"YulFunctionCall","src":"7875:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7860:6:11"},"nodeType":"YulFunctionCall","src":"7860:64:11"},"nodeType":"YulExpressionStatement","src":"7860:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"7765:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"7774:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7762:2:11"},"nodeType":"YulFunctionCall","src":"7762:19:11"},"nodeType":"YulIf","src":"7759:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7958:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7972:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7980:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7968:3:11"},"nodeType":"YulFunctionCall","src":"7968:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"7984:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:11"},"nodeType":"YulFunctionCall","src":"7964:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7951:6:11"},"nodeType":"YulFunctionCall","src":"7951:36:11"},"nodeType":"YulExpressionStatement","src":"7951:36:11"}]},"nodeType":"YulCase","src":"7379:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7384:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8014:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8028:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8041:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8032:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8065:67:11","statements":[{"nodeType":"YulAssignment","src":"8083:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8102:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8107:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:11"},"nodeType":"YulFunctionCall","src":"8098:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8092:5:11"},"nodeType":"YulFunctionCall","src":"8092:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8083:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8058:6:11"},"nodeType":"YulIf","src":"8055:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8152:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8211:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"8218:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8158:52:11"},"nodeType":"YulFunctionCall","src":"8158:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8145:6:11"},"nodeType":"YulFunctionCall","src":"8145:81:11"},"nodeType":"YulExpressionStatement","src":"8145:81:11"}]},"nodeType":"YulCase","src":"8006:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7359:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7356:2:11"},"nodeType":"YulFunctionCall","src":"7356:14:11"},"nodeType":"YulSwitch","src":"7349:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6928:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"6934:3:11","type":""}],"src":"6847:1395:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002a8138038062002a818339818101604052810190620000379190620001f7565b62000048816200004f60201b60201c565b506200057a565b806002908162000060919062000493565b5050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cd8262000082565b810181811067ffffffffffffffff82111715620000ef57620000ee62000093565b5b80604052505050565b60006200010462000064565b9050620001128282620000c2565b919050565b600067ffffffffffffffff82111562000135576200013462000093565b5b620001408262000082565b9050602081019050919050565b60005b838110156200016d57808201518184015260208101905062000150565b60008484015250505050565b6000620001906200018a8462000117565b620000f8565b905082815260208101848484011115620001af57620001ae6200007d565b5b620001bc8482856200014d565b509392505050565b600082601f830112620001dc57620001db62000078565b5b8151620001ee84826020860162000179565b91505092915050565b60006020828403121562000210576200020f6200006e565b5b600082015167ffffffffffffffff81111562000231576200023062000073565b5b6200023f84828501620001c4565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029b57607f821691505b602082108103620002b157620002b062000253565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200031b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002dc565b620003278683620002dc565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003746200036e62000368846200033f565b62000349565b6200033f565b9050919050565b6000819050919050565b620003908362000353565b620003a86200039f826200037b565b848454620002e9565b825550505050565b600090565b620003bf620003b0565b620003cc81848462000385565b505050565b5b81811015620003f457620003e8600082620003b5565b600181019050620003d2565b5050565b601f82111562000443576200040d81620002b7565b6200041884620002cc565b8101602085101562000428578190505b620004406200043785620002cc565b830182620003d1565b50505b505050565b600082821c905092915050565b6000620004686000198460080262000448565b1980831691505092915050565b600062000483838362000455565b9150826002028217905092915050565b6200049e8262000248565b67ffffffffffffffff811115620004ba57620004b962000093565b5b620004c6825462000282565b620004d3828285620003f8565b600060209050601f8311600181146200050b5760008415620004f6578287015190505b62000502858262000475565b86555062000572565b601f1984166200051b86620002b7565b60005b8281101562000545578489015182556001820191506020850194506020810190506200051e565b8683101562000565578489015162000561601f89168262000455565b8355505b6001600288020188555050505b505050505050565b6124f7806200058a6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113b0565b6101d0565b6040516100b391906113ff565b60405180910390f35b6100d660048036038101906100d19190611472565b610298565b6040516100e391906114ba565b60405180910390f35b610106600480360381019061010191906114d5565b61037a565b6040516101139190611592565b60405180910390f35b610136600480360381019061013191906117b1565b61040e565b005b610152600480360381019061014d9190611943565b6104af565b60405161015f9190611a79565b60405180910390f35b610182600480360381019061017d9190611ac7565b6105c8565b005b61019e60048036038101906101999190611b07565b6105de565b6040516101ab91906114ba565b60405180910390f35b6101ce60048036038101906101c99190611b47565b610672565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023790611c50565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610373575061037282610713565b5b9050919050565b60606002805461038990611c9f565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590611c9f565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b50505050509050919050565b61041661077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045c575061045b8561045661077d565b6105de565b5b61049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290611d42565b60405180910390fd5b6104a88585858585610785565b5050505050565b606081518351146104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec90611dd4565b60405180910390fd5b6000835167ffffffffffffffff811115610512576105116115b9565b5b6040519080825280602002602001820160405280156105405781602001602082028036833780820191505090505b50905060005b84518110156105bd5761058d85828151811061056557610564611df4565b5b60200260200101518583815181106105805761057f611df4565b5b60200260200101516101d0565b8282815181106105a05761059f611df4565b5b602002602001018181525050806105b690611e52565b9050610546565b508091505092915050565b6105da6105d361077d565b8383610aa6565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067a61077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c057506106bf856106ba61077d565b6105de565b5b6106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611d42565b60405180910390fd5b61070c8585858585610c12565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090611f0c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611f9e565b60405180910390fd5b600061084261077d565b9050610852818787878787610ead565b60005b8451811015610a0357600085828151811061087357610872611df4565b5b60200260200101519050600085838151811061089257610891611df4565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90612030565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e89190612050565b92505081905550505050806109fc90611e52565b9050610855565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7a929190612084565b60405180910390a4610a90818787878787610eb5565b610a9e818787878787610ebd565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b9061212d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0591906114ba565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7890611f9e565b60405180910390fd5b6000610c8b61077d565b90506000610c9885611094565b90506000610ca585611094565b9050610cb5838989858589610ead565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4390612030565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e019190612050565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e7e92919061214d565b60405180910390a4610e94848a8a86868a610eb5565b610ea2848a8a8a8a8a61110e565b505050505050505050565b505050505050565b505050505050565b610edc8473ffffffffffffffffffffffffffffffffffffffff166112e5565b1561108c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f229594939291906121da565b6020604051808303816000875af1925050508015610f5e57506040513d601f19601f82011682018060405250810190610f5b9190612257565b60015b61100357610f6a612291565b806308c379a003610fc65750610f7e6122b3565b80610f895750610fc8565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbd9190611592565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa906123b5565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190612447565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110b3576110b26115b9565b5b6040519080825280602002602001820160405280156110e15781602001602082028036833780820191505090505b50905082816000815181106110f9576110f8611df4565b5b60200260200101818152505080915050919050565b61112d8473ffffffffffffffffffffffffffffffffffffffff166112e5565b156112dd578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611173959493929190612467565b6020604051808303816000875af19250505080156111af57506040513d601f19601f820116820180604052508101906111ac9190612257565b60015b611254576111bb612291565b806308c379a00361121757506111cf6122b3565b806111da5750611219565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e9190611592565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b906123b5565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290612447565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113478261131c565b9050919050565b6113578161133c565b811461136257600080fd5b50565b6000813590506113748161134e565b92915050565b6000819050919050565b61138d8161137a565b811461139857600080fd5b50565b6000813590506113aa81611384565b92915050565b600080604083850312156113c7576113c6611312565b5b60006113d585828601611365565b92505060206113e68582860161139b565b9150509250929050565b6113f98161137a565b82525050565b600060208201905061141460008301846113f0565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61144f8161141a565b811461145a57600080fd5b50565b60008135905061146c81611446565b92915050565b60006020828403121561148857611487611312565b5b60006114968482850161145d565b91505092915050565b60008115159050919050565b6114b48161149f565b82525050565b60006020820190506114cf60008301846114ab565b92915050565b6000602082840312156114eb576114ea611312565b5b60006114f98482850161139b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561153c578082015181840152602081019050611521565b60008484015250505050565b6000601f19601f8301169050919050565b600061156482611502565b61156e818561150d565b935061157e81856020860161151e565b61158781611548565b840191505092915050565b600060208201905081810360008301526115ac8184611559565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115f182611548565b810181811067ffffffffffffffff821117156116105761160f6115b9565b5b80604052505050565b6000611623611308565b905061162f82826115e8565b919050565b600067ffffffffffffffff82111561164f5761164e6115b9565b5b602082029050602081019050919050565b600080fd5b600061167861167384611634565b611619565b9050808382526020820190506020840283018581111561169b5761169a611660565b5b835b818110156116c457806116b0888261139b565b84526020840193505060208101905061169d565b5050509392505050565b600082601f8301126116e3576116e26115b4565b5b81356116f3848260208601611665565b91505092915050565b600080fd5b600067ffffffffffffffff82111561171c5761171b6115b9565b5b61172582611548565b9050602081019050919050565b82818337600083830152505050565b600061175461174f84611701565b611619565b9050828152602081018484840111156117705761176f6116fc565b5b61177b848285611732565b509392505050565b600082601f830112611798576117976115b4565b5b81356117a8848260208601611741565b91505092915050565b600080600080600060a086880312156117cd576117cc611312565b5b60006117db88828901611365565b95505060206117ec88828901611365565b945050604086013567ffffffffffffffff81111561180d5761180c611317565b5b611819888289016116ce565b935050606086013567ffffffffffffffff81111561183a57611839611317565b5b611846888289016116ce565b925050608086013567ffffffffffffffff81111561186757611866611317565b5b61187388828901611783565b9150509295509295909350565b600067ffffffffffffffff82111561189b5761189a6115b9565b5b602082029050602081019050919050565b60006118bf6118ba84611880565b611619565b905080838252602082019050602084028301858111156118e2576118e1611660565b5b835b8181101561190b57806118f78882611365565b8452602084019350506020810190506118e4565b5050509392505050565b600082601f83011261192a576119296115b4565b5b813561193a8482602086016118ac565b91505092915050565b6000806040838503121561195a57611959611312565b5b600083013567ffffffffffffffff81111561197857611977611317565b5b61198485828601611915565b925050602083013567ffffffffffffffff8111156119a5576119a4611317565b5b6119b1858286016116ce565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119f08161137a565b82525050565b6000611a0283836119e7565b60208301905092915050565b6000602082019050919050565b6000611a26826119bb565b611a3081856119c6565b9350611a3b836119d7565b8060005b83811015611a6c578151611a5388826119f6565b9750611a5e83611a0e565b925050600181019050611a3f565b5085935050505092915050565b60006020820190508181036000830152611a938184611a1b565b905092915050565b611aa48161149f565b8114611aaf57600080fd5b50565b600081359050611ac181611a9b565b92915050565b60008060408385031215611ade57611add611312565b5b6000611aec85828601611365565b9250506020611afd85828601611ab2565b9150509250929050565b60008060408385031215611b1e57611b1d611312565b5b6000611b2c85828601611365565b9250506020611b3d85828601611365565b9150509250929050565b600080600080600060a08688031215611b6357611b62611312565b5b6000611b7188828901611365565b9550506020611b8288828901611365565b9450506040611b938882890161139b565b9350506060611ba48882890161139b565b925050608086013567ffffffffffffffff811115611bc557611bc4611317565b5b611bd188828901611783565b9150509295509295909350565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000611c3a602a8361150d565b9150611c4582611bde565b604082019050919050565b60006020820190508181036000830152611c6981611c2d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cb757607f821691505b602082108103611cca57611cc9611c70565b5b50919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b6000611d2c602f8361150d565b9150611d3782611cd0565b604082019050919050565b60006020820190508181036000830152611d5b81611d1f565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611dbe60298361150d565b9150611dc982611d62565b604082019050919050565b60006020820190508181036000830152611ded81611db1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5d8261137a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8f57611e8e611e23565b5b600182019050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611ef660288361150d565b9150611f0182611e9a565b604082019050919050565b60006020820190508181036000830152611f2581611ee9565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611f8860258361150d565b9150611f9382611f2c565b604082019050919050565b60006020820190508181036000830152611fb781611f7b565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b600061201a602a8361150d565b915061202582611fbe565b604082019050919050565b600060208201905081810360008301526120498161200d565b9050919050565b600061205b8261137a565b91506120668361137a565b925082820190508082111561207e5761207d611e23565b5b92915050565b6000604082019050818103600083015261209e8185611a1b565b905081810360208301526120b28184611a1b565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b600061211760298361150d565b9150612122826120bb565b604082019050919050565b600060208201905081810360008301526121468161210a565b9050919050565b600060408201905061216260008301856113f0565b61216f60208301846113f0565b9392505050565b61217f8161133c565b82525050565b600081519050919050565b600082825260208201905092915050565b60006121ac82612185565b6121b68185612190565b93506121c681856020860161151e565b6121cf81611548565b840191505092915050565b600060a0820190506121ef6000830188612176565b6121fc6020830187612176565b818103604083015261220e8186611a1b565b905081810360608301526122228185611a1b565b9050818103608083015261223681846121a1565b90509695505050505050565b60008151905061225181611446565b92915050565b60006020828403121561226d5761226c611312565b5b600061227b84828501612242565b91505092915050565b60008160e01c9050919050565b600060033d11156122b05760046000803e6122ad600051612284565b90505b90565b600060443d10612340576122c5611308565b60043d036004823e80513d602482011167ffffffffffffffff821117156122ed575050612340565b808201805167ffffffffffffffff81111561230b5750505050612340565b80602083010160043d038501811115612328575050505050612340565b612337826020018501866115e8565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061239f60348361150d565b91506123aa82612343565b604082019050919050565b600060208201905081810360008301526123ce81612392565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b600061243160288361150d565b915061243c826123d5565b604082019050919050565b6000602082019050818103600083015261246081612424565b9050919050565b600060a08201905061247c6000830188612176565b6124896020830187612176565b61249660408301866113f0565b6124a360608301856113f0565b81810360808301526124b581846121a1565b9050969550505050505056fea2646970667358221220e6a6d1dc5362ca3b962188f0666125db35283de3aeb7734df4d25d1aff1622a164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A81 CODESIZE SUB DUP1 PUSH3 0x2A81 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F7 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x57A JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x493 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCD DUP3 PUSH3 0x82 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEE PUSH3 0x93 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x104 PUSH3 0x64 JUMP JUMPDEST SWAP1 POP PUSH3 0x112 DUP3 DUP3 PUSH3 0xC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x140 DUP3 PUSH3 0x82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x150 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x190 PUSH3 0x18A DUP5 PUSH3 0x117 JUMP JUMPDEST PUSH3 0xF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AF JUMPI PUSH3 0x1AE PUSH3 0x7D JUMP JUMPDEST JUMPDEST PUSH3 0x1BC DUP5 DUP3 DUP6 PUSH3 0x14D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DC JUMPI PUSH3 0x1DB PUSH3 0x78 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x73 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP5 DUP3 DUP6 ADD PUSH3 0x1C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x29B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2B1 JUMPI PUSH3 0x2B0 PUSH3 0x253 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x31B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2DC JUMP JUMPDEST PUSH3 0x327 DUP7 DUP4 PUSH3 0x2DC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x374 PUSH3 0x36E PUSH3 0x368 DUP5 PUSH3 0x33F JUMP JUMPDEST PUSH3 0x349 JUMP JUMPDEST PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x390 DUP4 PUSH3 0x353 JUMP JUMPDEST PUSH3 0x3A8 PUSH3 0x39F DUP3 PUSH3 0x37B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3BF PUSH3 0x3B0 JUMP JUMPDEST PUSH3 0x3CC DUP2 DUP5 DUP5 PUSH3 0x385 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3F4 JUMPI PUSH3 0x3E8 PUSH1 0x0 DUP3 PUSH3 0x3B5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x443 JUMPI PUSH3 0x40D DUP2 PUSH3 0x2B7 JUMP JUMPDEST PUSH3 0x418 DUP5 PUSH3 0x2CC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x428 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x440 PUSH3 0x437 DUP6 PUSH3 0x2CC JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3D1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x468 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x448 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x483 DUP4 DUP4 PUSH3 0x455 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x49E DUP3 PUSH3 0x248 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4BA JUMPI PUSH3 0x4B9 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x4C6 DUP3 SLOAD PUSH3 0x282 JUMP JUMPDEST PUSH3 0x4D3 DUP3 DUP3 DUP6 PUSH3 0x3F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x50B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4F6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x502 DUP6 DUP3 PUSH3 0x475 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x572 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x51B DUP7 PUSH3 0x2B7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x545 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x51E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x565 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x561 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x455 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24F7 DUP1 PUSH3 0x58A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xA9E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC98 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA5 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE94 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xEA2 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x108C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1003 JUMPI PUSH2 0xF6A PUSH2 0x2291 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFC6 JUMPI POP PUSH2 0xF7E PUSH2 0x22B3 JUMP JUMPDEST DUP1 PUSH2 0xF89 JUMPI POP PUSH2 0xFC8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AC SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI PUSH2 0x11BB PUSH2 0x2291 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1217 JUMPI POP PUSH2 0x11CF PUSH2 0x22B3 JUMP JUMPDEST DUP1 PUSH2 0x11DA JUMPI POP PUSH2 0x1219 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP3 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP2 EQ PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1374 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x137A JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E6 DUP6 DUP3 DUP7 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x141A JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1564 DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x156E DUP2 DUP6 PUSH2 0x150D JUMP JUMPDEST SWAP4 POP PUSH2 0x157E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AC DUP2 DUP5 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F1 DUP3 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1623 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP PUSH2 0x162F DUP3 DUP3 PUSH2 0x15E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH2 0x1673 DUP5 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C4 JUMPI DUP1 PUSH2 0x16B0 DUP9 DUP3 PUSH2 0x139B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x169D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E3 JUMPI PUSH2 0x16E2 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1665 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH2 0x1725 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1754 PUSH2 0x174F DUP5 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x16FC JUMP JUMPDEST JUMPDEST PUSH2 0x177B DUP5 DUP3 DUP6 PUSH2 0x1732 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17EC DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1819 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1846 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1866 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1873 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BF PUSH2 0x18BA DUP5 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP1 PUSH2 0x18F7 DUP9 DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192A JUMPI PUSH2 0x1929 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x193A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1984 DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F0 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP4 DUP4 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A26 DUP3 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1A30 DUP2 DUP6 PUSH2 0x19C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A3B DUP4 PUSH2 0x19D7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A6C JUMPI DUP2 MLOAD PUSH2 0x1A53 DUP9 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A5E DUP4 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A3F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A93 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC1 DUP2 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ADD PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFD DUP6 DUP3 DUP7 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2C DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3D DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B82 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B93 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BA4 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD1 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x1C70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2C PUSH1 0x2F DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D37 DUP3 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D5B DUP2 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP3 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E5D DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E8F JUMPI PUSH2 0x1E8E PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F01 DUP3 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F25 DUP2 PUSH2 0x1EE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F88 PUSH1 0x25 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F93 DUP3 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2049 DUP2 PUSH2 0x200D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP4 PUSH2 0x137A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x207E JUMPI PUSH2 0x207D PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x209E DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x20B2 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2117 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2122 DUP3 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2146 DUP2 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x216F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x217F DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AC DUP3 PUSH2 0x2185 JUMP JUMPDEST PUSH2 0x21B6 DUP2 DUP6 PUSH2 0x2190 JUMP JUMPDEST SWAP4 POP PUSH2 0x21C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x21CF DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x21EF PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x21FC PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2176 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x220E DUP2 DUP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2222 DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2236 DUP2 DUP5 PUSH2 0x21A1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2251 DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x227B DUP5 DUP3 DUP6 ADD PUSH2 0x2242 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x22B0 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22AD PUSH1 0x0 MLOAD PUSH2 0x2284 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2340 JUMPI PUSH2 0x22C5 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22ED JUMPI POP POP PUSH2 0x2340 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230B JUMPI POP POP POP POP PUSH2 0x2340 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2328 JUMPI POP POP POP POP POP PUSH2 0x2340 JUMP JUMPDEST PUSH2 0x2337 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15E8 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239F PUSH1 0x34 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x23AA DUP3 PUSH2 0x2343 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CE DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2431 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x243C DUP3 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2460 DUP2 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x247C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x2489 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x2496 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x24A3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24B5 DUP2 DUP5 PUSH2 0x21A1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xA6 0xD1 0xDC MSTORE8 PUSH3 0xCA3B96 0x21 DUP9 CREATE PUSH7 0x6125DB35283DE3 0xAE 0xB7 PUSH20 0x4DF4D25D1AFF1622A164736F6C63430008110033 ","sourceMap":"570:16691:1:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;;;:13;;:::i;:::-;1107:62;570:16691;;8173:86;8246:6;8239:4;:13;;;;;;:::i;:::-;;8173:86;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;570:16691:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1178":{"entryPoint":3765,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":4244,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":3757,"id":1159,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":3773,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":4366,"id":1241,"parameterSlots":6,"returnSlots":0},"@_msgSender_1820":{"entryPoint":1917,"id":1820,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":1925,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":3090,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":2726,"id":1140,"parameterSlots":3,"returnSlots":0},"@balanceOfBatch_292":{"entryPoint":1199,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":464,"id":228,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":1502,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1531":{"entryPoint":4837,"id":1531,"parameterSlots":1,"returnSlots":1},"@safeBatchTransferFrom_405":{"entryPoint":1038,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":1650,"id":365,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":1480,"id":309,"parameterSlots":2,"returnSlots":0},"@supportsInterface_188":{"entryPoint":664,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2079":{"entryPoint":1811,"id":2079,"parameterSlots":1,"returnSlots":1},"@uri_200":{"entryPoint":890,"id":200,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6316,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5733,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5953,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6919,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":6065,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":6983,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6855,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5040,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6467,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8566,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack":{"entryPoint":9106,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack":{"entryPoint":7455,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack":{"entryPoint":9252,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack":{"entryPoint":7213,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack":{"entryPoint":8059,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack":{"entryPoint":8205,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":8458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack":{"entryPoint":7601,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack":{"entryPoint":7913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6631,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5104,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8666,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9319,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8324,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9141,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7248,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8094,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7636,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7948,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8525,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":5657,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4872,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6272,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5684,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":5889,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6615,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6587,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8581,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5378,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6670,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6598,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8592,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5389,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8272,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4924,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5279,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4892,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4986,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5938,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5406,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7327,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5608,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7762,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7715,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7280,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7668,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5561,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":8849,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5556,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5728,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5884,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4887,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4882,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5448,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":8836,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed":{"entryPoint":9027,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370":{"entryPoint":7376,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503":{"entryPoint":9173,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad":{"entryPoint":7134,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d":{"entryPoint":7980,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf":{"entryPoint":8126,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2":{"entryPoint":8379,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5":{"entryPoint":7522,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807":{"entryPoint":7834,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":8883,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_t_address":{"entryPoint":4942,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6811,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5190,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4996,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:32446:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"748:87:11","statements":[{"nodeType":"YulAssignment","src":"758:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:11"},"nodeType":"YulFunctionCall","src":"767:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:11"},"nodeType":"YulFunctionCall","src":"796:33:11"},"nodeType":"YulExpressionStatement","src":"796:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:11","type":""}],"src":"696:139:11"},{"body":{"nodeType":"YulBlock","src":"886:32:11","statements":[{"nodeType":"YulAssignment","src":"896:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:11","type":""}],"src":"841:77:11"},{"body":{"nodeType":"YulBlock","src":"967:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:11"},"nodeType":"YulFunctionCall","src":"1026:12:11"},"nodeType":"YulExpressionStatement","src":"1026:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:11"},"nodeType":"YulFunctionCall","src":"997:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:11"},"nodeType":"YulFunctionCall","src":"987:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:11"},"nodeType":"YulFunctionCall","src":"980:43:11"},"nodeType":"YulIf","src":"977:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:11","type":""}],"src":"924:122:11"},{"body":{"nodeType":"YulBlock","src":"1104:87:11","statements":[{"nodeType":"YulAssignment","src":"1114:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:11"},"nodeType":"YulFunctionCall","src":"1123:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:11"},"nodeType":"YulFunctionCall","src":"1152:33:11"},"nodeType":"YulExpressionStatement","src":"1152:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:11","type":""}],"src":"1052:139:11"},{"body":{"nodeType":"YulBlock","src":"1280:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:11"},"nodeType":"YulFunctionCall","src":"1328:79:11"},"nodeType":"YulExpressionStatement","src":"1328:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:11"},"nodeType":"YulFunctionCall","src":"1297:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:11"},"nodeType":"YulFunctionCall","src":"1293:32:11"},"nodeType":"YulIf","src":"1290:119:11"},{"nodeType":"YulBlock","src":"1419:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:11"},"nodeType":"YulFunctionCall","src":"1494:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:11"},"nodeType":"YulFunctionCall","src":"1473:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:11"}]}]},{"nodeType":"YulBlock","src":"1546:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:11"},"nodeType":"YulFunctionCall","src":"1622:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:11"},"nodeType":"YulFunctionCall","src":"1601:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:11","type":""}],"src":"1197:474:11"},{"body":{"nodeType":"YulBlock","src":"1742:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:11"},"nodeType":"YulFunctionCall","src":"1764:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:11"},"nodeType":"YulFunctionCall","src":"1752:37:11"},"nodeType":"YulExpressionStatement","src":"1752:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:11","type":""}],"src":"1677:118:11"},{"body":{"nodeType":"YulBlock","src":"1899:124:11","statements":[{"nodeType":"YulAssignment","src":"1909:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:11"},"nodeType":"YulFunctionCall","src":"1917:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:11"},"nodeType":"YulFunctionCall","src":"1998:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:11"},"nodeType":"YulFunctionCall","src":"1945:71:11"},"nodeType":"YulExpressionStatement","src":"1945:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:11","type":""}],"src":"1801:222:11"},{"body":{"nodeType":"YulBlock","src":"2073:105:11","statements":[{"nodeType":"YulAssignment","src":"2083:89:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:11","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:11"},"nodeType":"YulFunctionCall","src":"2094:78:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:11"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:11","type":""}],"src":"2029:149:11"},{"body":{"nodeType":"YulBlock","src":"2226:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:11"},"nodeType":"YulFunctionCall","src":"2284:12:11"},"nodeType":"YulExpressionStatement","src":"2284:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:11"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:11"},"nodeType":"YulFunctionCall","src":"2256:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:11"},"nodeType":"YulFunctionCall","src":"2246:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:11"},"nodeType":"YulFunctionCall","src":"2239:42:11"},"nodeType":"YulIf","src":"2236:62:11"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:11","type":""}],"src":"2184:120:11"},{"body":{"nodeType":"YulBlock","src":"2361:86:11","statements":[{"nodeType":"YulAssignment","src":"2371:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:11"},"nodeType":"YulFunctionCall","src":"2380:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:11"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:11"},"nodeType":"YulFunctionCall","src":"2409:32:11"},"nodeType":"YulExpressionStatement","src":"2409:32:11"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:11","type":""}],"src":"2310:137:11"},{"body":{"nodeType":"YulBlock","src":"2518:262:11","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:11"},"nodeType":"YulFunctionCall","src":"2566:79:11"},"nodeType":"YulExpressionStatement","src":"2566:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:11"},"nodeType":"YulFunctionCall","src":"2535:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:11"},"nodeType":"YulFunctionCall","src":"2531:32:11"},"nodeType":"YulIf","src":"2528:119:11"},{"nodeType":"YulBlock","src":"2657:116:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:11"},"nodeType":"YulFunctionCall","src":"2731:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:11"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:11"},"nodeType":"YulFunctionCall","src":"2711:52:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:11","type":""}],"src":"2453:327:11"},{"body":{"nodeType":"YulBlock","src":"2828:48:11","statements":[{"nodeType":"YulAssignment","src":"2838:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:11"},"nodeType":"YulFunctionCall","src":"2856:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:11"},"nodeType":"YulFunctionCall","src":"2849:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:11","type":""}],"src":"2786:90:11"},{"body":{"nodeType":"YulBlock","src":"2941:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:11"},"nodeType":"YulFunctionCall","src":"2963:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:11"},"nodeType":"YulFunctionCall","src":"2951:34:11"},"nodeType":"YulExpressionStatement","src":"2951:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:11","type":""}],"src":"2882:109:11"},{"body":{"nodeType":"YulBlock","src":"3089:118:11","statements":[{"nodeType":"YulAssignment","src":"3099:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:11"},"nodeType":"YulFunctionCall","src":"3107:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:11"},"nodeType":"YulFunctionCall","src":"3182:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:11"},"nodeType":"YulFunctionCall","src":"3135:65:11"},"nodeType":"YulExpressionStatement","src":"3135:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:11","type":""}],"src":"2997:210:11"},{"body":{"nodeType":"YulBlock","src":"3279:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"3325:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3327:77:11"},"nodeType":"YulFunctionCall","src":"3327:79:11"},"nodeType":"YulExpressionStatement","src":"3327:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3300:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3309:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3296:3:11"},"nodeType":"YulFunctionCall","src":"3296:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3321:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3292:3:11"},"nodeType":"YulFunctionCall","src":"3292:32:11"},"nodeType":"YulIf","src":"3289:119:11"},{"nodeType":"YulBlock","src":"3418:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3433:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3447:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3437:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:11"},"nodeType":"YulFunctionCall","src":"3493:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3472:20:11"},"nodeType":"YulFunctionCall","src":"3472:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3462:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3249:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3260:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3272:6:11","type":""}],"src":"3213:329:11"},{"body":{"nodeType":"YulBlock","src":"3607:40:11","statements":[{"nodeType":"YulAssignment","src":"3618:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3634:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3628:5:11"},"nodeType":"YulFunctionCall","src":"3628:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3618:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3590:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3600:6:11","type":""}],"src":"3548:99:11"},{"body":{"nodeType":"YulBlock","src":"3749:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3766:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3771:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:11"},"nodeType":"YulFunctionCall","src":"3759:19:11"},"nodeType":"YulExpressionStatement","src":"3759:19:11"},{"nodeType":"YulAssignment","src":"3787:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3806:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3811:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:11"},"nodeType":"YulFunctionCall","src":"3802:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3787:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3721:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3726:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3737:11:11","type":""}],"src":"3653:169:11"},{"body":{"nodeType":"YulBlock","src":"3890:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3904:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3969:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3994:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"3999:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:11"},"nodeType":"YulFunctionCall","src":"3990:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4013:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"4018:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:11"},"nodeType":"YulFunctionCall","src":"4009:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4003:5:11"},"nodeType":"YulFunctionCall","src":"4003:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:11"},"nodeType":"YulFunctionCall","src":"3983:39:11"},"nodeType":"YulExpressionStatement","src":"3983:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3930:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"3933:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3927:2:11"},"nodeType":"YulFunctionCall","src":"3927:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3941:19:11","statements":[{"nodeType":"YulAssignment","src":"3943:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3952:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"3955:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:11"},"nodeType":"YulFunctionCall","src":"3948:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3943:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3923:3:11","statements":[]},"src":"3919:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4052:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:11"},"nodeType":"YulFunctionCall","src":"4048:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4041:6:11"},"nodeType":"YulFunctionCall","src":"4041:27:11"},"nodeType":"YulExpressionStatement","src":"4041:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3872:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3877:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3882:6:11","type":""}],"src":"3828:246:11"},{"body":{"nodeType":"YulBlock","src":"4128:54:11","statements":[{"nodeType":"YulAssignment","src":"4138:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4156:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4163:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:11"},"nodeType":"YulFunctionCall","src":"4152:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4172:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4168:3:11"},"nodeType":"YulFunctionCall","src":"4168:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4148:3:11"},"nodeType":"YulFunctionCall","src":"4148:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4138:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4111:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4121:6:11","type":""}],"src":"4080:102:11"},{"body":{"nodeType":"YulBlock","src":"4280:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4290:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4304:32:11"},"nodeType":"YulFunctionCall","src":"4304:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4294:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4352:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4418:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4423:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4359:58:11"},"nodeType":"YulFunctionCall","src":"4359:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4478:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4485:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:11"},"nodeType":"YulFunctionCall","src":"4474:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"4492:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4497:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4439:34:11"},"nodeType":"YulFunctionCall","src":"4439:65:11"},"nodeType":"YulExpressionStatement","src":"4439:65:11"},{"nodeType":"YulAssignment","src":"4513:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4524:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4551:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4529:21:11"},"nodeType":"YulFunctionCall","src":"4529:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:11"},"nodeType":"YulFunctionCall","src":"4520:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4513:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4268:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4276:3:11","type":""}],"src":"4188:377:11"},{"body":{"nodeType":"YulBlock","src":"4689:195:11","statements":[{"nodeType":"YulAssignment","src":"4699:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:11"},"nodeType":"YulFunctionCall","src":"4707:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4757:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:11"},"nodeType":"YulFunctionCall","src":"4742:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4765:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4761:3:11"},"nodeType":"YulFunctionCall","src":"4761:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4735:6:11"},"nodeType":"YulFunctionCall","src":"4735:47:11"},"nodeType":"YulExpressionStatement","src":"4735:47:11"},{"nodeType":"YulAssignment","src":"4791:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4863:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"4872:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4799:63:11"},"nodeType":"YulFunctionCall","src":"4799:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4791:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4661:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4673:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4684:4:11","type":""}],"src":"4571:313:11"},{"body":{"nodeType":"YulBlock","src":"4979:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4996:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4999:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4989:6:11"},"nodeType":"YulFunctionCall","src":"4989:12:11"},"nodeType":"YulExpressionStatement","src":"4989:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4890:117:11"},{"body":{"nodeType":"YulBlock","src":"5041:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5058:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5061:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5051:6:11"},"nodeType":"YulFunctionCall","src":"5051:88:11"},"nodeType":"YulExpressionStatement","src":"5051:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5155:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5158:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5148:6:11"},"nodeType":"YulFunctionCall","src":"5148:15:11"},"nodeType":"YulExpressionStatement","src":"5148:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5179:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5182:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5172:6:11"},"nodeType":"YulFunctionCall","src":"5172:15:11"},"nodeType":"YulExpressionStatement","src":"5172:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5013:180:11"},{"body":{"nodeType":"YulBlock","src":"5242:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5252:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5274:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5304:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5282:21:11"},"nodeType":"YulFunctionCall","src":"5282:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:11"},"nodeType":"YulFunctionCall","src":"5270:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5256:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5421:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5423:16:11"},"nodeType":"YulFunctionCall","src":"5423:18:11"},"nodeType":"YulExpressionStatement","src":"5423:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5364:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"5376:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5361:2:11"},"nodeType":"YulFunctionCall","src":"5361:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5400:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5412:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5397:2:11"},"nodeType":"YulFunctionCall","src":"5397:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5358:2:11"},"nodeType":"YulFunctionCall","src":"5358:62:11"},"nodeType":"YulIf","src":"5355:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5463:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5452:6:11"},"nodeType":"YulFunctionCall","src":"5452:22:11"},"nodeType":"YulExpressionStatement","src":"5452:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5228:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"5236:4:11","type":""}],"src":"5199:281:11"},{"body":{"nodeType":"YulBlock","src":"5527:88:11","statements":[{"nodeType":"YulAssignment","src":"5537:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5547:18:11"},"nodeType":"YulFunctionCall","src":"5547:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5537:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5596:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"5604:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5576:19:11"},"nodeType":"YulFunctionCall","src":"5576:33:11"},"nodeType":"YulExpressionStatement","src":"5576:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5511:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5520:6:11","type":""}],"src":"5486:129:11"},{"body":{"nodeType":"YulBlock","src":"5703:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"5808:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5810:16:11"},"nodeType":"YulFunctionCall","src":"5810:18:11"},"nodeType":"YulExpressionStatement","src":"5810:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5780:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5788:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5777:2:11"},"nodeType":"YulFunctionCall","src":"5777:30:11"},"nodeType":"YulIf","src":"5774:56:11"},{"nodeType":"YulAssignment","src":"5840:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5852:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5860:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5848:3:11"},"nodeType":"YulFunctionCall","src":"5848:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5840:4:11"}]},{"nodeType":"YulAssignment","src":"5902:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5914:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5920:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:11"},"nodeType":"YulFunctionCall","src":"5910:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5902:4:11"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5687:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5698:4:11","type":""}],"src":"5621:311:11"},{"body":{"nodeType":"YulBlock","src":"6027:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6044:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6047:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6037:6:11"},"nodeType":"YulFunctionCall","src":"6037:12:11"},"nodeType":"YulExpressionStatement","src":"6037:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5938:117:11"},{"body":{"nodeType":"YulBlock","src":"6180:608:11","statements":[{"nodeType":"YulAssignment","src":"6190:90:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6272:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6215:56:11"},"nodeType":"YulFunctionCall","src":"6215:64:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6199:15:11"},"nodeType":"YulFunctionCall","src":"6199:81:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6190:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"6289:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"6300:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6293:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6322:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"6329:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:11"},"nodeType":"YulFunctionCall","src":"6315:21:11"},"nodeType":"YulExpressionStatement","src":"6315:21:11"},{"nodeType":"YulAssignment","src":"6345:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6356:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6363:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6352:3:11"},"nodeType":"YulFunctionCall","src":"6352:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6345:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"6378:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6396:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6408:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6416:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6404:3:11"},"nodeType":"YulFunctionCall","src":"6404:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6392:3:11"},"nodeType":"YulFunctionCall","src":"6392:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6382:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6450:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6464:77:11"},"nodeType":"YulFunctionCall","src":"6464:79:11"},"nodeType":"YulExpressionStatement","src":"6464:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6437:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"6445:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6434:2:11"},"nodeType":"YulFunctionCall","src":"6434:15:11"},"nodeType":"YulIf","src":"6431:122:11"},{"body":{"nodeType":"YulBlock","src":"6638:144:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6653:21:11","value":{"name":"src","nodeType":"YulIdentifier","src":"6671:3:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6657:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6695:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6721:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"6733:3:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6700:20:11"},"nodeType":"YulFunctionCall","src":"6700:37:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:11"},"nodeType":"YulFunctionCall","src":"6688:50:11"},"nodeType":"YulExpressionStatement","src":"6688:50:11"},{"nodeType":"YulAssignment","src":"6751:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6762:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6767:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:11"},"nodeType":"YulFunctionCall","src":"6758:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6751:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6591:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6596:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6588:2:11"},"nodeType":"YulFunctionCall","src":"6588:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6604:25:11","statements":[{"nodeType":"YulAssignment","src":"6606:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6617:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6622:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:11"},"nodeType":"YulFunctionCall","src":"6613:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6606:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"6566:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6568:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"6579:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6572:3:11","type":""}]}]},"src":"6562:220:11"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6150:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6158:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6166:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6174:5:11","type":""}],"src":"6078:710:11"},{"body":{"nodeType":"YulBlock","src":"6888:293:11","statements":[{"body":{"nodeType":"YulBlock","src":"6937:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6939:77:11"},"nodeType":"YulFunctionCall","src":"6939:79:11"},"nodeType":"YulExpressionStatement","src":"6939:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6916:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6924:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6912:3:11"},"nodeType":"YulFunctionCall","src":"6912:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"6931:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6908:3:11"},"nodeType":"YulFunctionCall","src":"6908:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6901:6:11"},"nodeType":"YulFunctionCall","src":"6901:35:11"},"nodeType":"YulIf","src":"6898:122:11"},{"nodeType":"YulVariableDeclaration","src":"7029:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7056:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7043:12:11"},"nodeType":"YulFunctionCall","src":"7043:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7033:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7072:103:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7156:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7144:3:11"},"nodeType":"YulFunctionCall","src":"7144:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"7163:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"7171:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7081:62:11"},"nodeType":"YulFunctionCall","src":"7081:94:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7072:5:11"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6866:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6874:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6882:5:11","type":""}],"src":"6811:370:11"},{"body":{"nodeType":"YulBlock","src":"7276:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7293:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7296:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7286:6:11"},"nodeType":"YulFunctionCall","src":"7286:12:11"},"nodeType":"YulExpressionStatement","src":"7286:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7187:117:11"},{"body":{"nodeType":"YulBlock","src":"7376:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"7481:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7483:16:11"},"nodeType":"YulFunctionCall","src":"7483:18:11"},"nodeType":"YulExpressionStatement","src":"7483:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7453:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7461:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7450:2:11"},"nodeType":"YulFunctionCall","src":"7450:30:11"},"nodeType":"YulIf","src":"7447:56:11"},{"nodeType":"YulAssignment","src":"7513:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7543:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7521:21:11"},"nodeType":"YulFunctionCall","src":"7521:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7513:4:11"}]},{"nodeType":"YulAssignment","src":"7587:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7599:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"7605:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7595:3:11"},"nodeType":"YulFunctionCall","src":"7595:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7587:4:11"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7360:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7371:4:11","type":""}],"src":"7310:307:11"},{"body":{"nodeType":"YulBlock","src":"7687:82:11","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7710:3:11"},{"name":"src","nodeType":"YulIdentifier","src":"7715:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7720:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7697:12:11"},"nodeType":"YulFunctionCall","src":"7697:30:11"},"nodeType":"YulExpressionStatement","src":"7697:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7747:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7752:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:11"},"nodeType":"YulFunctionCall","src":"7743:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"7761:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7736:6:11"},"nodeType":"YulFunctionCall","src":"7736:27:11"},"nodeType":"YulExpressionStatement","src":"7736:27:11"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7669:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7674:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"7679:6:11","type":""}],"src":"7623:146:11"},{"body":{"nodeType":"YulBlock","src":"7858:340:11","statements":[{"nodeType":"YulAssignment","src":"7868:74:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:11"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7893:40:11"},"nodeType":"YulFunctionCall","src":"7893:48:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7877:15:11"},"nodeType":"YulFunctionCall","src":"7877:65:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7868:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7958:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"7965:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7951:6:11"},"nodeType":"YulFunctionCall","src":"7951:21:11"},"nodeType":"YulExpressionStatement","src":"7951:21:11"},{"nodeType":"YulVariableDeclaration","src":"7981:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7996:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"8003:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7992:3:11"},"nodeType":"YulFunctionCall","src":"7992:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7985:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8046:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8048:77:11"},"nodeType":"YulFunctionCall","src":"8048:79:11"},"nodeType":"YulExpressionStatement","src":"8048:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8027:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8032:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8023:3:11"},"nodeType":"YulFunctionCall","src":"8023:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"8041:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8020:2:11"},"nodeType":"YulFunctionCall","src":"8020:25:11"},"nodeType":"YulIf","src":"8017:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8175:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"8180:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8185:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8138:36:11"},"nodeType":"YulFunctionCall","src":"8138:54:11"},"nodeType":"YulExpressionStatement","src":"8138:54:11"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7831:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"7836:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"7844:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7852:5:11","type":""}],"src":"7775:423:11"},{"body":{"nodeType":"YulBlock","src":"8278:277:11","statements":[{"body":{"nodeType":"YulBlock","src":"8327:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8329:77:11"},"nodeType":"YulFunctionCall","src":"8329:79:11"},"nodeType":"YulExpressionStatement","src":"8329:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8306:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8314:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8302:3:11"},"nodeType":"YulFunctionCall","src":"8302:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"8321:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8298:3:11"},"nodeType":"YulFunctionCall","src":"8298:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8291:6:11"},"nodeType":"YulFunctionCall","src":"8291:35:11"},"nodeType":"YulIf","src":"8288:122:11"},{"nodeType":"YulVariableDeclaration","src":"8419:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8446:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8433:12:11"},"nodeType":"YulFunctionCall","src":"8433:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8423:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8462:87:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8522:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8530:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8518:3:11"},"nodeType":"YulFunctionCall","src":"8518:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"8537:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"8545:3:11"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8471:46:11"},"nodeType":"YulFunctionCall","src":"8471:78:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8462:5:11"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8256:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"8264:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8272:5:11","type":""}],"src":"8217:338:11"},{"body":{"nodeType":"YulBlock","src":"8754:1316:11","statements":[{"body":{"nodeType":"YulBlock","src":"8801:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8803:77:11"},"nodeType":"YulFunctionCall","src":"8803:79:11"},"nodeType":"YulExpressionStatement","src":"8803:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8775:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8771:3:11"},"nodeType":"YulFunctionCall","src":"8771:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8796:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8767:3:11"},"nodeType":"YulFunctionCall","src":"8767:33:11"},"nodeType":"YulIf","src":"8764:120:11"},{"nodeType":"YulBlock","src":"8894:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8909:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8923:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8913:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8938:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8984:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:11"},"nodeType":"YulFunctionCall","src":"8969:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8993:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8948:20:11"},"nodeType":"YulFunctionCall","src":"8948:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8938:6:11"}]}]},{"nodeType":"YulBlock","src":"9021:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9036:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9050:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9040:6:11","type":""}]},{"nodeType":"YulAssignment","src":"9066:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9101:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9112:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9097:3:11"},"nodeType":"YulFunctionCall","src":"9097:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9121:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9076:20:11"},"nodeType":"YulFunctionCall","src":"9076:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9066:6:11"}]}]},{"nodeType":"YulBlock","src":"9149:303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9164:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9195:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9206:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:11"},"nodeType":"YulFunctionCall","src":"9191:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9178:12:11"},"nodeType":"YulFunctionCall","src":"9178:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9168:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9257:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9259:77:11"},"nodeType":"YulFunctionCall","src":"9259:79:11"},"nodeType":"YulExpressionStatement","src":"9259:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9229:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9237:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9226:2:11"},"nodeType":"YulFunctionCall","src":"9226:30:11"},"nodeType":"YulIf","src":"9223:117:11"},{"nodeType":"YulAssignment","src":"9354:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9425:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:11"},"nodeType":"YulFunctionCall","src":"9410:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9434:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9364:45:11"},"nodeType":"YulFunctionCall","src":"9364:78:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9354:6:11"}]}]},{"nodeType":"YulBlock","src":"9462:303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9477:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9508:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9519:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9504:3:11"},"nodeType":"YulFunctionCall","src":"9504:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9491:12:11"},"nodeType":"YulFunctionCall","src":"9491:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9481:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9570:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9572:77:11"},"nodeType":"YulFunctionCall","src":"9572:79:11"},"nodeType":"YulExpressionStatement","src":"9572:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9542:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9550:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9539:2:11"},"nodeType":"YulFunctionCall","src":"9539:30:11"},"nodeType":"YulIf","src":"9536:117:11"},{"nodeType":"YulAssignment","src":"9667:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9727:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9738:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:11"},"nodeType":"YulFunctionCall","src":"9723:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9747:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9677:45:11"},"nodeType":"YulFunctionCall","src":"9677:78:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9667:6:11"}]}]},{"nodeType":"YulBlock","src":"9775:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9790:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9821:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9832:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9817:3:11"},"nodeType":"YulFunctionCall","src":"9817:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9804:12:11"},"nodeType":"YulFunctionCall","src":"9804:33:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9794:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9884:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9886:77:11"},"nodeType":"YulFunctionCall","src":"9886:79:11"},"nodeType":"YulExpressionStatement","src":"9886:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9856:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9864:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9853:2:11"},"nodeType":"YulFunctionCall","src":"9853:30:11"},"nodeType":"YulIf","src":"9850:117:11"},{"nodeType":"YulAssignment","src":"9981:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10025:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10036:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10021:3:11"},"nodeType":"YulFunctionCall","src":"10021:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10045:7:11"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9991:29:11"},"nodeType":"YulFunctionCall","src":"9991:62:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9981:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8692:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8703:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8715:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8723:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8731:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8739:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8747:6:11","type":""}],"src":"8561:1509:11"},{"body":{"nodeType":"YulBlock","src":"10158:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"10263:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10265:16:11"},"nodeType":"YulFunctionCall","src":"10265:18:11"},"nodeType":"YulExpressionStatement","src":"10265:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10235:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10243:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10232:2:11"},"nodeType":"YulFunctionCall","src":"10232:30:11"},"nodeType":"YulIf","src":"10229:56:11"},{"nodeType":"YulAssignment","src":"10295:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10307:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10315:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10303:3:11"},"nodeType":"YulFunctionCall","src":"10303:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10295:4:11"}]},{"nodeType":"YulAssignment","src":"10357:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10369:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"10375:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10365:3:11"},"nodeType":"YulFunctionCall","src":"10365:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10357:4:11"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10142:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10153:4:11","type":""}],"src":"10076:311:11"},{"body":{"nodeType":"YulBlock","src":"10512:608:11","statements":[{"nodeType":"YulAssignment","src":"10522:90:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10604:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10547:56:11"},"nodeType":"YulFunctionCall","src":"10547:64:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10531:15:11"},"nodeType":"YulFunctionCall","src":"10531:81:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10522:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"10621:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"10632:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10625:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10654:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"10661:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10647:6:11"},"nodeType":"YulFunctionCall","src":"10647:21:11"},"nodeType":"YulExpressionStatement","src":"10647:21:11"},{"nodeType":"YulAssignment","src":"10677:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10688:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10695:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10684:3:11"},"nodeType":"YulFunctionCall","src":"10684:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"10677:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"10710:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10728:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10740:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10748:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10736:3:11"},"nodeType":"YulFunctionCall","src":"10736:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10724:3:11"},"nodeType":"YulFunctionCall","src":"10724:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"10714:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10782:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"10796:77:11"},"nodeType":"YulFunctionCall","src":"10796:79:11"},"nodeType":"YulExpressionStatement","src":"10796:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"10769:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"10777:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10766:2:11"},"nodeType":"YulFunctionCall","src":"10766:15:11"},"nodeType":"YulIf","src":"10763:122:11"},{"body":{"nodeType":"YulBlock","src":"10970:144:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10985:21:11","value":{"name":"src","nodeType":"YulIdentifier","src":"11003:3:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"10989:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11027:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11053:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"11065:3:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11032:20:11"},"nodeType":"YulFunctionCall","src":"11032:37:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11020:6:11"},"nodeType":"YulFunctionCall","src":"11020:50:11"},"nodeType":"YulExpressionStatement","src":"11020:50:11"},{"nodeType":"YulAssignment","src":"11083:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11094:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11099:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11090:3:11"},"nodeType":"YulFunctionCall","src":"11090:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11083:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10923:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"10928:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10920:2:11"},"nodeType":"YulFunctionCall","src":"10920:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10936:25:11","statements":[{"nodeType":"YulAssignment","src":"10938:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10949:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10954:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10945:3:11"},"nodeType":"YulFunctionCall","src":"10945:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"10938:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"10898:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10900:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"10911:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"10904:3:11","type":""}]}]},"src":"10894:220:11"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10482:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10490:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"10498:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10506:5:11","type":""}],"src":"10410:710:11"},{"body":{"nodeType":"YulBlock","src":"11220:293:11","statements":[{"body":{"nodeType":"YulBlock","src":"11269:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11271:77:11"},"nodeType":"YulFunctionCall","src":"11271:79:11"},"nodeType":"YulExpressionStatement","src":"11271:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11248:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11256:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11244:3:11"},"nodeType":"YulFunctionCall","src":"11244:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"11263:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11240:3:11"},"nodeType":"YulFunctionCall","src":"11240:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11233:6:11"},"nodeType":"YulFunctionCall","src":"11233:35:11"},"nodeType":"YulIf","src":"11230:122:11"},{"nodeType":"YulVariableDeclaration","src":"11361:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11388:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11375:12:11"},"nodeType":"YulFunctionCall","src":"11375:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11365:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11404:103:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11480:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11488:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11476:3:11"},"nodeType":"YulFunctionCall","src":"11476:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"11495:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"11503:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11413:62:11"},"nodeType":"YulFunctionCall","src":"11413:94:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11404:5:11"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11198:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"11206:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11214:5:11","type":""}],"src":"11143:370:11"},{"body":{"nodeType":"YulBlock","src":"11652:761:11","statements":[{"body":{"nodeType":"YulBlock","src":"11698:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11700:77:11"},"nodeType":"YulFunctionCall","src":"11700:79:11"},"nodeType":"YulExpressionStatement","src":"11700:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11673:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11682:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11669:3:11"},"nodeType":"YulFunctionCall","src":"11669:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"11694:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11665:3:11"},"nodeType":"YulFunctionCall","src":"11665:32:11"},"nodeType":"YulIf","src":"11662:119:11"},{"nodeType":"YulBlock","src":"11791:302:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11806:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11837:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11848:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11833:3:11"},"nodeType":"YulFunctionCall","src":"11833:17:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11820:12:11"},"nodeType":"YulFunctionCall","src":"11820:31:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11810:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11898:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11900:77:11"},"nodeType":"YulFunctionCall","src":"11900:79:11"},"nodeType":"YulExpressionStatement","src":"11900:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11870:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11878:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11867:2:11"},"nodeType":"YulFunctionCall","src":"11867:30:11"},"nodeType":"YulIf","src":"11864:117:11"},{"nodeType":"YulAssignment","src":"11995:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12055:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"12066:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12051:3:11"},"nodeType":"YulFunctionCall","src":"12051:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12075:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12005:45:11"},"nodeType":"YulFunctionCall","src":"12005:78:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11995:6:11"}]}]},{"nodeType":"YulBlock","src":"12103:303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12118:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12149:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12160:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12145:3:11"},"nodeType":"YulFunctionCall","src":"12145:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12132:12:11"},"nodeType":"YulFunctionCall","src":"12132:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12122:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12211:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12213:77:11"},"nodeType":"YulFunctionCall","src":"12213:79:11"},"nodeType":"YulExpressionStatement","src":"12213:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12183:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12191:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12180:2:11"},"nodeType":"YulFunctionCall","src":"12180:30:11"},"nodeType":"YulIf","src":"12177:117:11"},{"nodeType":"YulAssignment","src":"12308:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12368:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"12379:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12364:3:11"},"nodeType":"YulFunctionCall","src":"12364:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12388:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12318:45:11"},"nodeType":"YulFunctionCall","src":"12318:78:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12308:6:11"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11614:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11625:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11637:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11645:6:11","type":""}],"src":"11519:894:11"},{"body":{"nodeType":"YulBlock","src":"12493:40:11","statements":[{"nodeType":"YulAssignment","src":"12504:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12520:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12514:5:11"},"nodeType":"YulFunctionCall","src":"12514:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12504:6:11"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12476:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12486:6:11","type":""}],"src":"12419:114:11"},{"body":{"nodeType":"YulBlock","src":"12650:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12667:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"12672:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12660:6:11"},"nodeType":"YulFunctionCall","src":"12660:19:11"},"nodeType":"YulExpressionStatement","src":"12660:19:11"},{"nodeType":"YulAssignment","src":"12688:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12707:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12712:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12703:3:11"},"nodeType":"YulFunctionCall","src":"12703:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12688:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12622:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"12627:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12638:11:11","type":""}],"src":"12539:184:11"},{"body":{"nodeType":"YulBlock","src":"12801:60:11","statements":[{"nodeType":"YulAssignment","src":"12811:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12819:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12811:4:11"}]},{"nodeType":"YulAssignment","src":"12832:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12844:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12849:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12840:3:11"},"nodeType":"YulFunctionCall","src":"12840:14:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12832:4:11"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12788:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12796:4:11","type":""}],"src":"12729:132:11"},{"body":{"nodeType":"YulBlock","src":"12922:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12939:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12962:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12944:17:11"},"nodeType":"YulFunctionCall","src":"12944:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12932:6:11"},"nodeType":"YulFunctionCall","src":"12932:37:11"},"nodeType":"YulExpressionStatement","src":"12932:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12910:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12917:3:11","type":""}],"src":"12867:108:11"},{"body":{"nodeType":"YulBlock","src":"13061:99:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13105:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"13113:3:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13071:33:11"},"nodeType":"YulFunctionCall","src":"13071:46:11"},"nodeType":"YulExpressionStatement","src":"13071:46:11"},{"nodeType":"YulAssignment","src":"13126:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13144:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13149:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13140:3:11"},"nodeType":"YulFunctionCall","src":"13140:14:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13126:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13034:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13042:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13050:10:11","type":""}],"src":"12981:179:11"},{"body":{"nodeType":"YulBlock","src":"13241:38:11","statements":[{"nodeType":"YulAssignment","src":"13251:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13263:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13268:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13259:3:11"},"nodeType":"YulFunctionCall","src":"13259:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13251:4:11"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13228:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13236:4:11","type":""}],"src":"13166:113:11"},{"body":{"nodeType":"YulBlock","src":"13439:608:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13449:68:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13511:5:11"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13463:47:11"},"nodeType":"YulFunctionCall","src":"13463:54:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13453:6:11","type":""}]},{"nodeType":"YulAssignment","src":"13526:93:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13607:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13612:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13533:73:11"},"nodeType":"YulFunctionCall","src":"13533:86:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13526:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"13628:71:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13693:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13643:49:11"},"nodeType":"YulFunctionCall","src":"13643:56:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13632:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13708:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13722:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13712:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13798:224:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13812:34:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13839:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13833:5:11"},"nodeType":"YulFunctionCall","src":"13833:13:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13816:13:11","type":""}]},{"nodeType":"YulAssignment","src":"13859:70:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13910:13:11"},{"name":"pos","nodeType":"YulIdentifier","src":"13925:3:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13866:43:11"},"nodeType":"YulFunctionCall","src":"13866:63:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13859:3:11"}]},{"nodeType":"YulAssignment","src":"13942:70:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14005:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13952:52:11"},"nodeType":"YulFunctionCall","src":"13952:60:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13942:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13760:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"13763:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13757:2:11"},"nodeType":"YulFunctionCall","src":"13757:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13771:18:11","statements":[{"nodeType":"YulAssignment","src":"13773:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13782:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"13785:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13778:3:11"},"nodeType":"YulFunctionCall","src":"13778:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13773:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"13742:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13744:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13753:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13748:1:11","type":""}]}]},"src":"13738:284:11"},{"nodeType":"YulAssignment","src":"14031:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"14038:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14031:3:11"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13418:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13425:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13434:3:11","type":""}],"src":"13315:732:11"},{"body":{"nodeType":"YulBlock","src":"14201:225:11","statements":[{"nodeType":"YulAssignment","src":"14211:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14223:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14234:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14219:3:11"},"nodeType":"YulFunctionCall","src":"14219:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14211:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14258:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14269:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14254:3:11"},"nodeType":"YulFunctionCall","src":"14254:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14277:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14283:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14273:3:11"},"nodeType":"YulFunctionCall","src":"14273:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14247:6:11"},"nodeType":"YulFunctionCall","src":"14247:47:11"},"nodeType":"YulExpressionStatement","src":"14247:47:11"},{"nodeType":"YulAssignment","src":"14303:116:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14405:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"14414:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14311:93:11"},"nodeType":"YulFunctionCall","src":"14311:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14303:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14173:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14185:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14196:4:11","type":""}],"src":"14053:373:11"},{"body":{"nodeType":"YulBlock","src":"14472:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"14526:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14535:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14538:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14528:6:11"},"nodeType":"YulFunctionCall","src":"14528:12:11"},"nodeType":"YulExpressionStatement","src":"14528:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14495:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14517:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14502:14:11"},"nodeType":"YulFunctionCall","src":"14502:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14492:2:11"},"nodeType":"YulFunctionCall","src":"14492:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14485:6:11"},"nodeType":"YulFunctionCall","src":"14485:40:11"},"nodeType":"YulIf","src":"14482:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14465:5:11","type":""}],"src":"14432:116:11"},{"body":{"nodeType":"YulBlock","src":"14603:84:11","statements":[{"nodeType":"YulAssignment","src":"14613:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14635:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14622:12:11"},"nodeType":"YulFunctionCall","src":"14622:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14613:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14675:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"14651:23:11"},"nodeType":"YulFunctionCall","src":"14651:30:11"},"nodeType":"YulExpressionStatement","src":"14651:30:11"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14581:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"14589:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14597:5:11","type":""}],"src":"14554:133:11"},{"body":{"nodeType":"YulBlock","src":"14773:388:11","statements":[{"body":{"nodeType":"YulBlock","src":"14819:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14821:77:11"},"nodeType":"YulFunctionCall","src":"14821:79:11"},"nodeType":"YulExpressionStatement","src":"14821:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14794:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14803:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14790:3:11"},"nodeType":"YulFunctionCall","src":"14790:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"14815:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14786:3:11"},"nodeType":"YulFunctionCall","src":"14786:32:11"},"nodeType":"YulIf","src":"14783:119:11"},{"nodeType":"YulBlock","src":"14912:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14927:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"14941:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14931:6:11","type":""}]},{"nodeType":"YulAssignment","src":"14956:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14991:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15002:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14987:3:11"},"nodeType":"YulFunctionCall","src":"14987:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15011:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14966:20:11"},"nodeType":"YulFunctionCall","src":"14966:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14956:6:11"}]}]},{"nodeType":"YulBlock","src":"15039:115:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15054:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15068:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15058:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15084:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15116:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15127:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15112:3:11"},"nodeType":"YulFunctionCall","src":"15112:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15136:7:11"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"15094:17:11"},"nodeType":"YulFunctionCall","src":"15094:50:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15084:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14735:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14746:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14758:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14766:6:11","type":""}],"src":"14693:468:11"},{"body":{"nodeType":"YulBlock","src":"15250:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"15296:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15298:77:11"},"nodeType":"YulFunctionCall","src":"15298:79:11"},"nodeType":"YulExpressionStatement","src":"15298:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15271:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15280:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15267:3:11"},"nodeType":"YulFunctionCall","src":"15267:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"15292:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15263:3:11"},"nodeType":"YulFunctionCall","src":"15263:32:11"},"nodeType":"YulIf","src":"15260:119:11"},{"nodeType":"YulBlock","src":"15389:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15404:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15418:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15408:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15433:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15468:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15479:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15464:3:11"},"nodeType":"YulFunctionCall","src":"15464:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15488:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15443:20:11"},"nodeType":"YulFunctionCall","src":"15443:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15433:6:11"}]}]},{"nodeType":"YulBlock","src":"15516:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15531:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15545:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15535:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15561:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15596:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15607:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15592:3:11"},"nodeType":"YulFunctionCall","src":"15592:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15616:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15571:20:11"},"nodeType":"YulFunctionCall","src":"15571:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15561:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15212:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15223:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15235:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15243:6:11","type":""}],"src":"15167:474:11"},{"body":{"nodeType":"YulBlock","src":"15790:946:11","statements":[{"body":{"nodeType":"YulBlock","src":"15837:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15839:77:11"},"nodeType":"YulFunctionCall","src":"15839:79:11"},"nodeType":"YulExpressionStatement","src":"15839:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15811:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15820:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15807:3:11"},"nodeType":"YulFunctionCall","src":"15807:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"15832:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15803:3:11"},"nodeType":"YulFunctionCall","src":"15803:33:11"},"nodeType":"YulIf","src":"15800:120:11"},{"nodeType":"YulBlock","src":"15930:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15945:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15959:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15949:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15974:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16009:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16020:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16005:3:11"},"nodeType":"YulFunctionCall","src":"16005:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16029:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15984:20:11"},"nodeType":"YulFunctionCall","src":"15984:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15974:6:11"}]}]},{"nodeType":"YulBlock","src":"16057:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16072:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16086:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16076:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16102:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16137:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16148:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16133:3:11"},"nodeType":"YulFunctionCall","src":"16133:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16157:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16112:20:11"},"nodeType":"YulFunctionCall","src":"16112:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16102:6:11"}]}]},{"nodeType":"YulBlock","src":"16185:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16200:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16214:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16204:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16230:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16265:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16276:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16261:3:11"},"nodeType":"YulFunctionCall","src":"16261:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16285:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16240:20:11"},"nodeType":"YulFunctionCall","src":"16240:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16230:6:11"}]}]},{"nodeType":"YulBlock","src":"16313:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16328:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16342:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16332:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16358:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16393:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16404:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16389:3:11"},"nodeType":"YulFunctionCall","src":"16389:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16413:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16368:20:11"},"nodeType":"YulFunctionCall","src":"16368:53:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16358:6:11"}]}]},{"nodeType":"YulBlock","src":"16441:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16456:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16487:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16498:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16483:3:11"},"nodeType":"YulFunctionCall","src":"16483:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16470:12:11"},"nodeType":"YulFunctionCall","src":"16470:33:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16460:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"16550:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16552:77:11"},"nodeType":"YulFunctionCall","src":"16552:79:11"},"nodeType":"YulExpressionStatement","src":"16552:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16522:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16530:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16519:2:11"},"nodeType":"YulFunctionCall","src":"16519:30:11"},"nodeType":"YulIf","src":"16516:117:11"},{"nodeType":"YulAssignment","src":"16647:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16691:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16702:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16687:3:11"},"nodeType":"YulFunctionCall","src":"16687:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16711:7:11"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16657:29:11"},"nodeType":"YulFunctionCall","src":"16657:62:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"16647:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15728:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15739:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15751:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15759:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15767:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15775:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15783:6:11","type":""}],"src":"15647:1089:11"},{"body":{"nodeType":"YulBlock","src":"16848:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16870:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16878:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16866:3:11"},"nodeType":"YulFunctionCall","src":"16866:14:11"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"16882:34:11","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16859:6:11"},"nodeType":"YulFunctionCall","src":"16859:58:11"},"nodeType":"YulExpressionStatement","src":"16859:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16938:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16946:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16934:3:11"},"nodeType":"YulFunctionCall","src":"16934:15:11"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"16951:12:11","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16927:6:11"},"nodeType":"YulFunctionCall","src":"16927:37:11"},"nodeType":"YulExpressionStatement","src":"16927:37:11"}]},"name":"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16840:6:11","type":""}],"src":"16742:229:11"},{"body":{"nodeType":"YulBlock","src":"17123:220:11","statements":[{"nodeType":"YulAssignment","src":"17133:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17199:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17204:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17140:58:11"},"nodeType":"YulFunctionCall","src":"17140:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17133:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17305:3:11"}],"functionName":{"name":"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","nodeType":"YulIdentifier","src":"17216:88:11"},"nodeType":"YulFunctionCall","src":"17216:93:11"},"nodeType":"YulExpressionStatement","src":"17216:93:11"},{"nodeType":"YulAssignment","src":"17318:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17329:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17334:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17325:3:11"},"nodeType":"YulFunctionCall","src":"17325:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17318:3:11"}]}]},"name":"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17111:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17119:3:11","type":""}],"src":"16977:366:11"},{"body":{"nodeType":"YulBlock","src":"17520:248:11","statements":[{"nodeType":"YulAssignment","src":"17530:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17542:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17553:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17538:3:11"},"nodeType":"YulFunctionCall","src":"17538:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17530:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17577:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17588:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17573:3:11"},"nodeType":"YulFunctionCall","src":"17573:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17596:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17602:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17592:3:11"},"nodeType":"YulFunctionCall","src":"17592:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17566:6:11"},"nodeType":"YulFunctionCall","src":"17566:47:11"},"nodeType":"YulExpressionStatement","src":"17566:47:11"},{"nodeType":"YulAssignment","src":"17622:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17756:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17630:124:11"},"nodeType":"YulFunctionCall","src":"17630:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17622:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17500:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17515:4:11","type":""}],"src":"17349:419:11"},{"body":{"nodeType":"YulBlock","src":"17802:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17819:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17822:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17812:6:11"},"nodeType":"YulFunctionCall","src":"17812:88:11"},"nodeType":"YulExpressionStatement","src":"17812:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17916:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17919:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17909:6:11"},"nodeType":"YulFunctionCall","src":"17909:15:11"},"nodeType":"YulExpressionStatement","src":"17909:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17940:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17943:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17933:6:11"},"nodeType":"YulFunctionCall","src":"17933:15:11"},"nodeType":"YulExpressionStatement","src":"17933:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"17774:180:11"},{"body":{"nodeType":"YulBlock","src":"18011:269:11","statements":[{"nodeType":"YulAssignment","src":"18021:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18035:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"18041:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18031:3:11"},"nodeType":"YulFunctionCall","src":"18031:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18021:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"18052:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18082:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"18088:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18078:3:11"},"nodeType":"YulFunctionCall","src":"18078:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18056:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"18129:51:11","statements":[{"nodeType":"YulAssignment","src":"18143:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18157:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18165:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18153:3:11"},"nodeType":"YulFunctionCall","src":"18153:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18143:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18109:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18102:6:11"},"nodeType":"YulFunctionCall","src":"18102:26:11"},"nodeType":"YulIf","src":"18099:81:11"},{"body":{"nodeType":"YulBlock","src":"18232:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18246:16:11"},"nodeType":"YulFunctionCall","src":"18246:18:11"},"nodeType":"YulExpressionStatement","src":"18246:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18196:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18219:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18227:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18216:2:11"},"nodeType":"YulFunctionCall","src":"18216:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18193:2:11"},"nodeType":"YulFunctionCall","src":"18193:38:11"},"nodeType":"YulIf","src":"18190:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"17995:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18004:6:11","type":""}],"src":"17960:320:11"},{"body":{"nodeType":"YulBlock","src":"18392:128:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18414:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18422:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18410:3:11"},"nodeType":"YulFunctionCall","src":"18410:14:11"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"18426:34:11","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18403:6:11"},"nodeType":"YulFunctionCall","src":"18403:58:11"},"nodeType":"YulExpressionStatement","src":"18403:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18482:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18490:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18478:3:11"},"nodeType":"YulFunctionCall","src":"18478:15:11"},{"hexValue":"6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"18495:17:11","type":"","value":"er nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18471:6:11"},"nodeType":"YulFunctionCall","src":"18471:42:11"},"nodeType":"YulExpressionStatement","src":"18471:42:11"}]},"name":"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18384:6:11","type":""}],"src":"18286:234:11"},{"body":{"nodeType":"YulBlock","src":"18672:220:11","statements":[{"nodeType":"YulAssignment","src":"18682:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18748:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18753:2:11","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18689:58:11"},"nodeType":"YulFunctionCall","src":"18689:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18682:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18854:3:11"}],"functionName":{"name":"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","nodeType":"YulIdentifier","src":"18765:88:11"},"nodeType":"YulFunctionCall","src":"18765:93:11"},"nodeType":"YulExpressionStatement","src":"18765:93:11"},{"nodeType":"YulAssignment","src":"18867:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18878:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18883:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18874:3:11"},"nodeType":"YulFunctionCall","src":"18874:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18867:3:11"}]}]},"name":"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18660:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18668:3:11","type":""}],"src":"18526:366:11"},{"body":{"nodeType":"YulBlock","src":"19069:248:11","statements":[{"nodeType":"YulAssignment","src":"19079:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19091:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19102:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19087:3:11"},"nodeType":"YulFunctionCall","src":"19087:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19079:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19126:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19137:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19122:3:11"},"nodeType":"YulFunctionCall","src":"19122:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19145:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"19151:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19141:3:11"},"nodeType":"YulFunctionCall","src":"19141:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19115:6:11"},"nodeType":"YulFunctionCall","src":"19115:47:11"},"nodeType":"YulExpressionStatement","src":"19115:47:11"},{"nodeType":"YulAssignment","src":"19171:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19305:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19179:124:11"},"nodeType":"YulFunctionCall","src":"19179:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19171:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19049:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19064:4:11","type":""}],"src":"18898:419:11"},{"body":{"nodeType":"YulBlock","src":"19429:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19451:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19459:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19447:3:11"},"nodeType":"YulFunctionCall","src":"19447:14:11"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"19463:34:11","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19440:6:11"},"nodeType":"YulFunctionCall","src":"19440:58:11"},"nodeType":"YulExpressionStatement","src":"19440:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19519:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19527:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19515:3:11"},"nodeType":"YulFunctionCall","src":"19515:15:11"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"19532:11:11","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19508:6:11"},"nodeType":"YulFunctionCall","src":"19508:36:11"},"nodeType":"YulExpressionStatement","src":"19508:36:11"}]},"name":"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19421:6:11","type":""}],"src":"19323:228:11"},{"body":{"nodeType":"YulBlock","src":"19703:220:11","statements":[{"nodeType":"YulAssignment","src":"19713:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19779:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"19784:2:11","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19720:58:11"},"nodeType":"YulFunctionCall","src":"19720:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19713:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19885:3:11"}],"functionName":{"name":"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","nodeType":"YulIdentifier","src":"19796:88:11"},"nodeType":"YulFunctionCall","src":"19796:93:11"},"nodeType":"YulExpressionStatement","src":"19796:93:11"},{"nodeType":"YulAssignment","src":"19898:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19909:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"19914:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19905:3:11"},"nodeType":"YulFunctionCall","src":"19905:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19898:3:11"}]}]},"name":"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19691:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19699:3:11","type":""}],"src":"19557:366:11"},{"body":{"nodeType":"YulBlock","src":"20100:248:11","statements":[{"nodeType":"YulAssignment","src":"20110:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20122:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20133:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20118:3:11"},"nodeType":"YulFunctionCall","src":"20118:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20110:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20157:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20168:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20153:3:11"},"nodeType":"YulFunctionCall","src":"20153:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20176:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20182:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20172:3:11"},"nodeType":"YulFunctionCall","src":"20172:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20146:6:11"},"nodeType":"YulFunctionCall","src":"20146:47:11"},"nodeType":"YulExpressionStatement","src":"20146:47:11"},{"nodeType":"YulAssignment","src":"20202:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20336:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20210:124:11"},"nodeType":"YulFunctionCall","src":"20210:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20202:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20080:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20095:4:11","type":""}],"src":"19929:419:11"},{"body":{"nodeType":"YulBlock","src":"20382:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20399:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20402:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20392:6:11"},"nodeType":"YulFunctionCall","src":"20392:88:11"},"nodeType":"YulExpressionStatement","src":"20392:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20496:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20499:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20489:6:11"},"nodeType":"YulFunctionCall","src":"20489:15:11"},"nodeType":"YulExpressionStatement","src":"20489:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20520:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20523:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20513:6:11"},"nodeType":"YulFunctionCall","src":"20513:15:11"},"nodeType":"YulExpressionStatement","src":"20513:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20354:180:11"},{"body":{"nodeType":"YulBlock","src":"20568:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20585:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20588:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20578:6:11"},"nodeType":"YulFunctionCall","src":"20578:88:11"},"nodeType":"YulExpressionStatement","src":"20578:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20682:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20685:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20675:6:11"},"nodeType":"YulFunctionCall","src":"20675:15:11"},"nodeType":"YulExpressionStatement","src":"20675:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20706:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20709:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20699:6:11"},"nodeType":"YulFunctionCall","src":"20699:15:11"},"nodeType":"YulExpressionStatement","src":"20699:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20540:180:11"},{"body":{"nodeType":"YulBlock","src":"20769:190:11","statements":[{"nodeType":"YulAssignment","src":"20779:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20806:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20788:17:11"},"nodeType":"YulFunctionCall","src":"20788:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20779:5:11"}]},{"body":{"nodeType":"YulBlock","src":"20902:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20904:16:11"},"nodeType":"YulFunctionCall","src":"20904:18:11"},"nodeType":"YulExpressionStatement","src":"20904:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20827:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"20834:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20824:2:11"},"nodeType":"YulFunctionCall","src":"20824:77:11"},"nodeType":"YulIf","src":"20821:103:11"},{"nodeType":"YulAssignment","src":"20933:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20944:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"20951:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20940:3:11"},"nodeType":"YulFunctionCall","src":"20940:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20933:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20755:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20765:3:11","type":""}],"src":"20726:233:11"},{"body":{"nodeType":"YulBlock","src":"21071:121:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21093:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21101:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21089:3:11"},"nodeType":"YulFunctionCall","src":"21089:14:11"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"21105:34:11","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21082:6:11"},"nodeType":"YulFunctionCall","src":"21082:58:11"},"nodeType":"YulExpressionStatement","src":"21082:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21161:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21169:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21157:3:11"},"nodeType":"YulFunctionCall","src":"21157:15:11"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"21174:10:11","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21150:6:11"},"nodeType":"YulFunctionCall","src":"21150:35:11"},"nodeType":"YulExpressionStatement","src":"21150:35:11"}]},"name":"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21063:6:11","type":""}],"src":"20965:227:11"},{"body":{"nodeType":"YulBlock","src":"21344:220:11","statements":[{"nodeType":"YulAssignment","src":"21354:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21420:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21425:2:11","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21361:58:11"},"nodeType":"YulFunctionCall","src":"21361:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21354:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21526:3:11"}],"functionName":{"name":"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","nodeType":"YulIdentifier","src":"21437:88:11"},"nodeType":"YulFunctionCall","src":"21437:93:11"},"nodeType":"YulExpressionStatement","src":"21437:93:11"},{"nodeType":"YulAssignment","src":"21539:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21550:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21555:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21546:3:11"},"nodeType":"YulFunctionCall","src":"21546:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21539:3:11"}]}]},"name":"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21332:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21340:3:11","type":""}],"src":"21198:366:11"},{"body":{"nodeType":"YulBlock","src":"21741:248:11","statements":[{"nodeType":"YulAssignment","src":"21751:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21763:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21774:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21759:3:11"},"nodeType":"YulFunctionCall","src":"21759:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21751:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21798:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21809:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21794:3:11"},"nodeType":"YulFunctionCall","src":"21794:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21817:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"21823:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21813:3:11"},"nodeType":"YulFunctionCall","src":"21813:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21787:6:11"},"nodeType":"YulFunctionCall","src":"21787:47:11"},"nodeType":"YulExpressionStatement","src":"21787:47:11"},{"nodeType":"YulAssignment","src":"21843:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21977:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21851:124:11"},"nodeType":"YulFunctionCall","src":"21851:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21843:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21721:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21736:4:11","type":""}],"src":"21570:419:11"},{"body":{"nodeType":"YulBlock","src":"22101:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22123:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22131:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22119:3:11"},"nodeType":"YulFunctionCall","src":"22119:14:11"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"22135:34:11","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22112:6:11"},"nodeType":"YulFunctionCall","src":"22112:58:11"},"nodeType":"YulExpressionStatement","src":"22112:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22191:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22199:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22187:3:11"},"nodeType":"YulFunctionCall","src":"22187:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"22204:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22180:6:11"},"nodeType":"YulFunctionCall","src":"22180:32:11"},"nodeType":"YulExpressionStatement","src":"22180:32:11"}]},"name":"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22093:6:11","type":""}],"src":"21995:224:11"},{"body":{"nodeType":"YulBlock","src":"22371:220:11","statements":[{"nodeType":"YulAssignment","src":"22381:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22447:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22452:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22388:58:11"},"nodeType":"YulFunctionCall","src":"22388:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22381:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22553:3:11"}],"functionName":{"name":"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","nodeType":"YulIdentifier","src":"22464:88:11"},"nodeType":"YulFunctionCall","src":"22464:93:11"},"nodeType":"YulExpressionStatement","src":"22464:93:11"},{"nodeType":"YulAssignment","src":"22566:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22577:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22582:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22573:3:11"},"nodeType":"YulFunctionCall","src":"22573:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22566:3:11"}]}]},"name":"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22359:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22367:3:11","type":""}],"src":"22225:366:11"},{"body":{"nodeType":"YulBlock","src":"22768:248:11","statements":[{"nodeType":"YulAssignment","src":"22778:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22790:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22801:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22786:3:11"},"nodeType":"YulFunctionCall","src":"22786:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22778:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22825:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22836:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22821:3:11"},"nodeType":"YulFunctionCall","src":"22821:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22844:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"22850:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22840:3:11"},"nodeType":"YulFunctionCall","src":"22840:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22814:6:11"},"nodeType":"YulFunctionCall","src":"22814:47:11"},"nodeType":"YulExpressionStatement","src":"22814:47:11"},{"nodeType":"YulAssignment","src":"22870:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23004:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22878:124:11"},"nodeType":"YulFunctionCall","src":"22878:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22870:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22748:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22763:4:11","type":""}],"src":"22597:419:11"},{"body":{"nodeType":"YulBlock","src":"23128:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23150:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"23158:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23146:3:11"},"nodeType":"YulFunctionCall","src":"23146:14:11"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"23162:34:11","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23139:6:11"},"nodeType":"YulFunctionCall","src":"23139:58:11"},"nodeType":"YulExpressionStatement","src":"23139:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23218:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"23226:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23214:3:11"},"nodeType":"YulFunctionCall","src":"23214:15:11"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"23231:12:11","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23207:6:11"},"nodeType":"YulFunctionCall","src":"23207:37:11"},"nodeType":"YulExpressionStatement","src":"23207:37:11"}]},"name":"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23120:6:11","type":""}],"src":"23022:229:11"},{"body":{"nodeType":"YulBlock","src":"23403:220:11","statements":[{"nodeType":"YulAssignment","src":"23413:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23479:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"23484:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23420:58:11"},"nodeType":"YulFunctionCall","src":"23420:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23413:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23585:3:11"}],"functionName":{"name":"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","nodeType":"YulIdentifier","src":"23496:88:11"},"nodeType":"YulFunctionCall","src":"23496:93:11"},"nodeType":"YulExpressionStatement","src":"23496:93:11"},{"nodeType":"YulAssignment","src":"23598:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23609:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"23614:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23605:3:11"},"nodeType":"YulFunctionCall","src":"23605:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23598:3:11"}]}]},"name":"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23391:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23399:3:11","type":""}],"src":"23257:366:11"},{"body":{"nodeType":"YulBlock","src":"23800:248:11","statements":[{"nodeType":"YulAssignment","src":"23810:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23822:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23833:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23818:3:11"},"nodeType":"YulFunctionCall","src":"23818:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23810:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23857:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23868:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23853:3:11"},"nodeType":"YulFunctionCall","src":"23853:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23876:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"23882:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23872:3:11"},"nodeType":"YulFunctionCall","src":"23872:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23846:6:11"},"nodeType":"YulFunctionCall","src":"23846:47:11"},"nodeType":"YulExpressionStatement","src":"23846:47:11"},{"nodeType":"YulAssignment","src":"23902:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24036:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23910:124:11"},"nodeType":"YulFunctionCall","src":"23910:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23902:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23780:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23795:4:11","type":""}],"src":"23629:419:11"},{"body":{"nodeType":"YulBlock","src":"24098:147:11","statements":[{"nodeType":"YulAssignment","src":"24108:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24131:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24113:17:11"},"nodeType":"YulFunctionCall","src":"24113:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24108:1:11"}]},{"nodeType":"YulAssignment","src":"24142:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24165:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24147:17:11"},"nodeType":"YulFunctionCall","src":"24147:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24142:1:11"}]},{"nodeType":"YulAssignment","src":"24176:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24187:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"24190:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24183:3:11"},"nodeType":"YulFunctionCall","src":"24183:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24176:3:11"}]},{"body":{"nodeType":"YulBlock","src":"24216:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24218:16:11"},"nodeType":"YulFunctionCall","src":"24218:18:11"},"nodeType":"YulExpressionStatement","src":"24218:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24208:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"24211:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24205:2:11"},"nodeType":"YulFunctionCall","src":"24205:10:11"},"nodeType":"YulIf","src":"24202:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24085:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"24088:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24094:3:11","type":""}],"src":"24054:191:11"},{"body":{"nodeType":"YulBlock","src":"24477:408:11","statements":[{"nodeType":"YulAssignment","src":"24487:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24499:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24510:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24495:3:11"},"nodeType":"YulFunctionCall","src":"24495:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24487:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24534:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24545:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24530:3:11"},"nodeType":"YulFunctionCall","src":"24530:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24553:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"24559:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24549:3:11"},"nodeType":"YulFunctionCall","src":"24549:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24523:6:11"},"nodeType":"YulFunctionCall","src":"24523:47:11"},"nodeType":"YulExpressionStatement","src":"24523:47:11"},{"nodeType":"YulAssignment","src":"24579:116:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24681:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"24690:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24587:93:11"},"nodeType":"YulFunctionCall","src":"24587:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24579:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24716:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24727:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24712:3:11"},"nodeType":"YulFunctionCall","src":"24712:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24736:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"24742:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24732:3:11"},"nodeType":"YulFunctionCall","src":"24732:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24705:6:11"},"nodeType":"YulFunctionCall","src":"24705:48:11"},"nodeType":"YulExpressionStatement","src":"24705:48:11"},{"nodeType":"YulAssignment","src":"24762:116:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24864:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"24873:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24770:93:11"},"nodeType":"YulFunctionCall","src":"24770:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24762:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24441:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24453:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24461:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24472:4:11","type":""}],"src":"24251:634:11"},{"body":{"nodeType":"YulBlock","src":"24997:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25019:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25027:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25015:3:11"},"nodeType":"YulFunctionCall","src":"25015:14:11"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"25031:34:11","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25008:6:11"},"nodeType":"YulFunctionCall","src":"25008:58:11"},"nodeType":"YulExpressionStatement","src":"25008:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25087:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25095:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25083:3:11"},"nodeType":"YulFunctionCall","src":"25083:15:11"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"25100:11:11","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25076:6:11"},"nodeType":"YulFunctionCall","src":"25076:36:11"},"nodeType":"YulExpressionStatement","src":"25076:36:11"}]},"name":"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24989:6:11","type":""}],"src":"24891:228:11"},{"body":{"nodeType":"YulBlock","src":"25271:220:11","statements":[{"nodeType":"YulAssignment","src":"25281:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25347:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25352:2:11","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25288:58:11"},"nodeType":"YulFunctionCall","src":"25288:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25281:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25453:3:11"}],"functionName":{"name":"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","nodeType":"YulIdentifier","src":"25364:88:11"},"nodeType":"YulFunctionCall","src":"25364:93:11"},"nodeType":"YulExpressionStatement","src":"25364:93:11"},{"nodeType":"YulAssignment","src":"25466:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25477:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25482:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25473:3:11"},"nodeType":"YulFunctionCall","src":"25473:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25466:3:11"}]}]},"name":"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25259:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25267:3:11","type":""}],"src":"25125:366:11"},{"body":{"nodeType":"YulBlock","src":"25668:248:11","statements":[{"nodeType":"YulAssignment","src":"25678:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25701:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25686:3:11"},"nodeType":"YulFunctionCall","src":"25686:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25678:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25725:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25736:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25721:3:11"},"nodeType":"YulFunctionCall","src":"25721:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25744:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"25750:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25740:3:11"},"nodeType":"YulFunctionCall","src":"25740:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25714:6:11"},"nodeType":"YulFunctionCall","src":"25714:47:11"},"nodeType":"YulExpressionStatement","src":"25714:47:11"},{"nodeType":"YulAssignment","src":"25770:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25904:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25778:124:11"},"nodeType":"YulFunctionCall","src":"25778:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25770:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25648:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25663:4:11","type":""}],"src":"25497:419:11"},{"body":{"nodeType":"YulBlock","src":"26048:206:11","statements":[{"nodeType":"YulAssignment","src":"26058:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26070:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26081:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26066:3:11"},"nodeType":"YulFunctionCall","src":"26066:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26058:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26138:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26151:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26162:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26147:3:11"},"nodeType":"YulFunctionCall","src":"26147:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26094:43:11"},"nodeType":"YulFunctionCall","src":"26094:71:11"},"nodeType":"YulExpressionStatement","src":"26094:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26219:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26232:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26243:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26228:3:11"},"nodeType":"YulFunctionCall","src":"26228:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26175:43:11"},"nodeType":"YulFunctionCall","src":"26175:72:11"},"nodeType":"YulExpressionStatement","src":"26175:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26012:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26024:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26032:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26043:4:11","type":""}],"src":"25922:332:11"},{"body":{"nodeType":"YulBlock","src":"26325:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26342:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26365:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"26347:17:11"},"nodeType":"YulFunctionCall","src":"26347:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26335:6:11"},"nodeType":"YulFunctionCall","src":"26335:37:11"},"nodeType":"YulExpressionStatement","src":"26335:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26313:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26320:3:11","type":""}],"src":"26260:118:11"},{"body":{"nodeType":"YulBlock","src":"26442:40:11","statements":[{"nodeType":"YulAssignment","src":"26453:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26469:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26463:5:11"},"nodeType":"YulFunctionCall","src":"26463:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26453:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26425:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26435:6:11","type":""}],"src":"26384:98:11"},{"body":{"nodeType":"YulBlock","src":"26583:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26600:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"26605:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26593:6:11"},"nodeType":"YulFunctionCall","src":"26593:19:11"},"nodeType":"YulExpressionStatement","src":"26593:19:11"},{"nodeType":"YulAssignment","src":"26621:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26640:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"26645:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26636:3:11"},"nodeType":"YulFunctionCall","src":"26636:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26621:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26555:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"26560:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"26571:11:11","type":""}],"src":"26488:168:11"},{"body":{"nodeType":"YulBlock","src":"26752:283:11","statements":[{"nodeType":"YulVariableDeclaration","src":"26762:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26808:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26776:31:11"},"nodeType":"YulFunctionCall","src":"26776:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26766:6:11","type":""}]},{"nodeType":"YulAssignment","src":"26823:77:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26888:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"26893:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26830:57:11"},"nodeType":"YulFunctionCall","src":"26830:70:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26823:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26948:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"26955:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26944:3:11"},"nodeType":"YulFunctionCall","src":"26944:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"26962:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"26967:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26909:34:11"},"nodeType":"YulFunctionCall","src":"26909:65:11"},"nodeType":"YulExpressionStatement","src":"26909:65:11"},{"nodeType":"YulAssignment","src":"26983:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26994:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27021:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"26999:21:11"},"nodeType":"YulFunctionCall","src":"26999:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26990:3:11"},"nodeType":"YulFunctionCall","src":"26990:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26983:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26733:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26740:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26748:3:11","type":""}],"src":"26662:373:11"},{"body":{"nodeType":"YulBlock","src":"27369:725:11","statements":[{"nodeType":"YulAssignment","src":"27379:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27391:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27402:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27387:3:11"},"nodeType":"YulFunctionCall","src":"27387:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27379:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27460:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27473:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27484:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27469:3:11"},"nodeType":"YulFunctionCall","src":"27469:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27416:43:11"},"nodeType":"YulFunctionCall","src":"27416:71:11"},"nodeType":"YulExpressionStatement","src":"27416:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27541:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27554:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27565:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27550:3:11"},"nodeType":"YulFunctionCall","src":"27550:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27497:43:11"},"nodeType":"YulFunctionCall","src":"27497:72:11"},"nodeType":"YulExpressionStatement","src":"27497:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27590:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27601:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27586:3:11"},"nodeType":"YulFunctionCall","src":"27586:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27610:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"27616:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27606:3:11"},"nodeType":"YulFunctionCall","src":"27606:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27579:6:11"},"nodeType":"YulFunctionCall","src":"27579:48:11"},"nodeType":"YulExpressionStatement","src":"27579:48:11"},{"nodeType":"YulAssignment","src":"27636:116:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27738:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"27747:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27644:93:11"},"nodeType":"YulFunctionCall","src":"27644:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27636:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27773:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27784:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27769:3:11"},"nodeType":"YulFunctionCall","src":"27769:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27793:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"27799:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27789:3:11"},"nodeType":"YulFunctionCall","src":"27789:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27762:6:11"},"nodeType":"YulFunctionCall","src":"27762:48:11"},"nodeType":"YulExpressionStatement","src":"27762:48:11"},{"nodeType":"YulAssignment","src":"27819:116:11","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27921:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"27930:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27827:93:11"},"nodeType":"YulFunctionCall","src":"27827:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27819:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27956:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27967:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27952:3:11"},"nodeType":"YulFunctionCall","src":"27952:19:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27977:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"27983:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27973:3:11"},"nodeType":"YulFunctionCall","src":"27973:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27945:6:11"},"nodeType":"YulFunctionCall","src":"27945:49:11"},"nodeType":"YulExpressionStatement","src":"27945:49:11"},{"nodeType":"YulAssignment","src":"28003:84:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"28073:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"28082:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28011:61:11"},"nodeType":"YulFunctionCall","src":"28011:76:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28003:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27309:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27321:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27329:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27337:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27345:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27353:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27364:4:11","type":""}],"src":"27041:1053:11"},{"body":{"nodeType":"YulBlock","src":"28162:79:11","statements":[{"nodeType":"YulAssignment","src":"28172:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28187:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28181:5:11"},"nodeType":"YulFunctionCall","src":"28181:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28172:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28229:5:11"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"28203:25:11"},"nodeType":"YulFunctionCall","src":"28203:32:11"},"nodeType":"YulExpressionStatement","src":"28203:32:11"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28140:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"28148:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"28156:5:11","type":""}],"src":"28100:141:11"},{"body":{"nodeType":"YulBlock","src":"28323:273:11","statements":[{"body":{"nodeType":"YulBlock","src":"28369:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28371:77:11"},"nodeType":"YulFunctionCall","src":"28371:79:11"},"nodeType":"YulExpressionStatement","src":"28371:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28344:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"28353:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28340:3:11"},"nodeType":"YulFunctionCall","src":"28340:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"28365:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28336:3:11"},"nodeType":"YulFunctionCall","src":"28336:32:11"},"nodeType":"YulIf","src":"28333:119:11"},{"nodeType":"YulBlock","src":"28462:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"28477:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"28491:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28481:6:11","type":""}]},{"nodeType":"YulAssignment","src":"28506:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28551:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"28562:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28547:3:11"},"nodeType":"YulFunctionCall","src":"28547:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28571:7:11"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"28516:30:11"},"nodeType":"YulFunctionCall","src":"28516:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28506:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28293:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28304:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28316:6:11","type":""}],"src":"28247:349:11"},{"body":{"nodeType":"YulBlock","src":"28655:53:11","statements":[{"nodeType":"YulAssignment","src":"28665:36:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28690:3:11","type":"","value":"224"},{"name":"value","nodeType":"YulIdentifier","src":"28695:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28686:3:11"},"nodeType":"YulFunctionCall","src":"28686:15:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"28665:8:11"}]}]},"name":"shift_right_224_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28636:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"28646:8:11","type":""}],"src":"28602:106:11"},{"body":{"nodeType":"YulBlock","src":"28753:144:11","statements":[{"body":{"nodeType":"YulBlock","src":"28790:101:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28819:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28822:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28825:1:11","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"28804:14:11"},"nodeType":"YulFunctionCall","src":"28804:23:11"},"nodeType":"YulExpressionStatement","src":"28804:23:11"},{"nodeType":"YulAssignment","src":"28840:41:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28878:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28872:5:11"},"nodeType":"YulFunctionCall","src":"28872:8:11"}],"functionName":{"name":"shift_right_224_unsigned","nodeType":"YulIdentifier","src":"28847:24:11"},"nodeType":"YulFunctionCall","src":"28847:34:11"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"28840:3:11"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"28769:14:11"},"nodeType":"YulFunctionCall","src":"28769:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"28787:1:11","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28766:2:11"},"nodeType":"YulFunctionCall","src":"28766:23:11"},"nodeType":"YulIf","src":"28763:128:11"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"28749:3:11","type":""}],"src":"28714:183:11"},{"body":{"nodeType":"YulBlock","src":"28946:668:11","statements":[{"body":{"nodeType":"YulBlock","src":"28986:9:11","statements":[{"nodeType":"YulLeave","src":"28988:5:11"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"28962:14:11"},"nodeType":"YulFunctionCall","src":"28962:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"28980:4:11","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28959:2:11"},"nodeType":"YulFunctionCall","src":"28959:26:11"},"nodeType":"YulIf","src":"28956:39:11"},{"nodeType":"YulVariableDeclaration","src":"29005:32:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"29017:18:11"},"nodeType":"YulFunctionCall","src":"29017:20:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"29009:4:11","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29061:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"29067:1:11","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29074:14:11"},"nodeType":"YulFunctionCall","src":"29074:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"29092:1:11","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29070:3:11"},"nodeType":"YulFunctionCall","src":"29070:24:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"29046:14:11"},"nodeType":"YulFunctionCall","src":"29046:49:11"},"nodeType":"YulExpressionStatement","src":"29046:49:11"},{"nodeType":"YulVariableDeclaration","src":"29105:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29125:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29119:5:11"},"nodeType":"YulFunctionCall","src":"29119:11:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29109:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"29256:29:11","statements":[{"nodeType":"YulLeave","src":"29270:5:11"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29161:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29169:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29158:2:11"},"nodeType":"YulFunctionCall","src":"29158:30:11"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29209:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29217:4:11","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29205:3:11"},"nodeType":"YulFunctionCall","src":"29205:17:11"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29224:14:11"},"nodeType":"YulFunctionCall","src":"29224:16:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29202:2:11"},"nodeType":"YulFunctionCall","src":"29202:39:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29142:2:11"},"nodeType":"YulFunctionCall","src":"29142:113:11"},"nodeType":"YulIf","src":"29139:146:11"},{"nodeType":"YulVariableDeclaration","src":"29295:28:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29310:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"29316:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29306:3:11"},"nodeType":"YulFunctionCall","src":"29306:17:11"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"29299:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29332:24:11","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"29352:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29346:5:11"},"nodeType":"YulFunctionCall","src":"29346:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29336:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"29399:9:11","statements":[{"nodeType":"YulLeave","src":"29401:5:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29371:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29379:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29368:2:11"},"nodeType":"YulFunctionCall","src":"29368:30:11"},"nodeType":"YulIf","src":"29365:43:11"},{"nodeType":"YulVariableDeclaration","src":"29418:38:11","value":{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"29437:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"29442:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29433:3:11"},"nodeType":"YulFunctionCall","src":"29433:14:11"},{"name":"length","nodeType":"YulIdentifier","src":"29449:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29429:3:11"},"nodeType":"YulFunctionCall","src":"29429:27:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"29422:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"29513:9:11","statements":[{"nodeType":"YulLeave","src":"29515:5:11"}]},"condition":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"29471:3:11"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29480:4:11"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29490:14:11"},"nodeType":"YulFunctionCall","src":"29490:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"29508:1:11","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29486:3:11"},"nodeType":"YulFunctionCall","src":"29486:24:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29476:3:11"},"nodeType":"YulFunctionCall","src":"29476:35:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29468:2:11"},"nodeType":"YulFunctionCall","src":"29468:44:11"},"nodeType":"YulIf","src":"29465:57:11"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29552:4:11"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29562:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29574:4:11","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"29580:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29570:3:11"},"nodeType":"YulFunctionCall","src":"29570:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29558:3:11"},"nodeType":"YulFunctionCall","src":"29558:30:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"29532:19:11"},"nodeType":"YulFunctionCall","src":"29532:57:11"},"nodeType":"YulExpressionStatement","src":"29532:57:11"},{"nodeType":"YulAssignment","src":"29598:10:11","value":{"name":"msg","nodeType":"YulIdentifier","src":"29605:3:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29598:3:11"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28942:3:11","type":""}],"src":"28903:711:11"},{"body":{"nodeType":"YulBlock","src":"29726:133:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29748:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29756:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29744:3:11"},"nodeType":"YulFunctionCall","src":"29744:14:11"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535","kind":"string","nodeType":"YulLiteral","src":"29760:34:11","type":"","value":"ERC1155: transfer to non ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29737:6:11"},"nodeType":"YulFunctionCall","src":"29737:58:11"},"nodeType":"YulExpressionStatement","src":"29737:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29816:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29824:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29812:3:11"},"nodeType":"YulFunctionCall","src":"29812:15:11"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"29829:22:11","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29805:6:11"},"nodeType":"YulFunctionCall","src":"29805:47:11"},"nodeType":"YulExpressionStatement","src":"29805:47:11"}]},"name":"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29718:6:11","type":""}],"src":"29620:239:11"},{"body":{"nodeType":"YulBlock","src":"30011:220:11","statements":[{"nodeType":"YulAssignment","src":"30021:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30087:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"30092:2:11","type":"","value":"52"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30028:58:11"},"nodeType":"YulFunctionCall","src":"30028:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30021:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30193:3:11"}],"functionName":{"name":"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","nodeType":"YulIdentifier","src":"30104:88:11"},"nodeType":"YulFunctionCall","src":"30104:93:11"},"nodeType":"YulExpressionStatement","src":"30104:93:11"},{"nodeType":"YulAssignment","src":"30206:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30217:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"30222:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30213:3:11"},"nodeType":"YulFunctionCall","src":"30213:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30206:3:11"}]}]},"name":"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29999:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30007:3:11","type":""}],"src":"29865:366:11"},{"body":{"nodeType":"YulBlock","src":"30408:248:11","statements":[{"nodeType":"YulAssignment","src":"30418:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30430:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30441:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30426:3:11"},"nodeType":"YulFunctionCall","src":"30426:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30418:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30465:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30476:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30461:3:11"},"nodeType":"YulFunctionCall","src":"30461:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30484:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"30490:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30480:3:11"},"nodeType":"YulFunctionCall","src":"30480:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30454:6:11"},"nodeType":"YulFunctionCall","src":"30454:47:11"},"nodeType":"YulExpressionStatement","src":"30454:47:11"},{"nodeType":"YulAssignment","src":"30510:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30644:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30518:124:11"},"nodeType":"YulFunctionCall","src":"30518:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30510:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30388:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30403:4:11","type":""}],"src":"30237:419:11"},{"body":{"nodeType":"YulBlock","src":"30768:121:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30790:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"30798:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30786:3:11"},"nodeType":"YulFunctionCall","src":"30786:14:11"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"30802:34:11","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30779:6:11"},"nodeType":"YulFunctionCall","src":"30779:58:11"},"nodeType":"YulExpressionStatement","src":"30779:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30858:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"30866:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30854:3:11"},"nodeType":"YulFunctionCall","src":"30854:15:11"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"30871:10:11","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30847:6:11"},"nodeType":"YulFunctionCall","src":"30847:35:11"},"nodeType":"YulExpressionStatement","src":"30847:35:11"}]},"name":"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30760:6:11","type":""}],"src":"30662:227:11"},{"body":{"nodeType":"YulBlock","src":"31041:220:11","statements":[{"nodeType":"YulAssignment","src":"31051:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31117:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"31122:2:11","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31058:58:11"},"nodeType":"YulFunctionCall","src":"31058:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31051:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31223:3:11"}],"functionName":{"name":"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","nodeType":"YulIdentifier","src":"31134:88:11"},"nodeType":"YulFunctionCall","src":"31134:93:11"},"nodeType":"YulExpressionStatement","src":"31134:93:11"},{"nodeType":"YulAssignment","src":"31236:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31247:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"31252:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31243:3:11"},"nodeType":"YulFunctionCall","src":"31243:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31236:3:11"}]}]},"name":"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31029:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31037:3:11","type":""}],"src":"30895:366:11"},{"body":{"nodeType":"YulBlock","src":"31438:248:11","statements":[{"nodeType":"YulAssignment","src":"31448:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31460:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31471:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31456:3:11"},"nodeType":"YulFunctionCall","src":"31456:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31448:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31495:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31506:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31491:3:11"},"nodeType":"YulFunctionCall","src":"31491:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31514:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"31520:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31510:3:11"},"nodeType":"YulFunctionCall","src":"31510:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31484:6:11"},"nodeType":"YulFunctionCall","src":"31484:47:11"},"nodeType":"YulExpressionStatement","src":"31484:47:11"},{"nodeType":"YulAssignment","src":"31540:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31674:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31548:124:11"},"nodeType":"YulFunctionCall","src":"31548:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31540:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31418:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31433:4:11","type":""}],"src":"31267:419:11"},{"body":{"nodeType":"YulBlock","src":"31920:523:11","statements":[{"nodeType":"YulAssignment","src":"31930:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31942:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31953:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31938:3:11"},"nodeType":"YulFunctionCall","src":"31938:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31930:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32011:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32024:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32035:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32020:3:11"},"nodeType":"YulFunctionCall","src":"32020:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31967:43:11"},"nodeType":"YulFunctionCall","src":"31967:71:11"},"nodeType":"YulExpressionStatement","src":"31967:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32092:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32105:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32116:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32101:3:11"},"nodeType":"YulFunctionCall","src":"32101:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32048:43:11"},"nodeType":"YulFunctionCall","src":"32048:72:11"},"nodeType":"YulExpressionStatement","src":"32048:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32174:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32187:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32198:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32183:3:11"},"nodeType":"YulFunctionCall","src":"32183:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32130:43:11"},"nodeType":"YulFunctionCall","src":"32130:72:11"},"nodeType":"YulExpressionStatement","src":"32130:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32256:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32269:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32280:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32265:3:11"},"nodeType":"YulFunctionCall","src":"32265:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32212:43:11"},"nodeType":"YulFunctionCall","src":"32212:72:11"},"nodeType":"YulExpressionStatement","src":"32212:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32305:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32316:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32301:3:11"},"nodeType":"YulFunctionCall","src":"32301:19:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32326:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"32332:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32322:3:11"},"nodeType":"YulFunctionCall","src":"32322:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32294:6:11"},"nodeType":"YulFunctionCall","src":"32294:49:11"},"nodeType":"YulExpressionStatement","src":"32294:49:11"},{"nodeType":"YulAssignment","src":"32352:84:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"32422:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"32431:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32360:61:11"},"nodeType":"YulFunctionCall","src":"32360:76:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32352:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31860:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"31872:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31880:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31888:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31896:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31904:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31915:4:11","type":""}],"src":"31692:751:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113b0565b6101d0565b6040516100b391906113ff565b60405180910390f35b6100d660048036038101906100d19190611472565b610298565b6040516100e391906114ba565b60405180910390f35b610106600480360381019061010191906114d5565b61037a565b6040516101139190611592565b60405180910390f35b610136600480360381019061013191906117b1565b61040e565b005b610152600480360381019061014d9190611943565b6104af565b60405161015f9190611a79565b60405180910390f35b610182600480360381019061017d9190611ac7565b6105c8565b005b61019e60048036038101906101999190611b07565b6105de565b6040516101ab91906114ba565b60405180910390f35b6101ce60048036038101906101c99190611b47565b610672565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023790611c50565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610373575061037282610713565b5b9050919050565b60606002805461038990611c9f565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590611c9f565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b50505050509050919050565b61041661077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045c575061045b8561045661077d565b6105de565b5b61049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290611d42565b60405180910390fd5b6104a88585858585610785565b5050505050565b606081518351146104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec90611dd4565b60405180910390fd5b6000835167ffffffffffffffff811115610512576105116115b9565b5b6040519080825280602002602001820160405280156105405781602001602082028036833780820191505090505b50905060005b84518110156105bd5761058d85828151811061056557610564611df4565b5b60200260200101518583815181106105805761057f611df4565b5b60200260200101516101d0565b8282815181106105a05761059f611df4565b5b602002602001018181525050806105b690611e52565b9050610546565b508091505092915050565b6105da6105d361077d565b8383610aa6565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067a61077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c057506106bf856106ba61077d565b6105de565b5b6106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611d42565b60405180910390fd5b61070c8585858585610c12565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090611f0c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90611f9e565b60405180910390fd5b600061084261077d565b9050610852818787878787610ead565b60005b8451811015610a0357600085828151811061087357610872611df4565b5b60200260200101519050600085838151811061089257610891611df4565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90612030565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e89190612050565b92505081905550505050806109fc90611e52565b9050610855565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7a929190612084565b60405180910390a4610a90818787878787610eb5565b610a9e818787878787610ebd565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b9061212d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0591906114ba565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7890611f9e565b60405180910390fd5b6000610c8b61077d565b90506000610c9885611094565b90506000610ca585611094565b9050610cb5838989858589610ead565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4390612030565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e019190612050565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e7e92919061214d565b60405180910390a4610e94848a8a86868a610eb5565b610ea2848a8a8a8a8a61110e565b505050505050505050565b505050505050565b505050505050565b610edc8473ffffffffffffffffffffffffffffffffffffffff166112e5565b1561108c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f229594939291906121da565b6020604051808303816000875af1925050508015610f5e57506040513d601f19601f82011682018060405250810190610f5b9190612257565b60015b61100357610f6a612291565b806308c379a003610fc65750610f7e6122b3565b80610f895750610fc8565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbd9190611592565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa906123b5565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190612447565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110b3576110b26115b9565b5b6040519080825280602002602001820160405280156110e15781602001602082028036833780820191505090505b50905082816000815181106110f9576110f8611df4565b5b60200260200101818152505080915050919050565b61112d8473ffffffffffffffffffffffffffffffffffffffff166112e5565b156112dd578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611173959493929190612467565b6020604051808303816000875af19250505080156111af57506040513d601f19601f820116820180604052508101906111ac9190612257565b60015b611254576111bb612291565b806308c379a00361121757506111cf6122b3565b806111da5750611219565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e9190611592565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b906123b5565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290612447565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113478261131c565b9050919050565b6113578161133c565b811461136257600080fd5b50565b6000813590506113748161134e565b92915050565b6000819050919050565b61138d8161137a565b811461139857600080fd5b50565b6000813590506113aa81611384565b92915050565b600080604083850312156113c7576113c6611312565b5b60006113d585828601611365565b92505060206113e68582860161139b565b9150509250929050565b6113f98161137a565b82525050565b600060208201905061141460008301846113f0565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61144f8161141a565b811461145a57600080fd5b50565b60008135905061146c81611446565b92915050565b60006020828403121561148857611487611312565b5b60006114968482850161145d565b91505092915050565b60008115159050919050565b6114b48161149f565b82525050565b60006020820190506114cf60008301846114ab565b92915050565b6000602082840312156114eb576114ea611312565b5b60006114f98482850161139b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561153c578082015181840152602081019050611521565b60008484015250505050565b6000601f19601f8301169050919050565b600061156482611502565b61156e818561150d565b935061157e81856020860161151e565b61158781611548565b840191505092915050565b600060208201905081810360008301526115ac8184611559565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115f182611548565b810181811067ffffffffffffffff821117156116105761160f6115b9565b5b80604052505050565b6000611623611308565b905061162f82826115e8565b919050565b600067ffffffffffffffff82111561164f5761164e6115b9565b5b602082029050602081019050919050565b600080fd5b600061167861167384611634565b611619565b9050808382526020820190506020840283018581111561169b5761169a611660565b5b835b818110156116c457806116b0888261139b565b84526020840193505060208101905061169d565b5050509392505050565b600082601f8301126116e3576116e26115b4565b5b81356116f3848260208601611665565b91505092915050565b600080fd5b600067ffffffffffffffff82111561171c5761171b6115b9565b5b61172582611548565b9050602081019050919050565b82818337600083830152505050565b600061175461174f84611701565b611619565b9050828152602081018484840111156117705761176f6116fc565b5b61177b848285611732565b509392505050565b600082601f830112611798576117976115b4565b5b81356117a8848260208601611741565b91505092915050565b600080600080600060a086880312156117cd576117cc611312565b5b60006117db88828901611365565b95505060206117ec88828901611365565b945050604086013567ffffffffffffffff81111561180d5761180c611317565b5b611819888289016116ce565b935050606086013567ffffffffffffffff81111561183a57611839611317565b5b611846888289016116ce565b925050608086013567ffffffffffffffff81111561186757611866611317565b5b61187388828901611783565b9150509295509295909350565b600067ffffffffffffffff82111561189b5761189a6115b9565b5b602082029050602081019050919050565b60006118bf6118ba84611880565b611619565b905080838252602082019050602084028301858111156118e2576118e1611660565b5b835b8181101561190b57806118f78882611365565b8452602084019350506020810190506118e4565b5050509392505050565b600082601f83011261192a576119296115b4565b5b813561193a8482602086016118ac565b91505092915050565b6000806040838503121561195a57611959611312565b5b600083013567ffffffffffffffff81111561197857611977611317565b5b61198485828601611915565b925050602083013567ffffffffffffffff8111156119a5576119a4611317565b5b6119b1858286016116ce565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119f08161137a565b82525050565b6000611a0283836119e7565b60208301905092915050565b6000602082019050919050565b6000611a26826119bb565b611a3081856119c6565b9350611a3b836119d7565b8060005b83811015611a6c578151611a5388826119f6565b9750611a5e83611a0e565b925050600181019050611a3f565b5085935050505092915050565b60006020820190508181036000830152611a938184611a1b565b905092915050565b611aa48161149f565b8114611aaf57600080fd5b50565b600081359050611ac181611a9b565b92915050565b60008060408385031215611ade57611add611312565b5b6000611aec85828601611365565b9250506020611afd85828601611ab2565b9150509250929050565b60008060408385031215611b1e57611b1d611312565b5b6000611b2c85828601611365565b9250506020611b3d85828601611365565b9150509250929050565b600080600080600060a08688031215611b6357611b62611312565b5b6000611b7188828901611365565b9550506020611b8288828901611365565b9450506040611b938882890161139b565b9350506060611ba48882890161139b565b925050608086013567ffffffffffffffff811115611bc557611bc4611317565b5b611bd188828901611783565b9150509295509295909350565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000611c3a602a8361150d565b9150611c4582611bde565b604082019050919050565b60006020820190508181036000830152611c6981611c2d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cb757607f821691505b602082108103611cca57611cc9611c70565b5b50919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b6000611d2c602f8361150d565b9150611d3782611cd0565b604082019050919050565b60006020820190508181036000830152611d5b81611d1f565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611dbe60298361150d565b9150611dc982611d62565b604082019050919050565b60006020820190508181036000830152611ded81611db1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5d8261137a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8f57611e8e611e23565b5b600182019050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611ef660288361150d565b9150611f0182611e9a565b604082019050919050565b60006020820190508181036000830152611f2581611ee9565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611f8860258361150d565b9150611f9382611f2c565b604082019050919050565b60006020820190508181036000830152611fb781611f7b565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b600061201a602a8361150d565b915061202582611fbe565b604082019050919050565b600060208201905081810360008301526120498161200d565b9050919050565b600061205b8261137a565b91506120668361137a565b925082820190508082111561207e5761207d611e23565b5b92915050565b6000604082019050818103600083015261209e8185611a1b565b905081810360208301526120b28184611a1b565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b600061211760298361150d565b9150612122826120bb565b604082019050919050565b600060208201905081810360008301526121468161210a565b9050919050565b600060408201905061216260008301856113f0565b61216f60208301846113f0565b9392505050565b61217f8161133c565b82525050565b600081519050919050565b600082825260208201905092915050565b60006121ac82612185565b6121b68185612190565b93506121c681856020860161151e565b6121cf81611548565b840191505092915050565b600060a0820190506121ef6000830188612176565b6121fc6020830187612176565b818103604083015261220e8186611a1b565b905081810360608301526122228185611a1b565b9050818103608083015261223681846121a1565b90509695505050505050565b60008151905061225181611446565b92915050565b60006020828403121561226d5761226c611312565b5b600061227b84828501612242565b91505092915050565b60008160e01c9050919050565b600060033d11156122b05760046000803e6122ad600051612284565b90505b90565b600060443d10612340576122c5611308565b60043d036004823e80513d602482011167ffffffffffffffff821117156122ed575050612340565b808201805167ffffffffffffffff81111561230b5750505050612340565b80602083010160043d038501811115612328575050505050612340565b612337826020018501866115e8565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061239f60348361150d565b91506123aa82612343565b604082019050919050565b600060208201905081810360008301526123ce81612392565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b600061243160288361150d565b915061243c826123d5565b604082019050919050565b6000602082019050818103600083015261246081612424565b9050919050565b600060a08201905061247c6000830188612176565b6124896020830187612176565b61249660408301866113f0565b6124a360608301856113f0565b81810360808301526124b581846121a1565b9050969550505050505056fea2646970667358221220e6a6d1dc5362ca3b962188f0666125db35283de3aeb7734df4d25d1aff1622a164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xA9E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC98 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA5 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE94 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xEA2 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x108C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1003 JUMPI PUSH2 0xF6A PUSH2 0x2291 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFC6 JUMPI POP PUSH2 0xF7E PUSH2 0x22B3 JUMP JUMPDEST DUP1 PUSH2 0xF89 JUMPI POP PUSH2 0xFC8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AC SWAP2 SWAP1 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI PUSH2 0x11BB PUSH2 0x2291 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1217 JUMPI POP PUSH2 0x11CF PUSH2 0x22B3 JUMP JUMPDEST DUP1 PUSH2 0x11DA JUMPI POP PUSH2 0x1219 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP3 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP2 EQ PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1374 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x137A JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E6 DUP6 DUP3 DUP7 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x141A JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1564 DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x156E DUP2 DUP6 PUSH2 0x150D JUMP JUMPDEST SWAP4 POP PUSH2 0x157E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AC DUP2 DUP5 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F1 DUP3 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1623 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP PUSH2 0x162F DUP3 DUP3 PUSH2 0x15E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH2 0x1673 DUP5 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C4 JUMPI DUP1 PUSH2 0x16B0 DUP9 DUP3 PUSH2 0x139B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x169D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E3 JUMPI PUSH2 0x16E2 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1665 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH2 0x1725 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1754 PUSH2 0x174F DUP5 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x16FC JUMP JUMPDEST JUMPDEST PUSH2 0x177B DUP5 DUP3 DUP6 PUSH2 0x1732 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17EC DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1819 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1846 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1866 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1873 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BF PUSH2 0x18BA DUP5 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP1 PUSH2 0x18F7 DUP9 DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192A JUMPI PUSH2 0x1929 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x193A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1984 DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F0 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP4 DUP4 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A26 DUP3 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1A30 DUP2 DUP6 PUSH2 0x19C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A3B DUP4 PUSH2 0x19D7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A6C JUMPI DUP2 MLOAD PUSH2 0x1A53 DUP9 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A5E DUP4 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A3F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A93 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC1 DUP2 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ADD PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFD DUP6 DUP3 DUP7 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2C DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3D DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B82 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B93 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BA4 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD1 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x1C70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2C PUSH1 0x2F DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D37 DUP3 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D5B DUP2 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP3 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E5D DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E8F JUMPI PUSH2 0x1E8E PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F01 DUP3 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F25 DUP2 PUSH2 0x1EE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F88 PUSH1 0x25 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F93 DUP3 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2049 DUP2 PUSH2 0x200D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP4 PUSH2 0x137A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x207E JUMPI PUSH2 0x207D PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x209E DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x20B2 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2117 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2122 DUP3 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2146 DUP2 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x216F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x217F DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AC DUP3 PUSH2 0x2185 JUMP JUMPDEST PUSH2 0x21B6 DUP2 DUP6 PUSH2 0x2190 JUMP JUMPDEST SWAP4 POP PUSH2 0x21C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x21CF DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x21EF PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x21FC PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2176 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x220E DUP2 DUP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2222 DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2236 DUP2 DUP5 PUSH2 0x21A1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2251 DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x227B DUP5 DUP3 DUP6 ADD PUSH2 0x2242 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x22B0 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22AD PUSH1 0x0 MLOAD PUSH2 0x2284 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2340 JUMPI PUSH2 0x22C5 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22ED JUMPI POP POP PUSH2 0x2340 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230B JUMPI POP POP POP POP PUSH2 0x2340 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2328 JUMPI POP POP POP POP POP PUSH2 0x2340 JUMP JUMPDEST PUSH2 0x2337 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15E8 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239F PUSH1 0x34 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x23AA DUP3 PUSH2 0x2343 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CE DUP2 PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2431 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x243C DUP3 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2460 DUP2 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x247C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x2489 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0x2496 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x24A3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24B5 DUP2 DUP5 PUSH2 0x21A1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xA6 0xD1 0xDC MSTORE8 PUSH3 0xCA3B96 0x21 DUP9 CREATE PUSH7 0x6125DB35283DE3 0xAE 0xB7 PUSH20 0x4DF4D25D1AFF1622A164736F6C63430008110033 ","sourceMap":"570:16691:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4065:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2569:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3145:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3365:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3598:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:227;2271:7;2317:1;2298:21;;:7;:21;;;2290:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2383:9;:13;2393:2;2383:13;;;;;;;;;;;:22;2397:7;2383:22;;;;;;;;;;;;;;;;2376:29;;2185:227;;;;:::o;1236:305::-;1338:4;1388:26;1373:41;;;:11;:41;;;;:109;;;;1445:37;1430:52;;;:11;:52;;;;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1373:161;1354:180;;1236:305;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4065:427::-;4298:12;:10;:12::i;:::-;4290:20;;:4;:20;;;:60;;;;4314:36;4331:4;4337:12;:10;:12::i;:::-;4314:16;:36::i;:::-;4290:60;4269:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;4433:52;4456:4;4462:2;4466:3;4471:7;4480:4;4433:22;:52::i;:::-;4065:427;;;;;:::o;2569:508::-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2846:30;2893:8;:15;2879:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2961:3;;;;:::i;:::-;;;2920:120;;;;3057:13;3050:20;;;2569:508;;;;:::o;3145:153::-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3145:153;;:::o;3365:166::-;3464:4;3487:18;:27;3506:7;3487:27;;;;;;;;;;;;;;;:37;3515:8;3487:37;;;;;;;;;;;;;;;;;;;;;;;;;3480:44;;3365:166;;;;:::o;3598:395::-;3806:12;:10;:12::i;:::-;3798:20;;:4;:20;;;:60;;;;3822:36;3839:4;3845:12;:10;:12::i;:::-;3822:16;:36::i;:::-;3798:60;3777:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;3941:45;3959:4;3965:2;3969;3973:6;3981:4;3941:17;:45::i;:::-;3598:395;;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;6235:1115:1:-;6455:7;:14;6441:3;:10;:28;6433:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6546:1;6532:16;;:2;:16;;;6524:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6601:16;6620:12;:10;:12::i;:::-;6601:31;;6643:60;6664:8;6674:4;6680:2;6684:3;6689:7;6698:4;6643:20;:60::i;:::-;6719:9;6714:411;6738:3;:10;6734:1;:14;6714:411;;;6769:10;6782:3;6786:1;6782:6;;;;;;;;:::i;:::-;;;;;;;;6769:19;;6802:14;6819:7;6827:1;6819:10;;;;;;;;:::i;:::-;;;;;;;;6802:27;;6844:19;6866:9;:13;6876:2;6866:13;;;;;;;;;;;:19;6880:4;6866:19;;;;;;;;;;;;;;;;6844:41;;6922:6;6907:11;:21;;6899:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7053:6;7039:11;:20;7017:9;:13;7027:2;7017:13;;;;;;;;;;;:19;7031:4;7017:19;;;;;;;;;;;;;;;:42;;;;7108:6;7087:9;:13;7097:2;7087:13;;;;;;;;;;;:17;7101:2;7087:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6755:370;;;6750:3;;;;:::i;:::-;;;6714:411;;;;7170:2;7140:47;;7164:4;7140:47;;7154:8;7140:47;;;7174:3;7179:7;7140:47;;;;;;;:::i;:::-;;;;;;;;7198:59;7218:8;7228:4;7234:2;7238:3;7243:7;7252:4;7198:19;:59::i;:::-;7268:75;7304:8;7314:4;7320:2;7324:3;7329:7;7338:4;7268:35;:75::i;:::-;6423:927;6235:1115;;;;;:::o;12912:323::-;13062:8;13053:17;;:5;:17;;;13045:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13164:8;13126:18;:25;13145:5;13126:25;;;;;;;;;;;;;;;:35;13152:8;13126:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13209:8;13187:41;;13202:5;13187:41;;;13219:8;13187:41;;;;;;:::i;:::-;;;;;;;;12912:323;;;:::o;4942:947::-;5137:1;5123:16;;:2;:16;;;5115:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5192:16;5211:12;:10;:12::i;:::-;5192:31;;5233:20;5256:21;5274:2;5256:17;:21::i;:::-;5233:44;;5287:24;5314:25;5332:6;5314:17;:25::i;:::-;5287:52;;5350:60;5371:8;5381:4;5387:2;5391:3;5396:7;5405:4;5350:20;:60::i;:::-;5421:19;5443:9;:13;5453:2;5443:13;;;;;;;;;;;:19;5457:4;5443:19;;;;;;;;;;;;;;;;5421:41;;5495:6;5480:11;:21;;5472:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5618:6;5604:11;:20;5582:9;:13;5592:2;5582:13;;;;;;;;;;;:19;5596:4;5582:19;;;;;;;;;;;;;;;:42;;;;5665:6;5644:9;:13;5654:2;5644:13;;;;;;;;;;;:17;5658:2;5644:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5718:2;5687:46;;5712:4;5687:46;;5702:8;5687:46;;;5722:2;5726:6;5687:46;;;;;;;:::i;:::-;;;;;;;;5744:59;5764:8;5774:4;5780:2;5784:3;5789:7;5798:4;5744:19;:59::i;:::-;5814:68;5845:8;5855:4;5861:2;5865;5869:6;5877:4;5814:30;:68::i;:::-;5105:784;;;;4942:947;;;;;:::o;14171:214::-;;;;;;;:::o;15318:213::-;;;;;;;:::o;16268:792::-;16500:15;:2;:13;;;:15::i;:::-;16496:558;;;16552:2;16535:43;;;16579:8;16589:4;16595:3;16600:7;16609:4;16535:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16531:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16920:6;16913:14;;;;;;;;;;;:::i;:::-;;;;;;;;16531:513;;;16967:62;;;;;;;;;;:::i;:::-;;;;;;;;16531:513;16705:48;;;16693:60;;;:8;:60;;;;16689:157;;16777:50;;;;;;;;;;:::i;:::-;;;;;;;;16689:157;16615:245;16496:558;16268:792;;;;;;:::o;17066:193::-;17132:16;17160:22;17199:1;17185:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:41;;17222:7;17211:5;17217:1;17211:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17247:5;17240:12;;;17066:193;;;:::o;15537:725::-;15744:15;:2;:13;;;:15::i;:::-;15740:516;;;15796:2;15779:38;;;15818:8;15828:4;15834:2;15838:6;15846:4;15779:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15775:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16122:6;16115:14;;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;;;16169:62;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;15912:43;;;15900:55;;;:8;:55;;;;15896:152;;15979:50;;;;;;;;;;:::i;:::-;;;;;;;;15896:152;15852:210;15740:516;15537:725;;;;;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:311::-;10153:4;10243:18;10235:6;10232:30;10229:56;;;10265:18;;:::i;:::-;10229:56;10315:4;10307:6;10303:17;10295:25;;10375:4;10369;10365:15;10357:23;;10076:311;;;:::o;10410:710::-;10506:5;10531:81;10547:64;10604:6;10547:64;:::i;:::-;10531:81;:::i;:::-;10522:90;;10632:5;10661:6;10654:5;10647:21;10695:4;10688:5;10684:16;10677:23;;10748:4;10740:6;10736:17;10728:6;10724:30;10777:3;10769:6;10766:15;10763:122;;;10796:79;;:::i;:::-;10763:122;10911:6;10894:220;10928:6;10923:3;10920:15;10894:220;;;11003:3;11032:37;11065:3;11053:10;11032:37;:::i;:::-;11027:3;11020:50;11099:4;11094:3;11090:14;11083:21;;10970:144;10954:4;10949:3;10945:14;10938:21;;10894:220;;;10898:21;10512:608;;10410:710;;;;;:::o;11143:370::-;11214:5;11263:3;11256:4;11248:6;11244:17;11240:27;11230:122;;11271:79;;:::i;:::-;11230:122;11388:6;11375:20;11413:94;11503:3;11495:6;11488:4;11480:6;11476:17;11413:94;:::i;:::-;11404:103;;11220:293;11143:370;;;;:::o;11519:894::-;11637:6;11645;11694:2;11682:9;11673:7;11669:23;11665:32;11662:119;;;11700:79;;:::i;:::-;11662:119;11848:1;11837:9;11833:17;11820:31;11878:18;11870:6;11867:30;11864:117;;;11900:79;;:::i;:::-;11864:117;12005:78;12075:7;12066:6;12055:9;12051:22;12005:78;:::i;:::-;11995:88;;11791:302;12160:2;12149:9;12145:18;12132:32;12191:18;12183:6;12180:30;12177:117;;;12213:79;;:::i;:::-;12177:117;12318:78;12388:7;12379:6;12368:9;12364:22;12318:78;:::i;:::-;12308:88;;12103:303;11519:894;;;;;:::o;12419:114::-;12486:6;12520:5;12514:12;12504:22;;12419:114;;;:::o;12539:184::-;12638:11;12672:6;12667:3;12660:19;12712:4;12707:3;12703:14;12688:29;;12539:184;;;;:::o;12729:132::-;12796:4;12819:3;12811:11;;12849:4;12844:3;12840:14;12832:22;;12729:132;;;:::o;12867:108::-;12944:24;12962:5;12944:24;:::i;:::-;12939:3;12932:37;12867:108;;:::o;12981:179::-;13050:10;13071:46;13113:3;13105:6;13071:46;:::i;:::-;13149:4;13144:3;13140:14;13126:28;;12981:179;;;;:::o;13166:113::-;13236:4;13268;13263:3;13259:14;13251:22;;13166:113;;;:::o;13315:732::-;13434:3;13463:54;13511:5;13463:54;:::i;:::-;13533:86;13612:6;13607:3;13533:86;:::i;:::-;13526:93;;13643:56;13693:5;13643:56;:::i;:::-;13722:7;13753:1;13738:284;13763:6;13760:1;13757:13;13738:284;;;13839:6;13833:13;13866:63;13925:3;13910:13;13866:63;:::i;:::-;13859:70;;13952:60;14005:6;13952:60;:::i;:::-;13942:70;;13798:224;13785:1;13782;13778:9;13773:14;;13738:284;;;13742:14;14038:3;14031:10;;13439:608;;;13315:732;;;;:::o;14053:373::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:108;14414:4;14405:6;14311:108;:::i;:::-;14303:116;;14053:373;;;;:::o;14432:116::-;14502:21;14517:5;14502:21;:::i;:::-;14495:5;14492:32;14482:60;;14538:1;14535;14528:12;14482:60;14432:116;:::o;14554:133::-;14597:5;14635:6;14622:20;14613:29;;14651:30;14675:5;14651:30;:::i;:::-;14554:133;;;;:::o;14693:468::-;14758:6;14766;14815:2;14803:9;14794:7;14790:23;14786:32;14783:119;;;14821:79;;:::i;:::-;14783:119;14941:1;14966:53;15011:7;15002:6;14991:9;14987:22;14966:53;:::i;:::-;14956:63;;14912:117;15068:2;15094:50;15136:7;15127:6;15116:9;15112:22;15094:50;:::i;:::-;15084:60;;15039:115;14693:468;;;;;:::o;15167:474::-;15235:6;15243;15292:2;15280:9;15271:7;15267:23;15263:32;15260:119;;;15298:79;;:::i;:::-;15260:119;15418:1;15443:53;15488:7;15479:6;15468:9;15464:22;15443:53;:::i;:::-;15433:63;;15389:117;15545:2;15571:53;15616:7;15607:6;15596:9;15592:22;15571:53;:::i;:::-;15561:63;;15516:118;15167:474;;;;;:::o;15647:1089::-;15751:6;15759;15767;15775;15783;15832:3;15820:9;15811:7;15807:23;15803:33;15800:120;;;15839:79;;:::i;:::-;15800:120;15959:1;15984:53;16029:7;16020:6;16009:9;16005:22;15984:53;:::i;:::-;15974:63;;15930:117;16086:2;16112:53;16157:7;16148:6;16137:9;16133:22;16112:53;:::i;:::-;16102:63;;16057:118;16214:2;16240:53;16285:7;16276:6;16265:9;16261:22;16240:53;:::i;:::-;16230:63;;16185:118;16342:2;16368:53;16413:7;16404:6;16393:9;16389:22;16368:53;:::i;:::-;16358:63;;16313:118;16498:3;16487:9;16483:19;16470:33;16530:18;16522:6;16519:30;16516:117;;;16552:79;;:::i;:::-;16516:117;16657:62;16711:7;16702:6;16691:9;16687:22;16657:62;:::i;:::-;16647:72;;16441:288;15647:1089;;;;;;;;:::o;16742:229::-;16882:34;16878:1;16870:6;16866:14;16859:58;16951:12;16946:2;16938:6;16934:15;16927:37;16742:229;:::o;16977:366::-;17119:3;17140:67;17204:2;17199:3;17140:67;:::i;:::-;17133:74;;17216:93;17305:3;17216:93;:::i;:::-;17334:2;17329:3;17325:12;17318:19;;16977:366;;;:::o;17349:419::-;17515:4;17553:2;17542:9;17538:18;17530:26;;17602:9;17596:4;17592:20;17588:1;17577:9;17573:17;17566:47;17630:131;17756:4;17630:131;:::i;:::-;17622:139;;17349:419;;;:::o;17774:180::-;17822:77;17819:1;17812:88;17919:4;17916:1;17909:15;17943:4;17940:1;17933:15;17960:320;18004:6;18041:1;18035:4;18031:12;18021:22;;18088:1;18082:4;18078:12;18109:18;18099:81;;18165:4;18157:6;18153:17;18143:27;;18099:81;18227:2;18219:6;18216:14;18196:18;18193:38;18190:84;;18246:18;;:::i;:::-;18190:84;18011:269;17960:320;;;:::o;18286:234::-;18426:34;18422:1;18414:6;18410:14;18403:58;18495:17;18490:2;18482:6;18478:15;18471:42;18286:234;:::o;18526:366::-;18668:3;18689:67;18753:2;18748:3;18689:67;:::i;:::-;18682:74;;18765:93;18854:3;18765:93;:::i;:::-;18883:2;18878:3;18874:12;18867:19;;18526:366;;;:::o;18898:419::-;19064:4;19102:2;19091:9;19087:18;19079:26;;19151:9;19145:4;19141:20;19137:1;19126:9;19122:17;19115:47;19179:131;19305:4;19179:131;:::i;:::-;19171:139;;18898:419;;;:::o;19323:228::-;19463:34;19459:1;19451:6;19447:14;19440:58;19532:11;19527:2;19519:6;19515:15;19508:36;19323:228;:::o;19557:366::-;19699:3;19720:67;19784:2;19779:3;19720:67;:::i;:::-;19713:74;;19796:93;19885:3;19796:93;:::i;:::-;19914:2;19909:3;19905:12;19898:19;;19557:366;;;:::o;19929:419::-;20095:4;20133:2;20122:9;20118:18;20110:26;;20182:9;20176:4;20172:20;20168:1;20157:9;20153:17;20146:47;20210:131;20336:4;20210:131;:::i;:::-;20202:139;;19929:419;;;:::o;20354:180::-;20402:77;20399:1;20392:88;20499:4;20496:1;20489:15;20523:4;20520:1;20513:15;20540:180;20588:77;20585:1;20578:88;20685:4;20682:1;20675:15;20709:4;20706:1;20699:15;20726:233;20765:3;20788:24;20806:5;20788:24;:::i;:::-;20779:33;;20834:66;20827:5;20824:77;20821:103;;20904:18;;:::i;:::-;20821:103;20951:1;20944:5;20940:13;20933:20;;20726:233;;;:::o;20965:227::-;21105:34;21101:1;21093:6;21089:14;21082:58;21174:10;21169:2;21161:6;21157:15;21150:35;20965:227;:::o;21198:366::-;21340:3;21361:67;21425:2;21420:3;21361:67;:::i;:::-;21354:74;;21437:93;21526:3;21437:93;:::i;:::-;21555:2;21550:3;21546:12;21539:19;;21198:366;;;:::o;21570:419::-;21736:4;21774:2;21763:9;21759:18;21751:26;;21823:9;21817:4;21813:20;21809:1;21798:9;21794:17;21787:47;21851:131;21977:4;21851:131;:::i;:::-;21843:139;;21570:419;;;:::o;21995:224::-;22135:34;22131:1;22123:6;22119:14;22112:58;22204:7;22199:2;22191:6;22187:15;22180:32;21995:224;:::o;22225:366::-;22367:3;22388:67;22452:2;22447:3;22388:67;:::i;:::-;22381:74;;22464:93;22553:3;22464:93;:::i;:::-;22582:2;22577:3;22573:12;22566:19;;22225:366;;;:::o;22597:419::-;22763:4;22801:2;22790:9;22786:18;22778:26;;22850:9;22844:4;22840:20;22836:1;22825:9;22821:17;22814:47;22878:131;23004:4;22878:131;:::i;:::-;22870:139;;22597:419;;;:::o;23022:229::-;23162:34;23158:1;23150:6;23146:14;23139:58;23231:12;23226:2;23218:6;23214:15;23207:37;23022:229;:::o;23257:366::-;23399:3;23420:67;23484:2;23479:3;23420:67;:::i;:::-;23413:74;;23496:93;23585:3;23496:93;:::i;:::-;23614:2;23609:3;23605:12;23598:19;;23257:366;;;:::o;23629:419::-;23795:4;23833:2;23822:9;23818:18;23810:26;;23882:9;23876:4;23872:20;23868:1;23857:9;23853:17;23846:47;23910:131;24036:4;23910:131;:::i;:::-;23902:139;;23629:419;;;:::o;24054:191::-;24094:3;24113:20;24131:1;24113:20;:::i;:::-;24108:25;;24147:20;24165:1;24147:20;:::i;:::-;24142:25;;24190:1;24187;24183:9;24176:16;;24211:3;24208:1;24205:10;24202:36;;;24218:18;;:::i;:::-;24202:36;24054:191;;;;:::o;24251:634::-;24472:4;24510:2;24499:9;24495:18;24487:26;;24559:9;24553:4;24549:20;24545:1;24534:9;24530:17;24523:47;24587:108;24690:4;24681:6;24587:108;:::i;:::-;24579:116;;24742:9;24736:4;24732:20;24727:2;24716:9;24712:18;24705:48;24770:108;24873:4;24864:6;24770:108;:::i;:::-;24762:116;;24251:634;;;;;:::o;24891:228::-;25031:34;25027:1;25019:6;25015:14;25008:58;25100:11;25095:2;25087:6;25083:15;25076:36;24891:228;:::o;25125:366::-;25267:3;25288:67;25352:2;25347:3;25288:67;:::i;:::-;25281:74;;25364:93;25453:3;25364:93;:::i;:::-;25482:2;25477:3;25473:12;25466:19;;25125:366;;;:::o;25497:419::-;25663:4;25701:2;25690:9;25686:18;25678:26;;25750:9;25744:4;25740:20;25736:1;25725:9;25721:17;25714:47;25778:131;25904:4;25778:131;:::i;:::-;25770:139;;25497:419;;;:::o;25922:332::-;26043:4;26081:2;26070:9;26066:18;26058:26;;26094:71;26162:1;26151:9;26147:17;26138:6;26094:71;:::i;:::-;26175:72;26243:2;26232:9;26228:18;26219:6;26175:72;:::i;:::-;25922:332;;;;;:::o;26260:118::-;26347:24;26365:5;26347:24;:::i;:::-;26342:3;26335:37;26260:118;;:::o;26384:98::-;26435:6;26469:5;26463:12;26453:22;;26384:98;;;:::o;26488:168::-;26571:11;26605:6;26600:3;26593:19;26645:4;26640:3;26636:14;26621:29;;26488:168;;;;:::o;26662:373::-;26748:3;26776:38;26808:5;26776:38;:::i;:::-;26830:70;26893:6;26888:3;26830:70;:::i;:::-;26823:77;;26909:65;26967:6;26962:3;26955:4;26948:5;26944:16;26909:65;:::i;:::-;26999:29;27021:6;26999:29;:::i;:::-;26994:3;26990:39;26983:46;;26752:283;26662:373;;;;:::o;27041:1053::-;27364:4;27402:3;27391:9;27387:19;27379:27;;27416:71;27484:1;27473:9;27469:17;27460:6;27416:71;:::i;:::-;27497:72;27565:2;27554:9;27550:18;27541:6;27497:72;:::i;:::-;27616:9;27610:4;27606:20;27601:2;27590:9;27586:18;27579:48;27644:108;27747:4;27738:6;27644:108;:::i;:::-;27636:116;;27799:9;27793:4;27789:20;27784:2;27773:9;27769:18;27762:48;27827:108;27930:4;27921:6;27827:108;:::i;:::-;27819:116;;27983:9;27977:4;27973:20;27967:3;27956:9;27952:19;27945:49;28011:76;28082:4;28073:6;28011:76;:::i;:::-;28003:84;;27041:1053;;;;;;;;:::o;28100:141::-;28156:5;28187:6;28181:13;28172:22;;28203:32;28229:5;28203:32;:::i;:::-;28100:141;;;;:::o;28247:349::-;28316:6;28365:2;28353:9;28344:7;28340:23;28336:32;28333:119;;;28371:79;;:::i;:::-;28333:119;28491:1;28516:63;28571:7;28562:6;28551:9;28547:22;28516:63;:::i;:::-;28506:73;;28462:127;28247:349;;;;:::o;28602:106::-;28646:8;28695:5;28690:3;28686:15;28665:36;;28602:106;;;:::o;28714:183::-;28749:3;28787:1;28769:16;28766:23;28763:128;;;28825:1;28822;28819;28804:23;28847:34;28878:1;28872:8;28847:34;:::i;:::-;28840:41;;28763:128;28714:183;:::o;28903:711::-;28942:3;28980:4;28962:16;28959:26;28988:5;28956:39;29017:20;;:::i;:::-;29092:1;29074:16;29070:24;29067:1;29061:4;29046:49;29125:4;29119:11;29224:16;29217:4;29209:6;29205:17;29202:39;29169:18;29161:6;29158:30;29142:113;29139:146;;;29270:5;;;;29139:146;29316:6;29310:4;29306:17;29352:3;29346:10;29379:18;29371:6;29368:30;29365:43;;;29401:5;;;;;;29365:43;29449:6;29442:4;29437:3;29433:14;29429:27;29508:1;29490:16;29486:24;29480:4;29476:35;29471:3;29468:44;29465:57;;;29515:5;;;;;;;29465:57;29532;29580:6;29574:4;29570:17;29562:6;29558:30;29552:4;29532:57;:::i;:::-;29605:3;29598:10;;28946:668;;;;;28903:711;;:::o;29620:239::-;29760:34;29756:1;29748:6;29744:14;29737:58;29829:22;29824:2;29816:6;29812:15;29805:47;29620:239;:::o;29865:366::-;30007:3;30028:67;30092:2;30087:3;30028:67;:::i;:::-;30021:74;;30104:93;30193:3;30104:93;:::i;:::-;30222:2;30217:3;30213:12;30206:19;;29865:366;;;:::o;30237:419::-;30403:4;30441:2;30430:9;30426:18;30418:26;;30490:9;30484:4;30480:20;30476:1;30465:9;30461:17;30454:47;30518:131;30644:4;30518:131;:::i;:::-;30510:139;;30237:419;;;:::o;30662:227::-;30802:34;30798:1;30790:6;30786:14;30779:58;30871:10;30866:2;30858:6;30854:15;30847:35;30662:227;:::o;30895:366::-;31037:3;31058:67;31122:2;31117:3;31058:67;:::i;:::-;31051:74;;31134:93;31223:3;31134:93;:::i;:::-;31252:2;31247:3;31243:12;31236:19;;30895:366;;;:::o;31267:419::-;31433:4;31471:2;31460:9;31456:18;31448:26;;31520:9;31514:4;31510:20;31506:1;31495:9;31491:17;31484:47;31548:131;31674:4;31548:131;:::i;:::-;31540:139;;31267:419;;;:::o;31692:751::-;31915:4;31953:3;31942:9;31938:19;31930:27;;31967:71;32035:1;32024:9;32020:17;32011:6;31967:71;:::i;:::-;32048:72;32116:2;32105:9;32101:18;32092:6;32048:72;:::i;:::-;32130;32198:2;32187:9;32183:18;32174:6;32130:72;:::i;:::-;32212;32280:2;32269:9;32265:18;32256:6;32212:72;:::i;:::-;32332:9;32326:4;32322:20;32316:3;32305:9;32301:19;32294:49;32360:76;32431:4;32422:6;32360:76;:::i;:::-;32352:84;;31692:751;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1892600","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"infinite","balanceOfBatch(address[],uint256[])":"infinite","isApprovedForAll(address,address)":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"796","uri(uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"21","_asSingletonArray(uint256)":"infinite","_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"21","_burn(address,uint256,uint256)":"infinite","_burnBatch(address,uint256[] memory,uint256[] memory)":"infinite","_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)":"infinite","_mint(address,uint256,uint256,bytes memory)":"infinite","_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeTransferFrom(address,address,uint256,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_setURI(string memory)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner nor approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner nor approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc4b07511b242ed11e023539c3307cef07256cc7eced6ee189af3ff10735678664736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x4B SMOD MLOAD SHL 0x24 0x2E 0xD1 0x1E MUL CALLDATALOAD CODECOPY 0xC3 ADDRESS PUSH29 0xEF07256CC7ECED6EE189AF3FF10735678664736F6C6343000811003300 ","sourceMap":"194:8111:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc4b07511b242ed11e023539c3307cef07256cc7eced6ee189af3ff10735678664736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x4B SMOD MLOAD SHL 0x24 0x2E 0xD1 0x1E MUL CALLDATALOAD CODECOPY 0xC3 ADDRESS PUSH29 0xEF07256CC7ECED6EE189AF3FF10735678664736F6C6343000811003300 ","sourceMap":"194:8111:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050dc6fb061240838bfba2b874cd46c4307a48d4e15b0408cdc2450e4a56d15f064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xDC PUSH16 0xB061240838BFBA2B874CD46C4307A48D 0x4E ISZERO 0xB0 BLOCKHASH DUP13 0xDC 0x24 POP 0xE4 0xA5 PUSH14 0x15F064736F6C6343000811003300 ","sourceMap":"161:2235:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050dc6fb061240838bfba2b874cd46c4307a48d4e15b0408cdc2450e4a56d15f064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xDC PUSH16 0xB061240838BFBA2B874CD46C4307A48D 0x4E ISZERO 0xB0 BLOCKHASH DUP13 0xDC 0x24 POP 0xE4 0xA5 PUSH14 0x15F064736F6C6343000811003300 ","sourceMap":"161:2235:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BasicIslandGenesis.sol":{"BasicIslandGenesis":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"},{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AlreadyMinted","type":"error"},{"inputs":[],"name":"ContractsNotAllowedToMint","type":"error"},{"inputs":[],"name":"InvalidBuyPrice","type":"error"},{"inputs":[],"name":"MintNotActive","type":"error"},{"inputs":[],"name":"MintedOut","type":"error"},{"inputs":[],"name":"TokenDoesNotExist","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"_mintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"amountMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"mintPrice","type":"uint256"}],"name":"changeMintPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getState","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAmountMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"amountMinted(address)":{"returns":{"_0":"the amount to token minted by account"}},"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"getState()":{"returns":{"_0":"_mintActive true if mint is active and vice versa"}},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalAmountMinted()":{"returns":{"_0":"total Basic Island Nft minted so far for token id 1"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"uri(uint256)":{"returns":{"_0":"tokenUri"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_2234":{"entryPoint":null,"id":2234,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1178":{"entryPoint":1183,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":1046,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":1175,"id":1159,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":1191,"id":1241,"parameterSlots":6,"returnSlots":0},"@_mint_769":{"entryPoint":559,"id":769,"parameterSlots":4,"returnSlots":0},"@_msgSender_1820":{"entryPoint":353,"id":1820,"parameterSlots":0,"returnSlots":1},"@_setURI_668":{"entryPoint":332,"id":668,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":361,"id":111,"parameterSlots":1,"returnSlots":0},"@isContract_1531":{"entryPoint":1696,"id":1531,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":2826,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":3819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":2901,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":3842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory":{"entryPoint":3053,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3539,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3584,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack":{"entryPoint":4429,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack":{"entryPoint":3251,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3430,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3649,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4316,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3447,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":2697,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2596,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2728,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1889,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3556,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1731,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3155,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3371,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2210,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2984,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":3749,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2952,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2025,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2171,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2045,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2365,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2782,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1910,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1836,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2335,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2643,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2035,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2303,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3324,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1789,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3492,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1742,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2085,"id":null,"parameterSlots":1,"returnSlots":1},"return_data_selector":{"entryPoint":3905,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2616,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2621,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2611,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2606,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2626,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1926,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":3892,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2290,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2143,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed":{"entryPoint":4198,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503":{"entryPoint":4350,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2":{"entryPoint":3172,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":3942,"id":null,"parameterSlots":0,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":1939,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2095,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3004,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":3793,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2138,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17254:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"140:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:11"},"nodeType":"YulFunctionCall","src":"150:88:11"},"nodeType":"YulExpressionStatement","src":"150:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:11"},"nodeType":"YulFunctionCall","src":"247:15:11"},"nodeType":"YulExpressionStatement","src":"247:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:11"},"nodeType":"YulFunctionCall","src":"271:15:11"},"nodeType":"YulExpressionStatement","src":"271:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:11"},{"body":{"nodeType":"YulBlock","src":"326:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:11"},"nodeType":"YulFunctionCall","src":"336:88:11"},"nodeType":"YulExpressionStatement","src":"336:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:11"},"nodeType":"YulFunctionCall","src":"433:15:11"},"nodeType":"YulExpressionStatement","src":"433:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:11"},"nodeType":"YulFunctionCall","src":"457:15:11"},"nodeType":"YulExpressionStatement","src":"457:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:11"},{"body":{"nodeType":"YulBlock","src":"535:269:11","statements":[{"nodeType":"YulAssignment","src":"545:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:11"},"nodeType":"YulFunctionCall","src":"555:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:11"},"nodeType":"YulFunctionCall","src":"602:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:11","statements":[{"nodeType":"YulAssignment","src":"667:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:11"},"nodeType":"YulFunctionCall","src":"677:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:11"},"nodeType":"YulFunctionCall","src":"626:26:11"},"nodeType":"YulIf","src":"623:81:11"},{"body":{"nodeType":"YulBlock","src":"756:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:11"},"nodeType":"YulFunctionCall","src":"770:18:11"},"nodeType":"YulExpressionStatement","src":"770:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:11"},"nodeType":"YulFunctionCall","src":"740:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:11"},"nodeType":"YulFunctionCall","src":"717:38:11"},"nodeType":"YulIf","src":"714:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:11","type":""}],"src":"484:320:11"},{"body":{"nodeType":"YulBlock","src":"864:87:11","statements":[{"nodeType":"YulAssignment","src":"874:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:11"},"nodeType":"YulFunctionCall","src":"895:14:11"},"nodeType":"YulExpressionStatement","src":"895:14:11"},{"nodeType":"YulAssignment","src":"918:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:11"},"nodeType":"YulFunctionCall","src":"926:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:11","type":""}],"src":"810:141:11"},{"body":{"nodeType":"YulBlock","src":"1001:49:11","statements":[{"nodeType":"YulAssignment","src":"1011:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:11"},"nodeType":"YulFunctionCall","src":"1025:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:11"},"nodeType":"YulFunctionCall","src":"1021:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:11","type":""}],"src":"957:93:11"},{"body":{"nodeType":"YulBlock","src":"1109:54:11","statements":[{"nodeType":"YulAssignment","src":"1119:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:11"},"nodeType":"YulFunctionCall","src":"1140:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:11","type":""}],"src":"1056:107:11"},{"body":{"nodeType":"YulBlock","src":"1245:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:11"},"nodeType":"YulFunctionCall","src":"1272:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:11"},"nodeType":"YulFunctionCall","src":"1311:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:11","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:11"},"nodeType":"YulFunctionCall","src":"1429:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:11"}]},{"nodeType":"YulAssignment","src":"1477:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:11"},"nodeType":"YulFunctionCall","src":"1497:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:11"},"nodeType":"YulFunctionCall","src":"1486:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:11"}]},{"nodeType":"YulAssignment","src":"1516:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:11"},"nodeType":"YulFunctionCall","src":"1536:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:11"},"nodeType":"YulFunctionCall","src":"1526:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:11","type":""}],"src":"1169:393:11"},{"body":{"nodeType":"YulBlock","src":"1613:32:11","statements":[{"nodeType":"YulAssignment","src":"1623:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:11","type":""}],"src":"1568:77:11"},{"body":{"nodeType":"YulBlock","src":"1683:28:11","statements":[{"nodeType":"YulAssignment","src":"1693:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:11","type":""}],"src":"1651:60:11"},{"body":{"nodeType":"YulBlock","src":"1777:82:11","statements":[{"nodeType":"YulAssignment","src":"1787:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:11"},"nodeType":"YulFunctionCall","src":"1827:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:11"},"nodeType":"YulFunctionCall","src":"1818:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:11"},"nodeType":"YulFunctionCall","src":"1800:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:11","type":""}],"src":"1717:142:11"},{"body":{"nodeType":"YulBlock","src":"1912:28:11","statements":[{"nodeType":"YulAssignment","src":"1922:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:11","type":""}],"src":"1865:75:11"},{"body":{"nodeType":"YulBlock","src":"2022:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:11"},"nodeType":"YulFunctionCall","src":"2056:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:11"},"nodeType":"YulFunctionCall","src":"2145:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:11"},"nodeType":"YulFunctionCall","src":"2166:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:11"},"nodeType":"YulFunctionCall","src":"2117:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:11"},"nodeType":"YulFunctionCall","src":"2104:105:11"},"nodeType":"YulExpressionStatement","src":"2104:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:11","type":""}],"src":"1946:269:11"},{"body":{"nodeType":"YulBlock","src":"2270:24:11","statements":[{"nodeType":"YulAssignment","src":"2280:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:11","type":""}],"src":"2221:73:11"},{"body":{"nodeType":"YulBlock","src":"2353:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:11"},"nodeType":"YulFunctionCall","src":"2377:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:11"},"nodeType":"YulFunctionCall","src":"2418:65:11"},"nodeType":"YulExpressionStatement","src":"2418:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:11","type":""}],"src":"2300:189:11"},{"body":{"nodeType":"YulBlock","src":"2545:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:11"},"nodeType":"YulFunctionCall","src":"2626:39:11"},"nodeType":"YulExpressionStatement","src":"2626:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:11"},"nodeType":"YulFunctionCall","src":"2562:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:11","statements":[{"nodeType":"YulAssignment","src":"2579:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:11"},"nodeType":"YulFunctionCall","src":"2588:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:11","statements":[]},"src":"2555:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:11","type":""}],"src":"2495:186:11"},{"body":{"nodeType":"YulBlock","src":"2766:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:11"},"nodeType":"YulFunctionCall","src":"2822:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:11"},"nodeType":"YulFunctionCall","src":"2906:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:11"},"nodeType":"YulFunctionCall","src":"2892:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:11","statements":[{"nodeType":"YulAssignment","src":"3095:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:11"},"nodeType":"YulFunctionCall","src":"3074:18:11"},"nodeType":"YulIf","src":"3071:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:11"},"nodeType":"YulFunctionCall","src":"3189:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:11"},"nodeType":"YulFunctionCall","src":"3175:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:11"},"nodeType":"YulFunctionCall","src":"3133:80:11"},"nodeType":"YulExpressionStatement","src":"3133:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:11"},"nodeType":"YulFunctionCall","src":"2780:11:11"},"nodeType":"YulIf","src":"2777:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:11","type":""}],"src":"2687:543:11"},{"body":{"nodeType":"YulBlock","src":"3299:54:11","statements":[{"nodeType":"YulAssignment","src":"3309:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:11"},"nodeType":"YulFunctionCall","src":"3330:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:11","type":""}],"src":"3236:117:11"},{"body":{"nodeType":"YulBlock","src":"3410:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:11"},"nodeType":"YulFunctionCall","src":"3465:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:11"},"nodeType":"YulFunctionCall","src":"3480:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:11"},"nodeType":"YulFunctionCall","src":"3436:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:11"},"nodeType":"YulFunctionCall","src":"3432:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:11","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:11"},"nodeType":"YulFunctionCall","src":"3507:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:11","type":""}],"src":"3359:169:11"},{"body":{"nodeType":"YulBlock","src":"3614:214:11","statements":[{"nodeType":"YulAssignment","src":"3747:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:11"},"nodeType":"YulFunctionCall","src":"3755:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:11"}]},{"nodeType":"YulAssignment","src":"3793:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:11"},"nodeType":"YulFunctionCall","src":"3810:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:11"},"nodeType":"YulFunctionCall","src":"3801:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:11","type":""}],"src":"3533:295:11"},{"body":{"nodeType":"YulBlock","src":"3925:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:11"},"nodeType":"YulFunctionCall","src":"3950:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:11"},"nodeType":"YulFunctionCall","src":"4074:18:11"},"nodeType":"YulExpressionStatement","src":"4074:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:11"},"nodeType":"YulFunctionCall","src":"4041:30:11"},"nodeType":"YulIf","src":"4038:56:11"},{"nodeType":"YulVariableDeclaration","src":"4104:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:11"},"nodeType":"YulFunctionCall","src":"4144:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:11"},"nodeType":"YulFunctionCall","src":"4118:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:11"},"nodeType":"YulFunctionCall","src":"4203:67:11"},"nodeType":"YulExpressionStatement","src":"4203:67:11"},{"nodeType":"YulVariableDeclaration","src":"4280:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:11","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:11"},"nodeType":"YulFunctionCall","src":"4413:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:11"},"nodeType":"YulFunctionCall","src":"4401:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:11"},"nodeType":"YulFunctionCall","src":"4451:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:11"},"nodeType":"YulFunctionCall","src":"4608:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:11"},"nodeType":"YulFunctionCall","src":"4602:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:11"},"nodeType":"YulFunctionCall","src":"4587:42:11"},"nodeType":"YulExpressionStatement","src":"4587:42:11"},{"nodeType":"YulAssignment","src":"4646:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:11"},"nodeType":"YulFunctionCall","src":"4656:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:11"}]},{"nodeType":"YulAssignment","src":"4687:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:11"},"nodeType":"YulFunctionCall","src":"4700:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:11"},"nodeType":"YulFunctionCall","src":"4532:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:11","statements":[{"nodeType":"YulAssignment","src":"4549:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:11"},"nodeType":"YulFunctionCall","src":"4554:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:11","statements":[]},"src":"4524:208:11"},{"body":{"nodeType":"YulBlock","src":"4768:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:11"},"nodeType":"YulFunctionCall","src":"4809:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:11"},"nodeType":"YulFunctionCall","src":"4803:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:11"},"nodeType":"YulFunctionCall","src":"4891:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:11"},"nodeType":"YulFunctionCall","src":"4861:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:11"},"nodeType":"YulFunctionCall","src":"4846:64:11"},"nodeType":"YulExpressionStatement","src":"4846:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:11"},"nodeType":"YulFunctionCall","src":"4748:19:11"},"nodeType":"YulIf","src":"4745:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:11"},"nodeType":"YulFunctionCall","src":"4954:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:11"},"nodeType":"YulFunctionCall","src":"4950:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:11"},"nodeType":"YulFunctionCall","src":"4937:36:11"},"nodeType":"YulExpressionStatement","src":"4937:36:11"}]},"nodeType":"YulCase","src":"4365:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:11","statements":[{"nodeType":"YulAssignment","src":"5069:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:11"},"nodeType":"YulFunctionCall","src":"5084:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:11"},"nodeType":"YulFunctionCall","src":"5078:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:11"},"nodeType":"YulIf","src":"5041:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:11"},"nodeType":"YulFunctionCall","src":"5144:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:11"},"nodeType":"YulFunctionCall","src":"5131:81:11"},"nodeType":"YulExpressionStatement","src":"5131:81:11"}]},"nodeType":"YulCase","src":"4992:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:11"},"nodeType":"YulFunctionCall","src":"4342:14:11"},"nodeType":"YulSwitch","src":"4335:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:11","type":""}],"src":"3833:1395:11"},{"body":{"nodeType":"YulBlock","src":"5274:35:11","statements":[{"nodeType":"YulAssignment","src":"5284:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5300:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5294:5:11"},"nodeType":"YulFunctionCall","src":"5294:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5284:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5267:6:11","type":""}],"src":"5234:75:11"},{"body":{"nodeType":"YulBlock","src":"5404:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5421:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5424:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5414:6:11"},"nodeType":"YulFunctionCall","src":"5414:12:11"},"nodeType":"YulExpressionStatement","src":"5414:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"5315:117:11"},{"body":{"nodeType":"YulBlock","src":"5527:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5544:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5547:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5537:6:11"},"nodeType":"YulFunctionCall","src":"5537:12:11"},"nodeType":"YulExpressionStatement","src":"5537:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"5438:117:11"},{"body":{"nodeType":"YulBlock","src":"5650:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5667:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5670:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5660:6:11"},"nodeType":"YulFunctionCall","src":"5660:12:11"},"nodeType":"YulExpressionStatement","src":"5660:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5561:117:11"},{"body":{"nodeType":"YulBlock","src":"5773:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5790:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5793:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5783:6:11"},"nodeType":"YulFunctionCall","src":"5783:12:11"},"nodeType":"YulExpressionStatement","src":"5783:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5684:117:11"},{"body":{"nodeType":"YulBlock","src":"5855:54:11","statements":[{"nodeType":"YulAssignment","src":"5865:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5883:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5890:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5879:3:11"},"nodeType":"YulFunctionCall","src":"5879:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5899:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5895:3:11"},"nodeType":"YulFunctionCall","src":"5895:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5875:3:11"},"nodeType":"YulFunctionCall","src":"5875:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5865:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5838:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5848:6:11","type":""}],"src":"5807:102:11"},{"body":{"nodeType":"YulBlock","src":"5958:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5968:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5990:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6020:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5998:21:11"},"nodeType":"YulFunctionCall","src":"5998:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5986:3:11"},"nodeType":"YulFunctionCall","src":"5986:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5972:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6137:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6139:16:11"},"nodeType":"YulFunctionCall","src":"6139:18:11"},"nodeType":"YulExpressionStatement","src":"6139:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6080:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"6092:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6077:2:11"},"nodeType":"YulFunctionCall","src":"6077:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6116:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6128:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6113:2:11"},"nodeType":"YulFunctionCall","src":"6113:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6074:2:11"},"nodeType":"YulFunctionCall","src":"6074:62:11"},"nodeType":"YulIf","src":"6071:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6175:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6179:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6168:6:11"},"nodeType":"YulFunctionCall","src":"6168:22:11"},"nodeType":"YulExpressionStatement","src":"6168:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5944:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"5952:4:11","type":""}],"src":"5915:281:11"},{"body":{"nodeType":"YulBlock","src":"6243:88:11","statements":[{"nodeType":"YulAssignment","src":"6253:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6263:18:11"},"nodeType":"YulFunctionCall","src":"6263:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6253:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6312:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"6320:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6292:19:11"},"nodeType":"YulFunctionCall","src":"6292:33:11"},"nodeType":"YulExpressionStatement","src":"6292:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6227:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6236:6:11","type":""}],"src":"6202:129:11"},{"body":{"nodeType":"YulBlock","src":"6404:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"6509:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6511:16:11"},"nodeType":"YulFunctionCall","src":"6511:18:11"},"nodeType":"YulExpressionStatement","src":"6511:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6481:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6489:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6478:2:11"},"nodeType":"YulFunctionCall","src":"6478:30:11"},"nodeType":"YulIf","src":"6475:56:11"},{"nodeType":"YulAssignment","src":"6541:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6571:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6549:21:11"},"nodeType":"YulFunctionCall","src":"6549:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6541:4:11"}]},{"nodeType":"YulAssignment","src":"6615:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6627:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"6633:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6623:3:11"},"nodeType":"YulFunctionCall","src":"6623:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6615:4:11"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6388:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6399:4:11","type":""}],"src":"6337:308:11"},{"body":{"nodeType":"YulBlock","src":"6713:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6723:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6732:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6727:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6792:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6817:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"6822:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6813:3:11"},"nodeType":"YulFunctionCall","src":"6813:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6836:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"6841:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6832:3:11"},"nodeType":"YulFunctionCall","src":"6832:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6826:5:11"},"nodeType":"YulFunctionCall","src":"6826:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6806:6:11"},"nodeType":"YulFunctionCall","src":"6806:39:11"},"nodeType":"YulExpressionStatement","src":"6806:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6753:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"6756:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6750:2:11"},"nodeType":"YulFunctionCall","src":"6750:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6764:19:11","statements":[{"nodeType":"YulAssignment","src":"6766:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6775:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"6778:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:11"},"nodeType":"YulFunctionCall","src":"6771:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6766:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"6746:3:11","statements":[]},"src":"6742:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6875:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"6880:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6871:3:11"},"nodeType":"YulFunctionCall","src":"6871:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"6889:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6864:6:11"},"nodeType":"YulFunctionCall","src":"6864:27:11"},"nodeType":"YulExpressionStatement","src":"6864:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6695:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6700:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6705:6:11","type":""}],"src":"6651:246:11"},{"body":{"nodeType":"YulBlock","src":"6998:339:11","statements":[{"nodeType":"YulAssignment","src":"7008:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7075:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7033:41:11"},"nodeType":"YulFunctionCall","src":"7033:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7017:15:11"},"nodeType":"YulFunctionCall","src":"7017:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7008:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7099:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"7106:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7092:6:11"},"nodeType":"YulFunctionCall","src":"7092:21:11"},"nodeType":"YulExpressionStatement","src":"7092:21:11"},{"nodeType":"YulVariableDeclaration","src":"7122:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7137:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7144:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7133:3:11"},"nodeType":"YulFunctionCall","src":"7133:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7126:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7187:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7189:77:11"},"nodeType":"YulFunctionCall","src":"7189:79:11"},"nodeType":"YulExpressionStatement","src":"7189:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7168:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7173:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7164:3:11"},"nodeType":"YulFunctionCall","src":"7164:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"7182:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7161:2:11"},"nodeType":"YulFunctionCall","src":"7161:25:11"},"nodeType":"YulIf","src":"7158:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7314:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"7319:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7324:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7279:34:11"},"nodeType":"YulFunctionCall","src":"7279:52:11"},"nodeType":"YulExpressionStatement","src":"7279:52:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6971:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6976:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6984:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6992:5:11","type":""}],"src":"6903:434:11"},{"body":{"nodeType":"YulBlock","src":"7430:282:11","statements":[{"body":{"nodeType":"YulBlock","src":"7479:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7481:77:11"},"nodeType":"YulFunctionCall","src":"7481:79:11"},"nodeType":"YulExpressionStatement","src":"7481:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7458:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7466:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7454:3:11"},"nodeType":"YulFunctionCall","src":"7454:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"7473:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7450:3:11"},"nodeType":"YulFunctionCall","src":"7450:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7443:6:11"},"nodeType":"YulFunctionCall","src":"7443:35:11"},"nodeType":"YulIf","src":"7440:122:11"},{"nodeType":"YulVariableDeclaration","src":"7571:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7591:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7585:5:11"},"nodeType":"YulFunctionCall","src":"7585:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7575:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7607:99:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7679:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7687:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7675:3:11"},"nodeType":"YulFunctionCall","src":"7675:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"7694:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"7702:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7616:58:11"},"nodeType":"YulFunctionCall","src":"7616:90:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7607:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7408:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"7416:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7424:5:11","type":""}],"src":"7357:355:11"},{"body":{"nodeType":"YulBlock","src":"7763:81:11","statements":[{"nodeType":"YulAssignment","src":"7773:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7788:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7795:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7784:3:11"},"nodeType":"YulFunctionCall","src":"7784:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7773:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7745:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7755:7:11","type":""}],"src":"7718:126:11"},{"body":{"nodeType":"YulBlock","src":"7895:51:11","statements":[{"nodeType":"YulAssignment","src":"7905:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7934:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7916:17:11"},"nodeType":"YulFunctionCall","src":"7916:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7905:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7877:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7887:7:11","type":""}],"src":"7850:96:11"},{"body":{"nodeType":"YulBlock","src":"7995:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"8052:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8061:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8064:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8054:6:11"},"nodeType":"YulFunctionCall","src":"8054:12:11"},"nodeType":"YulExpressionStatement","src":"8054:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8018:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8043:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8025:17:11"},"nodeType":"YulFunctionCall","src":"8025:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8015:2:11"},"nodeType":"YulFunctionCall","src":"8015:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8008:6:11"},"nodeType":"YulFunctionCall","src":"8008:43:11"},"nodeType":"YulIf","src":"8005:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7988:5:11","type":""}],"src":"7952:122:11"},{"body":{"nodeType":"YulBlock","src":"8143:80:11","statements":[{"nodeType":"YulAssignment","src":"8153:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8168:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8162:5:11"},"nodeType":"YulFunctionCall","src":"8162:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8153:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8211:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"8184:26:11"},"nodeType":"YulFunctionCall","src":"8184:33:11"},"nodeType":"YulExpressionStatement","src":"8184:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8121:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"8129:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8137:5:11","type":""}],"src":"8080:143:11"},{"body":{"nodeType":"YulBlock","src":"8333:576:11","statements":[{"body":{"nodeType":"YulBlock","src":"8379:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8381:77:11"},"nodeType":"YulFunctionCall","src":"8381:79:11"},"nodeType":"YulExpressionStatement","src":"8381:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8354:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8363:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8350:3:11"},"nodeType":"YulFunctionCall","src":"8350:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8375:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8346:3:11"},"nodeType":"YulFunctionCall","src":"8346:32:11"},"nodeType":"YulIf","src":"8343:119:11"},{"nodeType":"YulBlock","src":"8472:291:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8487:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8511:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8522:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:11"},"nodeType":"YulFunctionCall","src":"8507:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8501:5:11"},"nodeType":"YulFunctionCall","src":"8501:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8491:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8572:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8574:77:11"},"nodeType":"YulFunctionCall","src":"8574:79:11"},"nodeType":"YulExpressionStatement","src":"8574:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8544:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8552:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8541:2:11"},"nodeType":"YulFunctionCall","src":"8541:30:11"},"nodeType":"YulIf","src":"8538:117:11"},{"nodeType":"YulAssignment","src":"8669:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8725:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8736:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8721:3:11"},"nodeType":"YulFunctionCall","src":"8721:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8745:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"8679:41:11"},"nodeType":"YulFunctionCall","src":"8679:74:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8669:6:11"}]}]},{"nodeType":"YulBlock","src":"8773:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8788:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8802:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8792:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8818:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8864:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8875:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8860:3:11"},"nodeType":"YulFunctionCall","src":"8860:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8884:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"8828:31:11"},"nodeType":"YulFunctionCall","src":"8828:64:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8818:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8295:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8306:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8318:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8326:6:11","type":""}],"src":"8229:680:11"},{"body":{"nodeType":"YulBlock","src":"9011:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9028:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9033:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9021:6:11"},"nodeType":"YulFunctionCall","src":"9021:19:11"},"nodeType":"YulExpressionStatement","src":"9021:19:11"},{"nodeType":"YulAssignment","src":"9049:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9068:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9073:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9064:3:11"},"nodeType":"YulFunctionCall","src":"9064:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9049:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8983:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"8988:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8999:11:11","type":""}],"src":"8915:169:11"},{"body":{"nodeType":"YulBlock","src":"9196:114:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9218:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9226:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9214:3:11"},"nodeType":"YulFunctionCall","src":"9214:14:11"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"9230:34:11","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9207:6:11"},"nodeType":"YulFunctionCall","src":"9207:58:11"},"nodeType":"YulExpressionStatement","src":"9207:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9286:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9294:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9282:3:11"},"nodeType":"YulFunctionCall","src":"9282:15:11"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"9299:3:11","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9275:6:11"},"nodeType":"YulFunctionCall","src":"9275:28:11"},"nodeType":"YulExpressionStatement","src":"9275:28:11"}]},"name":"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9188:6:11","type":""}],"src":"9090:220:11"},{"body":{"nodeType":"YulBlock","src":"9462:220:11","statements":[{"nodeType":"YulAssignment","src":"9472:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9538:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9543:2:11","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9479:58:11"},"nodeType":"YulFunctionCall","src":"9479:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9472:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9644:3:11"}],"functionName":{"name":"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","nodeType":"YulIdentifier","src":"9555:88:11"},"nodeType":"YulFunctionCall","src":"9555:93:11"},"nodeType":"YulExpressionStatement","src":"9555:93:11"},{"nodeType":"YulAssignment","src":"9657:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9668:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9673:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9664:3:11"},"nodeType":"YulFunctionCall","src":"9664:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9657:3:11"}]}]},"name":"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9450:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9458:3:11","type":""}],"src":"9316:366:11"},{"body":{"nodeType":"YulBlock","src":"9859:248:11","statements":[{"nodeType":"YulAssignment","src":"9869:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9881:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9892:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9877:3:11"},"nodeType":"YulFunctionCall","src":"9877:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9869:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9916:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9927:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9912:3:11"},"nodeType":"YulFunctionCall","src":"9912:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9935:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9941:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9931:3:11"},"nodeType":"YulFunctionCall","src":"9931:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9905:6:11"},"nodeType":"YulFunctionCall","src":"9905:47:11"},"nodeType":"YulExpressionStatement","src":"9905:47:11"},{"nodeType":"YulAssignment","src":"9961:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10095:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9969:124:11"},"nodeType":"YulFunctionCall","src":"9969:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9961:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9839:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9854:4:11","type":""}],"src":"9688:419:11"},{"body":{"nodeType":"YulBlock","src":"10141:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10158:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10161:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10151:6:11"},"nodeType":"YulFunctionCall","src":"10151:88:11"},"nodeType":"YulExpressionStatement","src":"10151:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10255:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10258:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10248:6:11"},"nodeType":"YulFunctionCall","src":"10248:15:11"},"nodeType":"YulExpressionStatement","src":"10248:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10279:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10282:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10272:6:11"},"nodeType":"YulFunctionCall","src":"10272:15:11"},"nodeType":"YulExpressionStatement","src":"10272:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10113:180:11"},{"body":{"nodeType":"YulBlock","src":"10343:147:11","statements":[{"nodeType":"YulAssignment","src":"10353:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10376:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10358:17:11"},"nodeType":"YulFunctionCall","src":"10358:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10353:1:11"}]},{"nodeType":"YulAssignment","src":"10387:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10410:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10392:17:11"},"nodeType":"YulFunctionCall","src":"10392:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10387:1:11"}]},{"nodeType":"YulAssignment","src":"10421:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10432:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"10435:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10428:3:11"},"nodeType":"YulFunctionCall","src":"10428:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10421:3:11"}]},{"body":{"nodeType":"YulBlock","src":"10461:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10463:16:11"},"nodeType":"YulFunctionCall","src":"10463:18:11"},"nodeType":"YulExpressionStatement","src":"10463:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10453:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"10456:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10450:2:11"},"nodeType":"YulFunctionCall","src":"10450:10:11"},"nodeType":"YulIf","src":"10447:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10330:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"10333:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10339:3:11","type":""}],"src":"10299:191:11"},{"body":{"nodeType":"YulBlock","src":"10561:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10578:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10601:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10583:17:11"},"nodeType":"YulFunctionCall","src":"10583:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10571:6:11"},"nodeType":"YulFunctionCall","src":"10571:37:11"},"nodeType":"YulExpressionStatement","src":"10571:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10549:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10556:3:11","type":""}],"src":"10496:118:11"},{"body":{"nodeType":"YulBlock","src":"10746:206:11","statements":[{"nodeType":"YulAssignment","src":"10756:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10768:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10779:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10764:3:11"},"nodeType":"YulFunctionCall","src":"10764:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10756:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10836:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10849:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10860:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10845:3:11"},"nodeType":"YulFunctionCall","src":"10845:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10792:43:11"},"nodeType":"YulFunctionCall","src":"10792:71:11"},"nodeType":"YulExpressionStatement","src":"10792:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10917:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10930:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10941:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10926:3:11"},"nodeType":"YulFunctionCall","src":"10926:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10873:43:11"},"nodeType":"YulFunctionCall","src":"10873:72:11"},"nodeType":"YulExpressionStatement","src":"10873:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10710:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10722:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10730:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10741:4:11","type":""}],"src":"10620:332:11"},{"body":{"nodeType":"YulBlock","src":"10986:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11003:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11006:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10996:6:11"},"nodeType":"YulFunctionCall","src":"10996:88:11"},"nodeType":"YulExpressionStatement","src":"10996:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11100:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11103:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11093:6:11"},"nodeType":"YulFunctionCall","src":"11093:15:11"},"nodeType":"YulExpressionStatement","src":"11093:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11124:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11127:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11117:6:11"},"nodeType":"YulFunctionCall","src":"11117:15:11"},"nodeType":"YulExpressionStatement","src":"11117:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10958:180:11"},{"body":{"nodeType":"YulBlock","src":"11209:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11226:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11249:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11231:17:11"},"nodeType":"YulFunctionCall","src":"11231:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11219:6:11"},"nodeType":"YulFunctionCall","src":"11219:37:11"},"nodeType":"YulExpressionStatement","src":"11219:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11197:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11204:3:11","type":""}],"src":"11144:118:11"},{"body":{"nodeType":"YulBlock","src":"11326:40:11","statements":[{"nodeType":"YulAssignment","src":"11337:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11353:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11347:5:11"},"nodeType":"YulFunctionCall","src":"11347:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11337:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11309:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11319:6:11","type":""}],"src":"11268:98:11"},{"body":{"nodeType":"YulBlock","src":"11467:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11484:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11489:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11477:6:11"},"nodeType":"YulFunctionCall","src":"11477:19:11"},"nodeType":"YulExpressionStatement","src":"11477:19:11"},{"nodeType":"YulAssignment","src":"11505:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11524:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11529:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11520:3:11"},"nodeType":"YulFunctionCall","src":"11520:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11505:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11439:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"11444:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11455:11:11","type":""}],"src":"11372:168:11"},{"body":{"nodeType":"YulBlock","src":"11636:283:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11646:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11692:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11660:31:11"},"nodeType":"YulFunctionCall","src":"11660:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11650:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11707:77:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11772:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11777:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11714:57:11"},"nodeType":"YulFunctionCall","src":"11714:70:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11707:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11832:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11839:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11828:3:11"},"nodeType":"YulFunctionCall","src":"11828:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11846:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11851:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11793:34:11"},"nodeType":"YulFunctionCall","src":"11793:65:11"},"nodeType":"YulExpressionStatement","src":"11793:65:11"},{"nodeType":"YulAssignment","src":"11867:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11878:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11905:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11883:21:11"},"nodeType":"YulFunctionCall","src":"11883:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11874:3:11"},"nodeType":"YulFunctionCall","src":"11874:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11867:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11617:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11624:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11632:3:11","type":""}],"src":"11546:373:11"},{"body":{"nodeType":"YulBlock","src":"12153:523:11","statements":[{"nodeType":"YulAssignment","src":"12163:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12175:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12186:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12171:3:11"},"nodeType":"YulFunctionCall","src":"12171:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12163:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12244:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12257:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12268:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12253:3:11"},"nodeType":"YulFunctionCall","src":"12253:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12200:43:11"},"nodeType":"YulFunctionCall","src":"12200:71:11"},"nodeType":"YulExpressionStatement","src":"12200:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12325:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12338:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12349:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12334:3:11"},"nodeType":"YulFunctionCall","src":"12334:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12281:43:11"},"nodeType":"YulFunctionCall","src":"12281:72:11"},"nodeType":"YulExpressionStatement","src":"12281:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12407:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12420:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12431:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12416:3:11"},"nodeType":"YulFunctionCall","src":"12416:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12363:43:11"},"nodeType":"YulFunctionCall","src":"12363:72:11"},"nodeType":"YulExpressionStatement","src":"12363:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12489:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12513:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12498:3:11"},"nodeType":"YulFunctionCall","src":"12498:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12445:43:11"},"nodeType":"YulFunctionCall","src":"12445:72:11"},"nodeType":"YulExpressionStatement","src":"12445:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12538:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12549:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12534:3:11"},"nodeType":"YulFunctionCall","src":"12534:19:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12559:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12565:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12555:3:11"},"nodeType":"YulFunctionCall","src":"12555:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12527:6:11"},"nodeType":"YulFunctionCall","src":"12527:49:11"},"nodeType":"YulExpressionStatement","src":"12527:49:11"},{"nodeType":"YulAssignment","src":"12585:84:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12655:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"12664:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12593:61:11"},"nodeType":"YulFunctionCall","src":"12593:76:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12585:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12093:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12105:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12113:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12121:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12129:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12137:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12148:4:11","type":""}],"src":"11925:751:11"},{"body":{"nodeType":"YulBlock","src":"12726:105:11","statements":[{"nodeType":"YulAssignment","src":"12736:89:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12751:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12758:66:11","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12747:3:11"},"nodeType":"YulFunctionCall","src":"12747:78:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12736:7:11"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12708:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12718:7:11","type":""}],"src":"12682:149:11"},{"body":{"nodeType":"YulBlock","src":"12879:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"12935:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12944:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12947:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12937:6:11"},"nodeType":"YulFunctionCall","src":"12937:12:11"},"nodeType":"YulExpressionStatement","src":"12937:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12902:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12926:5:11"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"12909:16:11"},"nodeType":"YulFunctionCall","src":"12909:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12899:2:11"},"nodeType":"YulFunctionCall","src":"12899:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12892:6:11"},"nodeType":"YulFunctionCall","src":"12892:42:11"},"nodeType":"YulIf","src":"12889:62:11"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12872:5:11","type":""}],"src":"12837:120:11"},{"body":{"nodeType":"YulBlock","src":"13025:79:11","statements":[{"nodeType":"YulAssignment","src":"13035:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13050:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13044:5:11"},"nodeType":"YulFunctionCall","src":"13044:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13035:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13092:5:11"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"13066:25:11"},"nodeType":"YulFunctionCall","src":"13066:32:11"},"nodeType":"YulExpressionStatement","src":"13066:32:11"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13003:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"13011:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13019:5:11","type":""}],"src":"12963:141:11"},{"body":{"nodeType":"YulBlock","src":"13186:273:11","statements":[{"body":{"nodeType":"YulBlock","src":"13232:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13234:77:11"},"nodeType":"YulFunctionCall","src":"13234:79:11"},"nodeType":"YulExpressionStatement","src":"13234:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13207:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13216:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13203:3:11"},"nodeType":"YulFunctionCall","src":"13203:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"13228:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13199:3:11"},"nodeType":"YulFunctionCall","src":"13199:32:11"},"nodeType":"YulIf","src":"13196:119:11"},{"nodeType":"YulBlock","src":"13325:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13340:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13354:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13344:6:11","type":""}]},{"nodeType":"YulAssignment","src":"13369:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13414:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"13425:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13410:3:11"},"nodeType":"YulFunctionCall","src":"13410:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13434:7:11"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"13379:30:11"},"nodeType":"YulFunctionCall","src":"13379:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13369:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13156:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13167:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13179:6:11","type":""}],"src":"13110:349:11"},{"body":{"nodeType":"YulBlock","src":"13518:53:11","statements":[{"nodeType":"YulAssignment","src":"13528:36:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13553:3:11","type":"","value":"224"},{"name":"value","nodeType":"YulIdentifier","src":"13558:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13549:3:11"},"nodeType":"YulFunctionCall","src":"13549:15:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13528:8:11"}]}]},"name":"shift_right_224_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13499:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13509:8:11","type":""}],"src":"13465:106:11"},{"body":{"nodeType":"YulBlock","src":"13616:144:11","statements":[{"body":{"nodeType":"YulBlock","src":"13653:101:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13682:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13685:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13688:1:11","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13667:14:11"},"nodeType":"YulFunctionCall","src":"13667:23:11"},"nodeType":"YulExpressionStatement","src":"13667:23:11"},{"nodeType":"YulAssignment","src":"13703:41:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13741:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13735:5:11"},"nodeType":"YulFunctionCall","src":"13735:8:11"}],"functionName":{"name":"shift_right_224_unsigned","nodeType":"YulIdentifier","src":"13710:24:11"},"nodeType":"YulFunctionCall","src":"13710:34:11"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"13703:3:11"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13632:14:11"},"nodeType":"YulFunctionCall","src":"13632:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"13650:1:11","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13629:2:11"},"nodeType":"YulFunctionCall","src":"13629:23:11"},"nodeType":"YulIf","src":"13626:128:11"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"13612:3:11","type":""}],"src":"13577:183:11"},{"body":{"nodeType":"YulBlock","src":"13809:668:11","statements":[{"body":{"nodeType":"YulBlock","src":"13849:9:11","statements":[{"nodeType":"YulLeave","src":"13851:5:11"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13825:14:11"},"nodeType":"YulFunctionCall","src":"13825:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"13843:4:11","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13822:2:11"},"nodeType":"YulFunctionCall","src":"13822:26:11"},"nodeType":"YulIf","src":"13819:39:11"},{"nodeType":"YulVariableDeclaration","src":"13868:32:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"13880:18:11"},"nodeType":"YulFunctionCall","src":"13880:20:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13872:4:11","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13924:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"13930:1:11","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13937:14:11"},"nodeType":"YulFunctionCall","src":"13937:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"13955:1:11","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13933:3:11"},"nodeType":"YulFunctionCall","src":"13933:24:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13909:14:11"},"nodeType":"YulFunctionCall","src":"13909:49:11"},"nodeType":"YulExpressionStatement","src":"13909:49:11"},{"nodeType":"YulVariableDeclaration","src":"13968:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13988:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13982:5:11"},"nodeType":"YulFunctionCall","src":"13982:11:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13972:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"14119:29:11","statements":[{"nodeType":"YulLeave","src":"14133:5:11"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14024:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14032:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14021:2:11"},"nodeType":"YulFunctionCall","src":"14021:30:11"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14072:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14080:4:11","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14068:3:11"},"nodeType":"YulFunctionCall","src":"14068:17:11"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14087:14:11"},"nodeType":"YulFunctionCall","src":"14087:16:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14065:2:11"},"nodeType":"YulFunctionCall","src":"14065:39:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14005:2:11"},"nodeType":"YulFunctionCall","src":"14005:113:11"},"nodeType":"YulIf","src":"14002:146:11"},{"nodeType":"YulVariableDeclaration","src":"14158:28:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14173:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"14179:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14169:3:11"},"nodeType":"YulFunctionCall","src":"14169:17:11"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"14162:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14195:24:11","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14215:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14209:5:11"},"nodeType":"YulFunctionCall","src":"14209:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14199:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"14262:9:11","statements":[{"nodeType":"YulLeave","src":"14264:5:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14234:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14242:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14231:2:11"},"nodeType":"YulFunctionCall","src":"14231:30:11"},"nodeType":"YulIf","src":"14228:43:11"},{"nodeType":"YulVariableDeclaration","src":"14281:38:11","value":{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14300:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14305:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14296:3:11"},"nodeType":"YulFunctionCall","src":"14296:14:11"},{"name":"length","nodeType":"YulIdentifier","src":"14312:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:11"},"nodeType":"YulFunctionCall","src":"14292:27:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"14285:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"14376:9:11","statements":[{"nodeType":"YulLeave","src":"14378:5:11"}]},"condition":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"14334:3:11"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14343:4:11"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14353:14:11"},"nodeType":"YulFunctionCall","src":"14353:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"14371:1:11","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14349:3:11"},"nodeType":"YulFunctionCall","src":"14349:24:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14339:3:11"},"nodeType":"YulFunctionCall","src":"14339:35:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14331:2:11"},"nodeType":"YulFunctionCall","src":"14331:44:11"},"nodeType":"YulIf","src":"14328:57:11"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14415:4:11"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14425:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14437:4:11","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"14443:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14433:3:11"},"nodeType":"YulFunctionCall","src":"14433:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14421:3:11"},"nodeType":"YulFunctionCall","src":"14421:30:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14395:19:11"},"nodeType":"YulFunctionCall","src":"14395:57:11"},"nodeType":"YulExpressionStatement","src":"14395:57:11"},{"nodeType":"YulAssignment","src":"14461:10:11","value":{"name":"msg","nodeType":"YulIdentifier","src":"14468:3:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14461:3:11"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13805:3:11","type":""}],"src":"13766:711:11"},{"body":{"nodeType":"YulBlock","src":"14575:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14585:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14632:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14599:32:11"},"nodeType":"YulFunctionCall","src":"14599:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14589:6:11","type":""}]},{"nodeType":"YulAssignment","src":"14647:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14713:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"14718:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14654:58:11"},"nodeType":"YulFunctionCall","src":"14654:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14647:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14773:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14780:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14769:3:11"},"nodeType":"YulFunctionCall","src":"14769:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"14787:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"14792:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14734:34:11"},"nodeType":"YulFunctionCall","src":"14734:65:11"},"nodeType":"YulExpressionStatement","src":"14734:65:11"},{"nodeType":"YulAssignment","src":"14808:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14819:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14846:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14824:21:11"},"nodeType":"YulFunctionCall","src":"14824:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14815:3:11"},"nodeType":"YulFunctionCall","src":"14815:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14808:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14556:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14563:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14571:3:11","type":""}],"src":"14483:377:11"},{"body":{"nodeType":"YulBlock","src":"14984:195:11","statements":[{"nodeType":"YulAssignment","src":"14994:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15006:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15017:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15002:3:11"},"nodeType":"YulFunctionCall","src":"15002:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14994:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15041:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15052:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15037:3:11"},"nodeType":"YulFunctionCall","src":"15037:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15060:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15066:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15056:3:11"},"nodeType":"YulFunctionCall","src":"15056:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15030:6:11"},"nodeType":"YulFunctionCall","src":"15030:47:11"},"nodeType":"YulExpressionStatement","src":"15030:47:11"},{"nodeType":"YulAssignment","src":"15086:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15158:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"15167:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15094:63:11"},"nodeType":"YulFunctionCall","src":"15094:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15086:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14956:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14968:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14979:4:11","type":""}],"src":"14866:313:11"},{"body":{"nodeType":"YulBlock","src":"15291:133:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15313:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15321:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15309:3:11"},"nodeType":"YulFunctionCall","src":"15309:14:11"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535","kind":"string","nodeType":"YulLiteral","src":"15325:34:11","type":"","value":"ERC1155: transfer to non ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15302:6:11"},"nodeType":"YulFunctionCall","src":"15302:58:11"},"nodeType":"YulExpressionStatement","src":"15302:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15381:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15389:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15377:3:11"},"nodeType":"YulFunctionCall","src":"15377:15:11"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"15394:22:11","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15370:6:11"},"nodeType":"YulFunctionCall","src":"15370:47:11"},"nodeType":"YulExpressionStatement","src":"15370:47:11"}]},"name":"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15283:6:11","type":""}],"src":"15185:239:11"},{"body":{"nodeType":"YulBlock","src":"15576:220:11","statements":[{"nodeType":"YulAssignment","src":"15586:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15652:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15657:2:11","type":"","value":"52"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15593:58:11"},"nodeType":"YulFunctionCall","src":"15593:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15586:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15758:3:11"}],"functionName":{"name":"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","nodeType":"YulIdentifier","src":"15669:88:11"},"nodeType":"YulFunctionCall","src":"15669:93:11"},"nodeType":"YulExpressionStatement","src":"15669:93:11"},{"nodeType":"YulAssignment","src":"15771:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15782:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15787:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15778:3:11"},"nodeType":"YulFunctionCall","src":"15778:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15771:3:11"}]}]},"name":"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15564:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15572:3:11","type":""}],"src":"15430:366:11"},{"body":{"nodeType":"YulBlock","src":"15973:248:11","statements":[{"nodeType":"YulAssignment","src":"15983:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15995:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16006:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15991:3:11"},"nodeType":"YulFunctionCall","src":"15991:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15983:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16030:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16041:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16026:3:11"},"nodeType":"YulFunctionCall","src":"16026:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16049:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16055:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16045:3:11"},"nodeType":"YulFunctionCall","src":"16045:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16019:6:11"},"nodeType":"YulFunctionCall","src":"16019:47:11"},"nodeType":"YulExpressionStatement","src":"16019:47:11"},{"nodeType":"YulAssignment","src":"16075:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16209:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16083:124:11"},"nodeType":"YulFunctionCall","src":"16083:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16075:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15953:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15968:4:11","type":""}],"src":"15802:419:11"},{"body":{"nodeType":"YulBlock","src":"16333:121:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16355:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16363:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16351:3:11"},"nodeType":"YulFunctionCall","src":"16351:14:11"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"16367:34:11","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16344:6:11"},"nodeType":"YulFunctionCall","src":"16344:58:11"},"nodeType":"YulExpressionStatement","src":"16344:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16423:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16431:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16419:3:11"},"nodeType":"YulFunctionCall","src":"16419:15:11"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"16436:10:11","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16412:6:11"},"nodeType":"YulFunctionCall","src":"16412:35:11"},"nodeType":"YulExpressionStatement","src":"16412:35:11"}]},"name":"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16325:6:11","type":""}],"src":"16227:227:11"},{"body":{"nodeType":"YulBlock","src":"16606:220:11","statements":[{"nodeType":"YulAssignment","src":"16616:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16682:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16687:2:11","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16623:58:11"},"nodeType":"YulFunctionCall","src":"16623:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16616:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16788:3:11"}],"functionName":{"name":"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","nodeType":"YulIdentifier","src":"16699:88:11"},"nodeType":"YulFunctionCall","src":"16699:93:11"},"nodeType":"YulExpressionStatement","src":"16699:93:11"},{"nodeType":"YulAssignment","src":"16801:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16812:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16817:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16808:3:11"},"nodeType":"YulFunctionCall","src":"16808:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16801:3:11"}]}]},"name":"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16594:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16602:3:11","type":""}],"src":"16460:366:11"},{"body":{"nodeType":"YulBlock","src":"17003:248:11","statements":[{"nodeType":"YulAssignment","src":"17013:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17025:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17036:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17021:3:11"},"nodeType":"YulFunctionCall","src":"17021:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17013:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17060:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17071:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17056:3:11"},"nodeType":"YulFunctionCall","src":"17056:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17079:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17085:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17075:3:11"},"nodeType":"YulFunctionCall","src":"17075:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17049:6:11"},"nodeType":"YulFunctionCall","src":"17049:47:11"},"nodeType":"YulExpressionStatement","src":"17049:47:11"},{"nodeType":"YulAssignment","src":"17105:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17239:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17113:124:11"},"nodeType":"YulFunctionCall","src":"17113:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17105:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16983:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16998:4:11","type":""}],"src":"16832:419:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: mint to the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040518060400160405280601481526020017f42617369632049736c616e642047656e65736973000000000000000000000000815250600690816200004a91906200093d565b506040518060400160405280600481526020017f4445534300000000000000000000000000000000000000000000000000000000815250600790816200009191906200093d565b50680d8d726b7177a80000600955348015620000ac57600080fd5b50604051620047a1380380620047a18339818101604052810190620000d2919062000bed565b81620000e4816200014c60201b60201c565b5062000105620000f96200016160201b60201c565b6200016960201b60201c565b81600490816200011691906200093d565b506200013c816001600a604051806020016040528060008152506200022f60201b60201c565b600a600881905550505062001196565b80600290816200015d91906200093d565b5050565b600033905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603620002a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002989062000cda565b60405180910390fd5b6000620002b36200016160201b60201c565b90506000620002c8856200041660201b60201c565b90506000620002dd856200041660201b60201c565b9050620002f6836000898585896200049760201b60201c565b8460008088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000357919062000d2b565b925050819055508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628989604051620003d792919062000d77565b60405180910390a4620003f6836000898585896200049f60201b60201c565b6200040d83600089898989620004a760201b60201c565b50505050505050565b60606000600167ffffffffffffffff811115620004385762000437620006ce565b5b604051908082528060200260200182016040528015620004675781602001602082028036833780820191505090505b509050828160008151811062000482576200048162000da4565b5b60200260200101818152505080915050919050565b505050505050565b505050505050565b620004d38473ffffffffffffffffffffffffffffffffffffffff16620006a060201b62000fa61760201c565b1562000698578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016200051c95949392919062000e41565b6020604051808303816000875af19250505080156200055b57506040513d601f19601f8201168201806040525081019062000558919062000f02565b60015b6200060c576200056a62000f41565b806308c379a003620005cd57506200058162000f66565b806200058e5750620005cf565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005c4919062001042565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200060390620010dc565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462000696576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200068d9062001174565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200074557607f821691505b6020821081036200075b576200075a620006fd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007c57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000786565b620007d1868362000786565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200081e620008186200081284620007e9565b620007f3565b620007e9565b9050919050565b6000819050919050565b6200083a83620007fd565b62000852620008498262000825565b84845462000793565b825550505050565b600090565b620008696200085a565b620008768184846200082f565b505050565b5b818110156200089e57620008926000826200085f565b6001810190506200087c565b5050565b601f821115620008ed57620008b78162000761565b620008c28462000776565b81016020851015620008d2578190505b620008ea620008e18562000776565b8301826200087b565b50505b505050565b600082821c905092915050565b60006200091260001984600802620008f2565b1980831691505092915050565b60006200092d8383620008ff565b9150826002028217905092915050565b6200094882620006c3565b67ffffffffffffffff811115620009645762000963620006ce565b5b6200097082546200072c565b6200097d828285620008a2565b600060209050601f831160018114620009b55760008415620009a0578287015190505b620009ac85826200091f565b86555062000a1c565b601f198416620009c58662000761565b60005b82811015620009ef57848901518255600182019150602085019450602081019050620009c8565b8683101562000a0f578489015162000a0b601f891682620008ff565b8355505b6001600288020188555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b62000a5e8262000a42565b810181811067ffffffffffffffff8211171562000a805762000a7f620006ce565b5b80604052505050565b600062000a9562000a24565b905062000aa3828262000a53565b919050565b600067ffffffffffffffff82111562000ac65762000ac5620006ce565b5b62000ad18262000a42565b9050602081019050919050565b60005b8381101562000afe57808201518184015260208101905062000ae1565b60008484015250505050565b600062000b2162000b1b8462000aa8565b62000a89565b90508281526020810184848401111562000b405762000b3f62000a3d565b5b62000b4d84828562000ade565b509392505050565b600082601f83011262000b6d5762000b6c62000a38565b5b815162000b7f84826020860162000b0a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000bb58262000b88565b9050919050565b62000bc78162000ba8565b811462000bd357600080fd5b50565b60008151905062000be78162000bbc565b92915050565b6000806040838503121562000c075762000c0662000a2e565b5b600083015167ffffffffffffffff81111562000c285762000c2762000a33565b5b62000c368582860162000b55565b925050602062000c498582860162000bd6565b9150509250929050565b600082825260208201905092915050565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600062000cc260218362000c53565b915062000ccf8262000c64565b604082019050919050565b6000602082019050818103600083015262000cf58162000cb3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000d3882620007e9565b915062000d4583620007e9565b925082820190508082111562000d605762000d5f62000cfc565b5b92915050565b62000d7181620007e9565b82525050565b600060408201905062000d8e600083018562000d66565b62000d9d602083018462000d66565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b62000dde8162000ba8565b82525050565b600081519050919050565b600082825260208201905092915050565b600062000e0d8262000de4565b62000e19818562000def565b935062000e2b81856020860162000ade565b62000e368162000a42565b840191505092915050565b600060a08201905062000e58600083018862000dd3565b62000e67602083018762000dd3565b62000e76604083018662000d66565b62000e85606083018562000d66565b818103608083015262000e99818462000e00565b90509695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b62000edc8162000ea5565b811462000ee857600080fd5b50565b60008151905062000efc8162000ed1565b92915050565b60006020828403121562000f1b5762000f1a62000a2e565b5b600062000f2b8482850162000eeb565b91505092915050565b60008160e01c9050919050565b600060033d111562000f635760046000803e62000f6060005162000f34565b90505b90565b600060443d1062000ffe5762000f7b62000a24565b60043d036004823e80513d602482011167ffffffffffffffff8211171562000fa557505062000ffe565b808201805167ffffffffffffffff81111562000fc5575050505062000ffe565b80602083010160043d03850181111562000fe457505050505062000ffe565b62000ff58260200185018662000a53565b82955050505050505b90565b60006200100e82620006c3565b6200101a818562000c53565b93506200102c81856020860162000ade565b620010378162000a42565b840191505092915050565b600060208201905081810360008301526200105e818462001001565b905092915050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b6000620010c460348362000c53565b9150620010d18262001066565b604082019050919050565b60006020820190508181036000830152620010f781620010b5565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b60006200115c60288362000c53565b91506200116982620010fe565b604082019050919050565b600060208201905081810360008301526200118f816200114d565b9050919050565b6135fb80620011a66000396000f3fe6080604052600436106101295760003560e01c80634e1273f4116100ab578063a22cb4651161006f578063a22cb465146103e6578063d3dd5fe01461040f578063d4e9329214610426578063e985e9c51461043d578063f242432a1461047a578063f2fde38b146104a357610129565b80634e1273f414610320578063715018a61461035d5780638da5cb5b1461037457806395d89b411461039f578063a0712d68146103ca57610129565b80630e89341c116100f25780630e89341c146102295780631865c57d146102665780632eb2c2d6146102915780633fd17366146102ba578063438a67e7146102e357610129565b8062fdd58e1461012e57806301ffc9a71461016b57806301ffeaa4146101a85780630387da42146101d357806306fdde03146101fe575b600080fd5b34801561013a57600080fd5b5061015560048036038101906101509190612097565b6104cc565b60405161016291906120e6565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190612159565b610594565b60405161019f91906121a1565b60405180910390f35b3480156101b457600080fd5b506101bd610676565b6040516101ca91906120e6565b60405180910390f35b3480156101df57600080fd5b506101e8610680565b6040516101f591906120e6565b60405180910390f35b34801561020a57600080fd5b50610213610686565b604051610220919061224c565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b919061226e565b610714565b60405161025d919061224c565b60405180910390f35b34801561027257600080fd5b5061027b610782565b60405161028891906121a1565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190612498565b610799565b005b3480156102c657600080fd5b506102e160048036038101906102dc919061226e565b61083a565b005b3480156102ef57600080fd5b5061030a60048036038101906103059190612567565b61084c565b60405161031791906120e6565b60405180910390f35b34801561032c57600080fd5b5061034760048036038101906103429190612657565b610895565b604051610354919061278d565b60405180910390f35b34801561036957600080fd5b506103726109ae565b005b34801561038057600080fd5b506103896109c2565b60405161039691906127be565b60405180910390f35b3480156103ab57600080fd5b506103b46109ec565b6040516103c1919061224c565b60405180910390f35b6103e460048036038101906103df919061226e565b610a7a565b005b3480156103f257600080fd5b5061040d60048036038101906104089190612805565b610cca565b005b34801561041b57600080fd5b50610424610ce0565b005b34801561043257600080fd5b5061043b610d3a565b005b34801561044957600080fd5b50610464600480360381019061045f9190612845565b610dee565b60405161047191906121a1565b60405180910390f35b34801561048657600080fd5b506104a1600480360381019061049c9190612885565b610e82565b005b3480156104af57600080fd5b506104ca60048036038101906104c59190612567565b610f23565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361053c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105339061298e565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061065f57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061066f575061066e82610fc9565b5b9050919050565b6000600854905090565b60095481565b60068054610693906129dd565b80601f01602080910402602001604051908101604052809291908181526020018280546106bf906129dd565b801561070c5780601f106106e15761010080835404028352916020019161070c565b820191906000526020600020905b8154815290600101906020018083116106ef57829003601f168201915b505050505081565b606060018214610750576040517fceea21b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600461075b83611033565b60405160200161076c929190612ae2565b6040516020818303038152906040529050919050565b6000600560009054906101000a900460ff16905090565b6107a1611193565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806107e757506107e6856107e1611193565b610dee565b5b610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d90612b78565b60405180910390fd5b610833858585858561119b565b5050505050565b6108426114bc565b8060098190555050565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606081518351146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d290612c0a565b60405180910390fd5b6000835167ffffffffffffffff8111156108f8576108f76122a0565b5b6040519080825280602002602001820160405280156109265781602001602082028036833780820191505090505b50905060005b84518110156109a35761097385828151811061094b5761094a612c2a565b5b602002602001015185838151811061096657610965612c2a565b5b60200260200101516104cc565b82828151811061098657610985612c2a565b5b6020026020010181815250508061099c90612c88565b905061092c565b508091505092915050565b6109b66114bc565b6109c0600061153a565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600780546109f9906129dd565b80601f0160208091040260200160405190810160405280929190818152602001828054610a25906129dd565b8015610a725780601f10610a4757610100808354040283529160200191610a72565b820191906000526020600020905b815481529060010190602001808311610a5557829003601f168201915b505050505081565b80600560009054906101000a900460ff16610ac1576040517f914edb0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600954610acf9190612cd0565b341015610b08576040517f36c64b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600281600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b559190612d12565b1115610b8d576040517fddefae2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f481600854610b9e9190612d12565b1115610bd6576040517f846fb9e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c3b576040517f21bd401700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8a9190612d12565b925050819055508160086000828254610ca39190612d12565b92505081905550610cc63360018460405180602001604052806000815250611600565b5050565b610cdc610cd5611193565b83836117b0565b5050565b610ce86114bc565b600560009054906101000a900460ff1615610d1c576000600560006101000a81548160ff0219169083151502179055610d37565b6001600560006101000a81548160ff02191690831515021790555b50565b610d426114bc565b600047905060003373ffffffffffffffffffffffffffffffffffffffff1682604051610d6d90612d77565b60006040518083038185875af1925050503d8060008114610daa576040519150601f19603f3d011682016040523d82523d6000602084013e610daf565b606091505b5050905080610dea576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610e8a611193565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610ed05750610ecf85610eca611193565b610dee565b5b610f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0690612b78565b60405180910390fd5b610f1c858585858561191c565b5050505050565b610f2b6114bc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9190612dfe565b60405180910390fd5b610fa38161153a565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000820361107a576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061118e565b600082905060005b600082146110ac57808061109590612c88565b915050600a826110a59190612e4d565b9150611082565b60008167ffffffffffffffff8111156110c8576110c76122a0565b5b6040519080825280601f01601f1916602001820160405280156110fa5781602001600182028036833780820191505090505b5090505b60008514611187576001826111139190612e7e565b9150600a856111229190612eb2565b603061112e9190612d12565b60f81b81838151811061114457611143612c2a565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856111809190612e4d565b94506110fe565b8093505050505b919050565b600033905090565b81518351146111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d690612f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361124e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124590612fe7565b60405180910390fd5b6000611258611193565b9050611268818787878787611bb7565b60005b845181101561141957600085828151811061128957611288612c2a565b5b6020026020010151905060008583815181106112a8576112a7612c2a565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134090613079565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113fe9190612d12565b925050819055505050508061141290612c88565b905061126b565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611490929190613099565b60405180910390a46114a6818787878787611bbf565b6114b4818787878787611bc7565b505050505050565b6114c4611193565b73ffffffffffffffffffffffffffffffffffffffff166114e26109c2565b73ffffffffffffffffffffffffffffffffffffffff1614611538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152f9061311c565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361166f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611666906131ae565b60405180910390fd5b6000611679611193565b9050600061168685611d9e565b9050600061169385611d9e565b90506116a483600089858589611bb7565b8460008088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117039190612d12565b925050819055508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6289896040516117819291906131ce565b60405180910390a461179883600089858589611bbf565b6117a783600089898989611e18565b50505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181590613269565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161190f91906121a1565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361198b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198290612fe7565b60405180910390fd5b6000611995611193565b905060006119a285611d9e565b905060006119af85611d9e565b90506119bf838989858589611bb7565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015611a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4d90613079565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b0b9190612d12565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051611b889291906131ce565b60405180910390a4611b9e848a8a86868a611bbf565b611bac848a8a8a8a8a611e18565b505050505050505050565b505050505050565b505050505050565b611be68473ffffffffffffffffffffffffffffffffffffffff16610fa6565b15611d96578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611c2c9594939291906132de565b6020604051808303816000875af1925050508015611c6857506040513d601f19601f82011682018060405250810190611c65919061335b565b60015b611d0d57611c74613395565b806308c379a003611cd05750611c886133b7565b80611c935750611cd2565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc7919061224c565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d04906134b9565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8b9061354b565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff811115611dbd57611dbc6122a0565b5b604051908082528060200260200182016040528015611deb5781602001602082028036833780820191505090505b5090508281600081518110611e0357611e02612c2a565b5b60200260200101818152505080915050919050565b611e378473ffffffffffffffffffffffffffffffffffffffff16610fa6565b15611fe7578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611e7d95949392919061356b565b6020604051808303816000875af1925050508015611eb957506040513d601f19601f82011682018060405250810190611eb6919061335b565b60015b611f5e57611ec5613395565b806308c379a003611f215750611ed96133b7565b80611ee45750611f23565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f18919061224c565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f55906134b9565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdc9061354b565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061202e82612003565b9050919050565b61203e81612023565b811461204957600080fd5b50565b60008135905061205b81612035565b92915050565b6000819050919050565b61207481612061565b811461207f57600080fd5b50565b6000813590506120918161206b565b92915050565b600080604083850312156120ae576120ad611ff9565b5b60006120bc8582860161204c565b92505060206120cd85828601612082565b9150509250929050565b6120e081612061565b82525050565b60006020820190506120fb60008301846120d7565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61213681612101565b811461214157600080fd5b50565b6000813590506121538161212d565b92915050565b60006020828403121561216f5761216e611ff9565b5b600061217d84828501612144565b91505092915050565b60008115159050919050565b61219b81612186565b82525050565b60006020820190506121b66000830184612192565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156121f65780820151818401526020810190506121db565b60008484015250505050565b6000601f19601f8301169050919050565b600061221e826121bc565b61222881856121c7565b93506122388185602086016121d8565b61224181612202565b840191505092915050565b600060208201905081810360008301526122668184612213565b905092915050565b60006020828403121561228457612283611ff9565b5b600061229284828501612082565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6122d882612202565b810181811067ffffffffffffffff821117156122f7576122f66122a0565b5b80604052505050565b600061230a611fef565b905061231682826122cf565b919050565b600067ffffffffffffffff821115612336576123356122a0565b5b602082029050602081019050919050565b600080fd5b600061235f61235a8461231b565b612300565b9050808382526020820190506020840283018581111561238257612381612347565b5b835b818110156123ab57806123978882612082565b845260208401935050602081019050612384565b5050509392505050565b600082601f8301126123ca576123c961229b565b5b81356123da84826020860161234c565b91505092915050565b600080fd5b600067ffffffffffffffff821115612403576124026122a0565b5b61240c82612202565b9050602081019050919050565b82818337600083830152505050565b600061243b612436846123e8565b612300565b905082815260208101848484011115612457576124566123e3565b5b612462848285612419565b509392505050565b600082601f83011261247f5761247e61229b565b5b813561248f848260208601612428565b91505092915050565b600080600080600060a086880312156124b4576124b3611ff9565b5b60006124c28882890161204c565b95505060206124d38882890161204c565b945050604086013567ffffffffffffffff8111156124f4576124f3611ffe565b5b612500888289016123b5565b935050606086013567ffffffffffffffff81111561252157612520611ffe565b5b61252d888289016123b5565b925050608086013567ffffffffffffffff81111561254e5761254d611ffe565b5b61255a8882890161246a565b9150509295509295909350565b60006020828403121561257d5761257c611ff9565b5b600061258b8482850161204c565b91505092915050565b600067ffffffffffffffff8211156125af576125ae6122a0565b5b602082029050602081019050919050565b60006125d36125ce84612594565b612300565b905080838252602082019050602084028301858111156125f6576125f5612347565b5b835b8181101561261f578061260b888261204c565b8452602084019350506020810190506125f8565b5050509392505050565b600082601f83011261263e5761263d61229b565b5b813561264e8482602086016125c0565b91505092915050565b6000806040838503121561266e5761266d611ff9565b5b600083013567ffffffffffffffff81111561268c5761268b611ffe565b5b61269885828601612629565b925050602083013567ffffffffffffffff8111156126b9576126b8611ffe565b5b6126c5858286016123b5565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61270481612061565b82525050565b600061271683836126fb565b60208301905092915050565b6000602082019050919050565b600061273a826126cf565b61274481856126da565b935061274f836126eb565b8060005b83811015612780578151612767888261270a565b975061277283612722565b925050600181019050612753565b5085935050505092915050565b600060208201905081810360008301526127a7818461272f565b905092915050565b6127b881612023565b82525050565b60006020820190506127d360008301846127af565b92915050565b6127e281612186565b81146127ed57600080fd5b50565b6000813590506127ff816127d9565b92915050565b6000806040838503121561281c5761281b611ff9565b5b600061282a8582860161204c565b925050602061283b858286016127f0565b9150509250929050565b6000806040838503121561285c5761285b611ff9565b5b600061286a8582860161204c565b925050602061287b8582860161204c565b9150509250929050565b600080600080600060a086880312156128a1576128a0611ff9565b5b60006128af8882890161204c565b95505060206128c08882890161204c565b94505060406128d188828901612082565b93505060606128e288828901612082565b925050608086013567ffffffffffffffff81111561290357612902611ffe565b5b61290f8882890161246a565b9150509295509295909350565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000612978602a836121c7565b91506129838261291c565b604082019050919050565b600060208201905081810360008301526129a78161296b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129f557607f821691505b602082108103612a0857612a076129ae565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612a3b816129dd565b612a458186612a0e565b94506001821660008114612a605760018114612a7557612aa8565b60ff1983168652811515820286019350612aa8565b612a7e85612a19565b60005b83811015612aa057815481890152600182019150602081019050612a81565b838801955050505b50505092915050565b6000612abc826121bc565b612ac68185612a0e565b9350612ad68185602086016121d8565b80840191505092915050565b6000612aee8285612a2e565b9150612afa8284612ab1565b91508190509392505050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b6000612b62602f836121c7565b9150612b6d82612b06565b604082019050919050565b60006020820190508181036000830152612b9181612b55565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000612bf46029836121c7565b9150612bff82612b98565b604082019050919050565b60006020820190508181036000830152612c2381612be7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c9382612061565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cc557612cc4612c59565b5b600182019050919050565b6000612cdb82612061565b9150612ce683612061565b9250828202612cf481612061565b91508282048414831517612d0b57612d0a612c59565b5b5092915050565b6000612d1d82612061565b9150612d2883612061565b9250828201905080821115612d4057612d3f612c59565b5b92915050565b600081905092915050565b50565b6000612d61600083612d46565b9150612d6c82612d51565b600082019050919050565b6000612d8282612d54565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612de86026836121c7565b9150612df382612d8c565b604082019050919050565b60006020820190508181036000830152612e1781612ddb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612e5882612061565b9150612e6383612061565b925082612e7357612e72612e1e565b5b828204905092915050565b6000612e8982612061565b9150612e9483612061565b9250828203905081811115612eac57612eab612c59565b5b92915050565b6000612ebd82612061565b9150612ec883612061565b925082612ed857612ed7612e1e565b5b828206905092915050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000612f3f6028836121c7565b9150612f4a82612ee3565b604082019050919050565b60006020820190508181036000830152612f6e81612f32565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612fd16025836121c7565b9150612fdc82612f75565b604082019050919050565b6000602082019050818103600083015261300081612fc4565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b6000613063602a836121c7565b915061306e82613007565b604082019050919050565b6000602082019050818103600083015261309281613056565b9050919050565b600060408201905081810360008301526130b3818561272f565b905081810360208301526130c7818461272f565b90509392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006131066020836121c7565b9150613111826130d0565b602082019050919050565b60006020820190508181036000830152613135816130f9565b9050919050565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006131986021836121c7565b91506131a38261313c565b604082019050919050565b600060208201905081810360008301526131c78161318b565b9050919050565b60006040820190506131e360008301856120d7565b6131f060208301846120d7565b9392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b60006132536029836121c7565b915061325e826131f7565b604082019050919050565b6000602082019050818103600083015261328281613246565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006132b082613289565b6132ba8185613294565b93506132ca8185602086016121d8565b6132d381612202565b840191505092915050565b600060a0820190506132f360008301886127af565b61330060208301876127af565b8181036040830152613312818661272f565b90508181036060830152613326818561272f565b9050818103608083015261333a81846132a5565b90509695505050505050565b6000815190506133558161212d565b92915050565b60006020828403121561337157613370611ff9565b5b600061337f84828501613346565b91505092915050565b60008160e01c9050919050565b600060033d11156133b45760046000803e6133b1600051613388565b90505b90565b600060443d10613444576133c9611fef565b60043d036004823e80513d602482011167ffffffffffffffff821117156133f1575050613444565b808201805167ffffffffffffffff81111561340f5750505050613444565b80602083010160043d03850181111561342c575050505050613444565b61343b826020018501866122cf565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b60006134a36034836121c7565b91506134ae82613447565b604082019050919050565b600060208201905081810360008301526134d281613496565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b60006135356028836121c7565b9150613540826134d9565b604082019050919050565b6000602082019050818103600083015261356481613528565b9050919050565b600060a08201905061358060008301886127af565b61358d60208301876127af565b61359a60408301866120d7565b6135a760608301856120d7565b81810360808301526135b981846132a5565b9050969550505050505056fea2646970667358221220ada8e26f22f1a1afd7e42c1f2b0f57bdd3ba54dbf063ec14cfcc48589440a80164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42617369632049736C616E642047656E65736973000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x93D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4445534300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x7 SWAP1 DUP2 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0x93D JUMP JUMPDEST POP PUSH9 0xD8D726B7177A80000 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x47A1 CODESIZE SUB DUP1 PUSH3 0x47A1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xD2 SWAP2 SWAP1 PUSH3 0xBED JUMP JUMPDEST DUP2 PUSH3 0xE4 DUP2 PUSH3 0x14C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x105 PUSH3 0xF9 PUSH3 0x161 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x169 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x116 SWAP2 SWAP1 PUSH3 0x93D JUMP JUMPDEST POP PUSH3 0x13C DUP2 PUSH1 0x1 PUSH1 0xA PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x22F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x1196 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x15D SWAP2 SWAP1 PUSH3 0x93D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x298 SWAP1 PUSH3 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2B3 PUSH3 0x161 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2C8 DUP6 PUSH3 0x416 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2DD DUP6 PUSH3 0x416 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x2F6 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH3 0x497 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x357 SWAP2 SWAP1 PUSH3 0xD2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH3 0x3D7 SWAP3 SWAP2 SWAP1 PUSH3 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x3F6 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH3 0x49F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x40D DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH3 0x4A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x438 JUMPI PUSH3 0x437 PUSH3 0x6CE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x467 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x482 JUMPI PUSH3 0x481 PUSH3 0xDA4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x4D3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x6A0 PUSH1 0x20 SHL PUSH3 0xFA6 OR PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x698 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x51C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xE41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x55B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x558 SWAP2 SWAP1 PUSH3 0xF02 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x60C JUMPI PUSH3 0x56A PUSH3 0xF41 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH3 0x5CD JUMPI POP PUSH3 0x581 PUSH3 0xF66 JUMP JUMPDEST DUP1 PUSH3 0x58E JUMPI POP PUSH3 0x5CF JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5C4 SWAP2 SWAP1 PUSH3 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x603 SWAP1 PUSH3 0x10DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x696 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x68D SWAP1 PUSH3 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x745 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x75B JUMPI PUSH3 0x75A PUSH3 0x6FD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x7C5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x786 JUMP JUMPDEST PUSH3 0x7D1 DUP7 DUP4 PUSH3 0x786 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x81E PUSH3 0x818 PUSH3 0x812 DUP5 PUSH3 0x7E9 JUMP JUMPDEST PUSH3 0x7F3 JUMP JUMPDEST PUSH3 0x7E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x83A DUP4 PUSH3 0x7FD JUMP JUMPDEST PUSH3 0x852 PUSH3 0x849 DUP3 PUSH3 0x825 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x793 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x869 PUSH3 0x85A JUMP JUMPDEST PUSH3 0x876 DUP2 DUP5 DUP5 PUSH3 0x82F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x89E JUMPI PUSH3 0x892 PUSH1 0x0 DUP3 PUSH3 0x85F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x87C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x8ED JUMPI PUSH3 0x8B7 DUP2 PUSH3 0x761 JUMP JUMPDEST PUSH3 0x8C2 DUP5 PUSH3 0x776 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8D2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x8EA PUSH3 0x8E1 DUP6 PUSH3 0x776 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x87B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x912 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x8F2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x92D DUP4 DUP4 PUSH3 0x8FF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x948 DUP3 PUSH3 0x6C3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x964 JUMPI PUSH3 0x963 PUSH3 0x6CE JUMP JUMPDEST JUMPDEST PUSH3 0x970 DUP3 SLOAD PUSH3 0x72C JUMP JUMPDEST PUSH3 0x97D DUP3 DUP3 DUP6 PUSH3 0x8A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x9B5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x9A0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x9AC DUP6 DUP3 PUSH3 0x91F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA1C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9C5 DUP7 PUSH3 0x761 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x9EF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9C8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xA0F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xA0B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x8FF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA5E DUP3 PUSH3 0xA42 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xA80 JUMPI PUSH3 0xA7F PUSH3 0x6CE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA95 PUSH3 0xA24 JUMP JUMPDEST SWAP1 POP PUSH3 0xAA3 DUP3 DUP3 PUSH3 0xA53 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xAC6 JUMPI PUSH3 0xAC5 PUSH3 0x6CE JUMP JUMPDEST JUMPDEST PUSH3 0xAD1 DUP3 PUSH3 0xA42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xAFE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAE1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB21 PUSH3 0xB1B DUP5 PUSH3 0xAA8 JUMP JUMPDEST PUSH3 0xA89 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0xB40 JUMPI PUSH3 0xB3F PUSH3 0xA3D JUMP JUMPDEST JUMPDEST PUSH3 0xB4D DUP5 DUP3 DUP6 PUSH3 0xADE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xB6D JUMPI PUSH3 0xB6C PUSH3 0xA38 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0xB7F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0xB0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBB5 DUP3 PUSH3 0xB88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBC7 DUP2 PUSH3 0xBA8 JUMP JUMPDEST DUP2 EQ PUSH3 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xBE7 DUP2 PUSH3 0xBBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xC07 JUMPI PUSH3 0xC06 PUSH3 0xA2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xC28 JUMPI PUSH3 0xC27 PUSH3 0xA33 JUMP JUMPDEST JUMPDEST PUSH3 0xC36 DUP6 DUP3 DUP7 ADD PUSH3 0xB55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xC49 DUP6 DUP3 DUP7 ADD PUSH3 0xBD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCC2 PUSH1 0x21 DUP4 PUSH3 0xC53 JUMP JUMPDEST SWAP2 POP PUSH3 0xCCF DUP3 PUSH3 0xC64 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xCF5 DUP2 PUSH3 0xCB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xD38 DUP3 PUSH3 0x7E9 JUMP JUMPDEST SWAP2 POP PUSH3 0xD45 DUP4 PUSH3 0x7E9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xD60 JUMPI PUSH3 0xD5F PUSH3 0xCFC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xD71 DUP2 PUSH3 0x7E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xD8E PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xD66 JUMP JUMPDEST PUSH3 0xD9D PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xD66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xDDE DUP2 PUSH3 0xBA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE0D DUP3 PUSH3 0xDE4 JUMP JUMPDEST PUSH3 0xE19 DUP2 DUP6 PUSH3 0xDEF JUMP JUMPDEST SWAP4 POP PUSH3 0xE2B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xADE JUMP JUMPDEST PUSH3 0xE36 DUP2 PUSH3 0xA42 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xE58 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xDD3 JUMP JUMPDEST PUSH3 0xE67 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xDD3 JUMP JUMPDEST PUSH3 0xE76 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xD66 JUMP JUMPDEST PUSH3 0xE85 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xD66 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0xE99 DUP2 DUP5 PUSH3 0xE00 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xEDC DUP2 PUSH3 0xEA5 JUMP JUMPDEST DUP2 EQ PUSH3 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xEFC DUP2 PUSH3 0xED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF1B JUMPI PUSH3 0xF1A PUSH3 0xA2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF2B DUP5 DUP3 DUP6 ADD PUSH3 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH3 0xF63 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH3 0xF60 PUSH1 0x0 MLOAD PUSH3 0xF34 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH3 0xFFE JUMPI PUSH3 0xF7B PUSH3 0xA24 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xFA5 JUMPI POP POP PUSH3 0xFFE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xFC5 JUMPI POP POP POP POP PUSH3 0xFFE JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH3 0xFE4 JUMPI POP POP POP POP POP PUSH3 0xFFE JUMP JUMPDEST PUSH3 0xFF5 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH3 0xA53 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x100E DUP3 PUSH3 0x6C3 JUMP JUMPDEST PUSH3 0x101A DUP2 DUP6 PUSH3 0xC53 JUMP JUMPDEST SWAP4 POP PUSH3 0x102C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xADE JUMP JUMPDEST PUSH3 0x1037 DUP2 PUSH3 0xA42 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x105E DUP2 DUP5 PUSH3 0x1001 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10C4 PUSH1 0x34 DUP4 PUSH3 0xC53 JUMP JUMPDEST SWAP2 POP PUSH3 0x10D1 DUP3 PUSH3 0x1066 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x10F7 DUP2 PUSH3 0x10B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x115C PUSH1 0x28 DUP4 PUSH3 0xC53 JUMP JUMPDEST SWAP2 POP PUSH3 0x1169 DUP3 PUSH3 0x10FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x118F DUP2 PUSH3 0x114D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35FB DUP1 PUSH3 0x11A6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xD3DD5FE0 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A3 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x3CA JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x3FD17366 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x438A67E7 EQ PUSH2 0x2E3 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x1FFEAA4 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x387DA42 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x2498 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH2 0x9AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xCE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xD3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x2845 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x2885 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x65F JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x66F JUMPI POP PUSH2 0x66E DUP3 PUSH2 0xFC9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x693 SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BF SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP3 EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCEEA21B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH2 0x75B DUP4 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x76C SWAP3 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0x1193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7E7 JUMPI POP PUSH2 0x7E6 DUP6 PUSH2 0x7E1 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST JUMPDEST PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x833 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x119B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x842 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x2C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x926 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x973 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x94B JUMPI PUSH2 0x94A PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x966 JUMPI PUSH2 0x965 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4CC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x986 JUMPI PUSH2 0x985 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x99C SWAP1 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 POP PUSH2 0x92C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x9C0 PUSH1 0x0 PUSH2 0x153A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA25 SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x914EDB0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 SLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x2CD0 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x36C64B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST GT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDEFAE2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 DUP2 PUSH1 0x8 SLOAD PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST GT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x846FB9E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x21BD401700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCA3 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCC6 CALLER PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1600 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCDC PUSH2 0xCD5 PUSH2 0x1193 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x17B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCE8 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH2 0xD42 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xD6D SWAP1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8A PUSH2 0x1193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xED0 JUMPI POP PUSH2 0xECF DUP6 PUSH2 0xECA PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST JUMPDEST PUSH2 0xF0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF06 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x191C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF2B PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA3 DUP2 PUSH2 0x153A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x118E JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x10AC JUMPI DUP1 DUP1 PUSH2 0x1095 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x2E4D JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C8 JUMPI PUSH2 0x10C7 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1187 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x2E7E JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x2EB2 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x2E4D JUMP JUMPDEST SWAP5 POP PUSH2 0x10FE JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D6 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1258 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH2 0x1268 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1289 JUMPI PUSH2 0x1288 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1340 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x1412 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 POP PUSH2 0x126B JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1490 SWAP3 SWAP2 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x14A6 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x14B4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BC7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14C4 PUSH2 0x1193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14E2 PUSH2 0x9C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152F SWAP1 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1666 SWAP1 PUSH2 0x31AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1679 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1686 DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1693 DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x16A4 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB7 JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1781 SWAP3 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1798 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x17A7 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1E18 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1815 SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x198B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1982 SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1995 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19A2 DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19AF DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x19BF DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4D SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B0B SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1B88 SWAP3 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1B9E DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1BAC DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1E18 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA6 JUMP JUMPDEST ISZERO PUSH2 0x1D96 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C68 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C65 SWAP2 SWAP1 PUSH2 0x335B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D0D JUMPI PUSH2 0x1C74 PUSH2 0x3395 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1CD0 JUMPI POP PUSH2 0x1C88 PUSH2 0x33B7 JUMP JUMPDEST DUP1 PUSH2 0x1C93 JUMPI POP PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC7 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D04 SWAP1 PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8B SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DBD JUMPI PUSH2 0x1DBC PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DEB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E37 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA6 JUMP JUMPDEST ISZERO PUSH2 0x1FE7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x356B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EB9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB6 SWAP2 SWAP1 PUSH2 0x335B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F5E JUMPI PUSH2 0x1EC5 PUSH2 0x3395 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1F21 JUMPI POP PUSH2 0x1ED9 PUSH2 0x33B7 JUMP JUMPDEST DUP1 PUSH2 0x1EE4 JUMPI POP PUSH2 0x1F23 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F18 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F55 SWAP1 PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1FE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDC SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2003 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203E DUP2 PUSH2 0x2023 JUMP JUMPDEST DUP2 EQ PUSH2 0x2049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205B DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2074 DUP2 PUSH2 0x2061 JUMP JUMPDEST DUP2 EQ PUSH2 0x207F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2091 DUP2 PUSH2 0x206B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AE JUMPI PUSH2 0x20AD PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20BC DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CD DUP6 DUP3 DUP7 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20E0 DUP2 PUSH2 0x2061 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2136 DUP2 PUSH2 0x2101 JUMP JUMPDEST DUP2 EQ PUSH2 0x2141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2153 DUP2 PUSH2 0x212D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216F JUMPI PUSH2 0x216E PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x217D DUP5 DUP3 DUP6 ADD PUSH2 0x2144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219B DUP2 PUSH2 0x2186 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221E DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2228 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2238 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x2241 DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2266 DUP2 DUP5 PUSH2 0x2213 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2284 JUMPI PUSH2 0x2283 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2292 DUP5 DUP3 DUP6 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22D8 DUP3 PUSH2 0x2202 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22F7 JUMPI PUSH2 0x22F6 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230A PUSH2 0x1FEF JUMP JUMPDEST SWAP1 POP PUSH2 0x2316 DUP3 DUP3 PUSH2 0x22CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2336 JUMPI PUSH2 0x2335 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x235F PUSH2 0x235A DUP5 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x2300 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2382 JUMPI PUSH2 0x2381 PUSH2 0x2347 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23AB JUMPI DUP1 PUSH2 0x2397 DUP9 DUP3 PUSH2 0x2082 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2384 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23CA JUMPI PUSH2 0x23C9 PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23DA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x234C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2403 JUMPI PUSH2 0x2402 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH2 0x240C DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243B PUSH2 0x2436 DUP5 PUSH2 0x23E8 JUMP JUMPDEST PUSH2 0x2300 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x23E3 JUMP JUMPDEST JUMPDEST PUSH2 0x2462 DUP5 DUP3 DUP6 PUSH2 0x2419 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x247F JUMPI PUSH2 0x247E PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x248F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2428 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24B4 JUMPI PUSH2 0x24B3 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C2 DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x24D3 DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x2500 DUP9 DUP3 DUP10 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x252D DUP9 DUP3 DUP10 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x255A DUP9 DUP3 DUP10 ADD PUSH2 0x246A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257D JUMPI PUSH2 0x257C PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x258B DUP5 DUP3 DUP6 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25AF JUMPI PUSH2 0x25AE PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D3 PUSH2 0x25CE DUP5 PUSH2 0x2594 JUMP JUMPDEST PUSH2 0x2300 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x25F6 JUMPI PUSH2 0x25F5 PUSH2 0x2347 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x261F JUMPI DUP1 PUSH2 0x260B DUP9 DUP3 PUSH2 0x204C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25F8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x264E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x266E JUMPI PUSH2 0x266D PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x268C JUMPI PUSH2 0x268B PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x2698 DUP6 DUP3 DUP7 ADD PUSH2 0x2629 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B9 JUMPI PUSH2 0x26B8 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x26C5 DUP6 DUP3 DUP7 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2704 DUP2 PUSH2 0x2061 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2716 DUP4 DUP4 PUSH2 0x26FB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273A DUP3 PUSH2 0x26CF JUMP JUMPDEST PUSH2 0x2744 DUP2 DUP6 PUSH2 0x26DA JUMP JUMPDEST SWAP4 POP PUSH2 0x274F DUP4 PUSH2 0x26EB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2780 JUMPI DUP2 MLOAD PUSH2 0x2767 DUP9 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP8 POP PUSH2 0x2772 DUP4 PUSH2 0x2722 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2753 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27A7 DUP2 DUP5 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH2 0x2023 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E2 DUP2 PUSH2 0x2186 JUMP JUMPDEST DUP2 EQ PUSH2 0x27ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27FF DUP2 PUSH2 0x27D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x281C JUMPI PUSH2 0x281B PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x282A DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x283B DUP6 DUP3 DUP7 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285C JUMPI PUSH2 0x285B PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x286A DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x287B DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x28A1 JUMPI PUSH2 0x28A0 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28AF DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x28C0 DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x28D1 DUP9 DUP3 DUP10 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x28E2 DUP9 DUP3 DUP10 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2903 JUMPI PUSH2 0x2902 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x290F DUP9 DUP3 DUP10 ADD PUSH2 0x246A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 PUSH1 0x2A DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2983 DUP3 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29A7 DUP2 PUSH2 0x296B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A08 JUMPI PUSH2 0x2A07 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2A3B DUP2 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x2A45 DUP2 DUP7 PUSH2 0x2A0E JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2A60 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2A75 JUMPI PUSH2 0x2AA8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2AA8 JUMP JUMPDEST PUSH2 0x2A7E DUP6 PUSH2 0x2A19 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AA0 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A81 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABC DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2AC6 DUP2 DUP6 PUSH2 0x2A0E JUMP JUMPDEST SWAP4 POP PUSH2 0x2AD6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEE DUP3 DUP6 PUSH2 0x2A2E JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFA DUP3 DUP5 PUSH2 0x2AB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B62 PUSH1 0x2F DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B6D DUP3 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B91 DUP2 PUSH2 0x2B55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF4 PUSH1 0x29 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFF DUP3 PUSH2 0x2B98 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C23 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C93 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CC5 JUMPI PUSH2 0x2CC4 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDB DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE6 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2CF4 DUP2 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2D0B JUMPI PUSH2 0x2D0A PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1D DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D28 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D40 JUMPI PUSH2 0x2D3F PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D61 PUSH1 0x0 DUP4 PUSH2 0x2D46 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6C DUP3 PUSH2 0x2D51 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D82 DUP3 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 PUSH1 0x26 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP3 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E17 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E58 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E63 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E73 JUMPI PUSH2 0x2E72 PUSH2 0x2E1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E89 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E94 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EAC JUMPI PUSH2 0x2EAB PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBD DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC8 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2ED8 JUMPI PUSH2 0x2ED7 PUSH2 0x2E1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3F PUSH1 0x28 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4A DUP3 PUSH2 0x2EE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F6E DUP2 PUSH2 0x2F32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 PUSH1 0x25 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FDC DUP3 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3000 DUP2 PUSH2 0x2FC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3063 PUSH1 0x2A DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x306E DUP3 PUSH2 0x3007 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3092 DUP2 PUSH2 0x3056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B3 DUP2 DUP6 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x30C7 DUP2 DUP5 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3106 PUSH1 0x20 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3111 DUP3 PUSH2 0x30D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3135 DUP2 PUSH2 0x30F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3198 PUSH1 0x21 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x31A3 DUP3 PUSH2 0x313C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C7 DUP2 PUSH2 0x318B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x31F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 PUSH1 0x29 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x325E DUP3 PUSH2 0x31F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3282 DUP2 PUSH2 0x3246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B0 DUP3 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x32BA DUP2 DUP6 PUSH2 0x3294 JUMP JUMPDEST SWAP4 POP PUSH2 0x32CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x32D3 DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x32F3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x3300 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x27AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3312 DUP2 DUP7 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3326 DUP2 DUP6 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x333A DUP2 DUP5 PUSH2 0x32A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3355 DUP2 PUSH2 0x212D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3371 JUMPI PUSH2 0x3370 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337F DUP5 DUP3 DUP6 ADD PUSH2 0x3346 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x33B4 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x33B1 PUSH1 0x0 MLOAD PUSH2 0x3388 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x3444 JUMPI PUSH2 0x33C9 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x33F1 JUMPI POP POP PUSH2 0x3444 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x340F JUMPI POP POP POP POP PUSH2 0x3444 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x342C JUMPI POP POP POP POP POP PUSH2 0x3444 JUMP JUMPDEST PUSH2 0x343B DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x22CF JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A3 PUSH1 0x34 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x34AE DUP3 PUSH2 0x3447 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D2 DUP2 PUSH2 0x3496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3535 PUSH1 0x28 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3540 DUP3 PUSH2 0x34D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3564 DUP2 PUSH2 0x3528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3580 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x358D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x359A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x35A7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x20D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x35B9 DUP2 DUP5 PUSH2 0x32A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xA8 0xE2 PUSH16 0x22F1A1AFD7E42C1F2B0F57BDD3BA54DB CREATE PUSH4 0xEC14CFCC BASEFEE PC SWAP5 BLOCKHASH 0xA8 ADD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"461:2790:10:-:0;;;611:43;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;661:29;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;760:12;732:40;;1465:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1519:4;1149:13:1;1157:4;1149:7;;;:13;;:::i;:::-;1107:62;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1547:4:10::1;1536:8;:15;;;;;;:::i;:::-;;1562:28;1568:4;823:1;866:2;1562:28;;;;;;;;;;;::::0;:5:::1;;;:28;;:::i;:::-;866:2;1601:10;:20;;;;1465:164:::0;;461:2790;;8173:86:1;8246:6;8239:4;:13;;;;;;:::i;:::-;;8173:86;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;8632:709:1:-;8793:1;8779:16;;:2;:16;;;8771:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;8844:16;8863:12;:10;;;:12;;:::i;:::-;8844:31;;8885:20;8908:21;8926:2;8908:17;;;:21;;:::i;:::-;8885:44;;8939:24;8966:25;8984:6;8966:17;;;:25;;:::i;:::-;8939:52;;9002:66;9023:8;9041:1;9045:2;9049:3;9054:7;9063:4;9002:20;;;:66;;:::i;:::-;9100:6;9079:9;:13;9089:2;9079:13;;;;;;;;;;;:17;9093:2;9079:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;9158:2;9121:52;;9154:1;9121:52;;9136:8;9121:52;;;9162:2;9166:6;9121:52;;;;;;;:::i;:::-;;;;;;;;9184:65;9204:8;9222:1;9226:2;9230:3;9235:7;9244:4;9184:19;;;:65;;:::i;:::-;9260:74;9291:8;9309:1;9313:2;9317;9321:6;9329:4;9260:30;;;:74;;:::i;:::-;8761:580;;;8632:709;;;;:::o;17066:193::-;17132:16;17160:22;17199:1;17185:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:41;;17222:7;17211:5;17217:1;17211:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17247:5;17240:12;;;17066:193;;;:::o;14171:214::-;;;;;;;:::o;15318:213::-;;;;;;;:::o;15537:725::-;15744:15;:2;:13;;;;;;;:15;;:::i;:::-;15740:516;;;15796:2;15779:38;;;15818:8;15828:4;15834:2;15838:6;15846:4;15779:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15775:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16122:6;16115:14;;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;;;16169:62;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;15912:43;;;15900:55;;;:8;:55;;;;15896:152;;15979:50;;;;;;;;;;:::i;:::-;;;;;;;;15896:152;15852:210;15740:516;15537:725;;;;;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:75::-;5267:6;5300:2;5294:9;5284:19;;5234:75;:::o;5315:117::-;5424:1;5421;5414:12;5438:117;5547:1;5544;5537:12;5561:117;5670:1;5667;5660:12;5684:117;5793:1;5790;5783:12;5807:102;5848:6;5899:2;5895:7;5890:2;5883:5;5879:14;5875:28;5865:38;;5807:102;;;:::o;5915:281::-;5998:27;6020:4;5998:27;:::i;:::-;5990:6;5986:40;6128:6;6116:10;6113:22;6092:18;6080:10;6077:34;6074:62;6071:88;;;6139:18;;:::i;:::-;6071:88;6179:10;6175:2;6168:22;5958:238;5915:281;;:::o;6202:129::-;6236:6;6263:20;;:::i;:::-;6253:30;;6292:33;6320:4;6312:6;6292:33;:::i;:::-;6202:129;;;:::o;6337:308::-;6399:4;6489:18;6481:6;6478:30;6475:56;;;6511:18;;:::i;:::-;6475:56;6549:29;6571:6;6549:29;:::i;:::-;6541:37;;6633:4;6627;6623:15;6615:23;;6337:308;;;:::o;6651:246::-;6732:1;6742:113;6756:6;6753:1;6750:13;6742:113;;;6841:1;6836:3;6832:11;6826:18;6822:1;6817:3;6813:11;6806:39;6778:2;6775:1;6771:10;6766:15;;6742:113;;;6889:1;6880:6;6875:3;6871:16;6864:27;6713:184;6651:246;;;:::o;6903:434::-;6992:5;7017:66;7033:49;7075:6;7033:49;:::i;:::-;7017:66;:::i;:::-;7008:75;;7106:6;7099:5;7092:21;7144:4;7137:5;7133:16;7182:3;7173:6;7168:3;7164:16;7161:25;7158:112;;;7189:79;;:::i;:::-;7158:112;7279:52;7324:6;7319:3;7314;7279:52;:::i;:::-;6998:339;6903:434;;;;;:::o;7357:355::-;7424:5;7473:3;7466:4;7458:6;7454:17;7450:27;7440:122;;7481:79;;:::i;:::-;7440:122;7591:6;7585:13;7616:90;7702:3;7694:6;7687:4;7679:6;7675:17;7616:90;:::i;:::-;7607:99;;7430:282;7357:355;;;;:::o;7718:126::-;7755:7;7795:42;7788:5;7784:54;7773:65;;7718:126;;;:::o;7850:96::-;7887:7;7916:24;7934:5;7916:24;:::i;:::-;7905:35;;7850:96;;;:::o;7952:122::-;8025:24;8043:5;8025:24;:::i;:::-;8018:5;8015:35;8005:63;;8064:1;8061;8054:12;8005:63;7952:122;:::o;8080:143::-;8137:5;8168:6;8162:13;8153:22;;8184:33;8211:5;8184:33;:::i;:::-;8080:143;;;;:::o;8229:680::-;8318:6;8326;8375:2;8363:9;8354:7;8350:23;8346:32;8343:119;;;8381:79;;:::i;:::-;8343:119;8522:1;8511:9;8507:17;8501:24;8552:18;8544:6;8541:30;8538:117;;;8574:79;;:::i;:::-;8538:117;8679:74;8745:7;8736:6;8725:9;8721:22;8679:74;:::i;:::-;8669:84;;8472:291;8802:2;8828:64;8884:7;8875:6;8864:9;8860:22;8828:64;:::i;:::-;8818:74;;8773:129;8229:680;;;;;:::o;8915:169::-;8999:11;9033:6;9028:3;9021:19;9073:4;9068:3;9064:14;9049:29;;8915:169;;;;:::o;9090:220::-;9230:34;9226:1;9218:6;9214:14;9207:58;9299:3;9294:2;9286:6;9282:15;9275:28;9090:220;:::o;9316:366::-;9458:3;9479:67;9543:2;9538:3;9479:67;:::i;:::-;9472:74;;9555:93;9644:3;9555:93;:::i;:::-;9673:2;9668:3;9664:12;9657:19;;9316:366;;;:::o;9688:419::-;9854:4;9892:2;9881:9;9877:18;9869:26;;9941:9;9935:4;9931:20;9927:1;9916:9;9912:17;9905:47;9969:131;10095:4;9969:131;:::i;:::-;9961:139;;9688:419;;;:::o;10113:180::-;10161:77;10158:1;10151:88;10258:4;10255:1;10248:15;10282:4;10279:1;10272:15;10299:191;10339:3;10358:20;10376:1;10358:20;:::i;:::-;10353:25;;10392:20;10410:1;10392:20;:::i;:::-;10387:25;;10435:1;10432;10428:9;10421:16;;10456:3;10453:1;10450:10;10447:36;;;10463:18;;:::i;:::-;10447:36;10299:191;;;;:::o;10496:118::-;10583:24;10601:5;10583:24;:::i;:::-;10578:3;10571:37;10496:118;;:::o;10620:332::-;10741:4;10779:2;10768:9;10764:18;10756:26;;10792:71;10860:1;10849:9;10845:17;10836:6;10792:71;:::i;:::-;10873:72;10941:2;10930:9;10926:18;10917:6;10873:72;:::i;:::-;10620:332;;;;;:::o;10958:180::-;11006:77;11003:1;10996:88;11103:4;11100:1;11093:15;11127:4;11124:1;11117:15;11144:118;11231:24;11249:5;11231:24;:::i;:::-;11226:3;11219:37;11144:118;;:::o;11268:98::-;11319:6;11353:5;11347:12;11337:22;;11268:98;;;:::o;11372:168::-;11455:11;11489:6;11484:3;11477:19;11529:4;11524:3;11520:14;11505:29;;11372:168;;;;:::o;11546:373::-;11632:3;11660:38;11692:5;11660:38;:::i;:::-;11714:70;11777:6;11772:3;11714:70;:::i;:::-;11707:77;;11793:65;11851:6;11846:3;11839:4;11832:5;11828:16;11793:65;:::i;:::-;11883:29;11905:6;11883:29;:::i;:::-;11878:3;11874:39;11867:46;;11636:283;11546:373;;;;:::o;11925:751::-;12148:4;12186:3;12175:9;12171:19;12163:27;;12200:71;12268:1;12257:9;12253:17;12244:6;12200:71;:::i;:::-;12281:72;12349:2;12338:9;12334:18;12325:6;12281:72;:::i;:::-;12363;12431:2;12420:9;12416:18;12407:6;12363:72;:::i;:::-;12445;12513:2;12502:9;12498:18;12489:6;12445:72;:::i;:::-;12565:9;12559:4;12555:20;12549:3;12538:9;12534:19;12527:49;12593:76;12664:4;12655:6;12593:76;:::i;:::-;12585:84;;11925:751;;;;;;;;:::o;12682:149::-;12718:7;12758:66;12751:5;12747:78;12736:89;;12682:149;;;:::o;12837:120::-;12909:23;12926:5;12909:23;:::i;:::-;12902:5;12899:34;12889:62;;12947:1;12944;12937:12;12889:62;12837:120;:::o;12963:141::-;13019:5;13050:6;13044:13;13035:22;;13066:32;13092:5;13066:32;:::i;:::-;12963:141;;;;:::o;13110:349::-;13179:6;13228:2;13216:9;13207:7;13203:23;13199:32;13196:119;;;13234:79;;:::i;:::-;13196:119;13354:1;13379:63;13434:7;13425:6;13414:9;13410:22;13379:63;:::i;:::-;13369:73;;13325:127;13110:349;;;;:::o;13465:106::-;13509:8;13558:5;13553:3;13549:15;13528:36;;13465:106;;;:::o;13577:183::-;13612:3;13650:1;13632:16;13629:23;13626:128;;;13688:1;13685;13682;13667:23;13710:34;13741:1;13735:8;13710:34;:::i;:::-;13703:41;;13626:128;13577:183;:::o;13766:711::-;13805:3;13843:4;13825:16;13822:26;13851:5;13819:39;13880:20;;:::i;:::-;13955:1;13937:16;13933:24;13930:1;13924:4;13909:49;13988:4;13982:11;14087:16;14080:4;14072:6;14068:17;14065:39;14032:18;14024:6;14021:30;14005:113;14002:146;;;14133:5;;;;14002:146;14179:6;14173:4;14169:17;14215:3;14209:10;14242:18;14234:6;14231:30;14228:43;;;14264:5;;;;;;14228:43;14312:6;14305:4;14300:3;14296:14;14292:27;14371:1;14353:16;14349:24;14343:4;14339:35;14334:3;14331:44;14328:57;;;14378:5;;;;;;;14328:57;14395;14443:6;14437:4;14433:17;14425:6;14421:30;14415:4;14395:57;:::i;:::-;14468:3;14461:10;;13809:668;;;;;13766:711;;:::o;14483:377::-;14571:3;14599:39;14632:5;14599:39;:::i;:::-;14654:71;14718:6;14713:3;14654:71;:::i;:::-;14647:78;;14734:65;14792:6;14787:3;14780:4;14773:5;14769:16;14734:65;:::i;:::-;14824:29;14846:6;14824:29;:::i;:::-;14819:3;14815:39;14808:46;;14575:285;14483:377;;;;:::o;14866:313::-;14979:4;15017:2;15006:9;15002:18;14994:26;;15066:9;15060:4;15056:20;15052:1;15041:9;15037:17;15030:47;15094:78;15167:4;15158:6;15094:78;:::i;:::-;15086:86;;14866:313;;;;:::o;15185:239::-;15325:34;15321:1;15313:6;15309:14;15302:58;15394:22;15389:2;15381:6;15377:15;15370:47;15185:239;:::o;15430:366::-;15572:3;15593:67;15657:2;15652:3;15593:67;:::i;:::-;15586:74;;15669:93;15758:3;15669:93;:::i;:::-;15787:2;15782:3;15778:12;15771:19;;15430:366;;;:::o;15802:419::-;15968:4;16006:2;15995:9;15991:18;15983:26;;16055:9;16049:4;16045:20;16041:1;16030:9;16026:17;16019:47;16083:131;16209:4;16083:131;:::i;:::-;16075:139;;15802:419;;;:::o;16227:227::-;16367:34;16363:1;16355:6;16351:14;16344:58;16436:10;16431:2;16423:6;16419:15;16412:35;16227:227;:::o;16460:366::-;16602:3;16623:67;16687:2;16682:3;16623:67;:::i;:::-;16616:74;;16699:93;16788:3;16699:93;:::i;:::-;16817:2;16812:3;16808:12;16801:19;;16460:366;;;:::o;16832:419::-;16998:4;17036:2;17025:9;17021:18;17013:26;;17085:9;17079:4;17075:20;17071:1;17060:9;17056:17;17049:47;17113:131;17239:4;17113:131;:::i;:::-;17105:139;;16832:419;;;:::o;461:2790:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1178":{"entryPoint":7103,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":7582,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":7095,"id":1159,"parameterSlots":6,"returnSlots":0},"@_checkOwner_54":{"entryPoint":5308,"id":54,"parameterSlots":0,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":7111,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":7704,"id":1241,"parameterSlots":6,"returnSlots":0},"@_mintPrice_2140":{"entryPoint":1664,"id":2140,"parameterSlots":0,"returnSlots":0},"@_mint_769":{"entryPoint":5632,"id":769,"parameterSlots":4,"returnSlots":0},"@_msgSender_1820":{"entryPoint":4499,"id":1820,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":4507,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":6428,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":6064,"id":1140,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":5434,"id":111,"parameterSlots":1,"returnSlots":0},"@amountMinted_2315":{"entryPoint":2124,"id":2315,"parameterSlots":1,"returnSlots":1},"@balanceOfBatch_292":{"entryPoint":2197,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":1228,"id":228,"parameterSlots":2,"returnSlots":1},"@changeMintPrice_2293":{"entryPoint":2106,"id":2293,"parameterSlots":1,"returnSlots":0},"@getState_2324":{"entryPoint":1922,"id":2324,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":3566,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1531":{"entryPoint":4006,"id":1531,"parameterSlots":1,"returnSlots":1},"@mint_2263":{"entryPoint":2682,"id":2263,"parameterSlots":1,"returnSlots":0},"@name_2128":{"entryPoint":1670,"id":2128,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":2498,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2478,"id":68,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_405":{"entryPoint":1945,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":3714,"id":365,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":3274,"id":309,"parameterSlots":2,"returnSlots":0},"@supportsInterface_188":{"entryPoint":1428,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2079":{"entryPoint":4041,"id":2079,"parameterSlots":1,"returnSlots":1},"@symbol_2131":{"entryPoint":2540,"id":2131,"parameterSlots":0,"returnSlots":0},"@toString_1918":{"entryPoint":4147,"id":1918,"parameterSlots":1,"returnSlots":1},"@toggleMint_2280":{"entryPoint":3296,"id":2280,"parameterSlots":0,"returnSlots":0},"@totalAmountMinted_2302":{"entryPoint":1654,"id":2302,"parameterSlots":0,"returnSlots":1},"@transferOwnership_91":{"entryPoint":3875,"id":91,"parameterSlots":1,"returnSlots":0},"@uri_2353":{"entryPoint":1812,"id":2353,"parameterSlots":1,"returnSlots":1},"@withdrawal_2387":{"entryPoint":3386,"id":2387,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9664,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9036,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9256,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":8516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":13126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":9322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10309,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":9368,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":10373,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10245,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8343,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9815,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":8537,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":13147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10159,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10031,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8594,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack":{"entryPoint":13462,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack":{"entryPoint":11093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack":{"entryPoint":13608,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":11739,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack":{"entryPoint":10603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack":{"entryPoint":12228,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack":{"entryPoint":12374,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":12537,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11604,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":12870,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack":{"entryPoint":11239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack":{"entryPoint":12082,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack":{"entryPoint":12683,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9979,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8407,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10978,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13022,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13675,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12441,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11774,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10638,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12263,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12409,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12572,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12905,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12117,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12718,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12750,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":8960,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8175,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9620,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8987,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9192,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9963,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":10777,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9935,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12937,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8636,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10018,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9946,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12948,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11590,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8647,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10766,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11538,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11853,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11472,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11902,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8227,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8582,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8449,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8195,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8289,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9241,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8664,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10717,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8911,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":11400,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":11954,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11353,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11806,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10670,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11306,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8864,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":13205,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8859,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9031,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9187,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8190,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8185,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8706,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":13192,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed":{"entryPoint":13383,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370":{"entryPoint":11014,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503":{"entryPoint":13529,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":11660,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad":{"entryPoint":10524,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d":{"entryPoint":12149,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf":{"entryPoint":12295,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":12496,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":11601,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2":{"entryPoint":12791,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5":{"entryPoint":11160,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807":{"entryPoint":12003,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2":{"entryPoint":12604,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":13239,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_t_address":{"entryPoint":8245,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10201,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8493,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8299,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:40318:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"611:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:11"},"nodeType":"YulFunctionCall","src":"670:12:11"},"nodeType":"YulExpressionStatement","src":"670:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:11"},"nodeType":"YulFunctionCall","src":"641:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:11"},"nodeType":"YulFunctionCall","src":"631:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:11"},"nodeType":"YulFunctionCall","src":"624:43:11"},"nodeType":"YulIf","src":"621:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:11","type":""}],"src":"568:122:11"},{"body":{"nodeType":"YulBlock","src":"748:87:11","statements":[{"nodeType":"YulAssignment","src":"758:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:11"},"nodeType":"YulFunctionCall","src":"767:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:11"},"nodeType":"YulFunctionCall","src":"796:33:11"},"nodeType":"YulExpressionStatement","src":"796:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:11","type":""}],"src":"696:139:11"},{"body":{"nodeType":"YulBlock","src":"886:32:11","statements":[{"nodeType":"YulAssignment","src":"896:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:11","type":""}],"src":"841:77:11"},{"body":{"nodeType":"YulBlock","src":"967:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:11"},"nodeType":"YulFunctionCall","src":"1026:12:11"},"nodeType":"YulExpressionStatement","src":"1026:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:11"},"nodeType":"YulFunctionCall","src":"997:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:11"},"nodeType":"YulFunctionCall","src":"987:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:11"},"nodeType":"YulFunctionCall","src":"980:43:11"},"nodeType":"YulIf","src":"977:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:11","type":""}],"src":"924:122:11"},{"body":{"nodeType":"YulBlock","src":"1104:87:11","statements":[{"nodeType":"YulAssignment","src":"1114:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:11"},"nodeType":"YulFunctionCall","src":"1123:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:11"},"nodeType":"YulFunctionCall","src":"1152:33:11"},"nodeType":"YulExpressionStatement","src":"1152:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:11","type":""}],"src":"1052:139:11"},{"body":{"nodeType":"YulBlock","src":"1280:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:11"},"nodeType":"YulFunctionCall","src":"1328:79:11"},"nodeType":"YulExpressionStatement","src":"1328:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:11"},"nodeType":"YulFunctionCall","src":"1297:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:11"},"nodeType":"YulFunctionCall","src":"1293:32:11"},"nodeType":"YulIf","src":"1290:119:11"},{"nodeType":"YulBlock","src":"1419:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:11"},"nodeType":"YulFunctionCall","src":"1494:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:11"},"nodeType":"YulFunctionCall","src":"1473:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:11"}]}]},{"nodeType":"YulBlock","src":"1546:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:11"},"nodeType":"YulFunctionCall","src":"1622:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:11"},"nodeType":"YulFunctionCall","src":"1601:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:11","type":""}],"src":"1197:474:11"},{"body":{"nodeType":"YulBlock","src":"1742:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:11"},"nodeType":"YulFunctionCall","src":"1764:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:11"},"nodeType":"YulFunctionCall","src":"1752:37:11"},"nodeType":"YulExpressionStatement","src":"1752:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:11","type":""}],"src":"1677:118:11"},{"body":{"nodeType":"YulBlock","src":"1899:124:11","statements":[{"nodeType":"YulAssignment","src":"1909:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:11"},"nodeType":"YulFunctionCall","src":"1917:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:11"},"nodeType":"YulFunctionCall","src":"1998:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:11"},"nodeType":"YulFunctionCall","src":"1945:71:11"},"nodeType":"YulExpressionStatement","src":"1945:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:11","type":""}],"src":"1801:222:11"},{"body":{"nodeType":"YulBlock","src":"2073:105:11","statements":[{"nodeType":"YulAssignment","src":"2083:89:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:11","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:11"},"nodeType":"YulFunctionCall","src":"2094:78:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:11"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:11","type":""}],"src":"2029:149:11"},{"body":{"nodeType":"YulBlock","src":"2226:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:11"},"nodeType":"YulFunctionCall","src":"2284:12:11"},"nodeType":"YulExpressionStatement","src":"2284:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:11"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:11"},"nodeType":"YulFunctionCall","src":"2256:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:11"},"nodeType":"YulFunctionCall","src":"2246:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:11"},"nodeType":"YulFunctionCall","src":"2239:42:11"},"nodeType":"YulIf","src":"2236:62:11"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:11","type":""}],"src":"2184:120:11"},{"body":{"nodeType":"YulBlock","src":"2361:86:11","statements":[{"nodeType":"YulAssignment","src":"2371:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:11"},"nodeType":"YulFunctionCall","src":"2380:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:11"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:11"},"nodeType":"YulFunctionCall","src":"2409:32:11"},"nodeType":"YulExpressionStatement","src":"2409:32:11"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:11","type":""}],"src":"2310:137:11"},{"body":{"nodeType":"YulBlock","src":"2518:262:11","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:11"},"nodeType":"YulFunctionCall","src":"2566:79:11"},"nodeType":"YulExpressionStatement","src":"2566:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:11"},"nodeType":"YulFunctionCall","src":"2535:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:11"},"nodeType":"YulFunctionCall","src":"2531:32:11"},"nodeType":"YulIf","src":"2528:119:11"},{"nodeType":"YulBlock","src":"2657:116:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:11"},"nodeType":"YulFunctionCall","src":"2731:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:11"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:11"},"nodeType":"YulFunctionCall","src":"2711:52:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:11","type":""}],"src":"2453:327:11"},{"body":{"nodeType":"YulBlock","src":"2828:48:11","statements":[{"nodeType":"YulAssignment","src":"2838:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:11"},"nodeType":"YulFunctionCall","src":"2856:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:11"},"nodeType":"YulFunctionCall","src":"2849:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:11","type":""}],"src":"2786:90:11"},{"body":{"nodeType":"YulBlock","src":"2941:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:11"},"nodeType":"YulFunctionCall","src":"2963:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:11"},"nodeType":"YulFunctionCall","src":"2951:34:11"},"nodeType":"YulExpressionStatement","src":"2951:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:11","type":""}],"src":"2882:109:11"},{"body":{"nodeType":"YulBlock","src":"3089:118:11","statements":[{"nodeType":"YulAssignment","src":"3099:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:11"},"nodeType":"YulFunctionCall","src":"3107:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:11"},"nodeType":"YulFunctionCall","src":"3182:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:11"},"nodeType":"YulFunctionCall","src":"3135:65:11"},"nodeType":"YulExpressionStatement","src":"3135:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:11","type":""}],"src":"2997:210:11"},{"body":{"nodeType":"YulBlock","src":"3272:40:11","statements":[{"nodeType":"YulAssignment","src":"3283:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3299:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3293:5:11"},"nodeType":"YulFunctionCall","src":"3293:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3283:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3255:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3265:6:11","type":""}],"src":"3213:99:11"},{"body":{"nodeType":"YulBlock","src":"3414:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3431:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3436:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3424:6:11"},"nodeType":"YulFunctionCall","src":"3424:19:11"},"nodeType":"YulExpressionStatement","src":"3424:19:11"},{"nodeType":"YulAssignment","src":"3452:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3471:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3476:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3467:3:11"},"nodeType":"YulFunctionCall","src":"3467:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3452:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3386:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3391:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3402:11:11","type":""}],"src":"3318:169:11"},{"body":{"nodeType":"YulBlock","src":"3555:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3565:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3574:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3569:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3634:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3659:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"3664:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3655:3:11"},"nodeType":"YulFunctionCall","src":"3655:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3678:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"3683:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3674:3:11"},"nodeType":"YulFunctionCall","src":"3674:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3668:5:11"},"nodeType":"YulFunctionCall","src":"3668:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3648:6:11"},"nodeType":"YulFunctionCall","src":"3648:39:11"},"nodeType":"YulExpressionStatement","src":"3648:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3595:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"3598:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3592:2:11"},"nodeType":"YulFunctionCall","src":"3592:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3606:19:11","statements":[{"nodeType":"YulAssignment","src":"3608:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3617:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"3620:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3613:3:11"},"nodeType":"YulFunctionCall","src":"3613:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3608:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3588:3:11","statements":[]},"src":"3584:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3717:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3722:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3713:3:11"},"nodeType":"YulFunctionCall","src":"3713:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"3731:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3706:6:11"},"nodeType":"YulFunctionCall","src":"3706:27:11"},"nodeType":"YulExpressionStatement","src":"3706:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3537:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3542:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3547:6:11","type":""}],"src":"3493:246:11"},{"body":{"nodeType":"YulBlock","src":"3793:54:11","statements":[{"nodeType":"YulAssignment","src":"3803:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3821:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3828:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3817:3:11"},"nodeType":"YulFunctionCall","src":"3817:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3837:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3833:3:11"},"nodeType":"YulFunctionCall","src":"3833:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3813:3:11"},"nodeType":"YulFunctionCall","src":"3813:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3803:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3776:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3786:6:11","type":""}],"src":"3745:102:11"},{"body":{"nodeType":"YulBlock","src":"3945:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3955:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4002:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3969:32:11"},"nodeType":"YulFunctionCall","src":"3969:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3959:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4017:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4083:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4088:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4024:58:11"},"nodeType":"YulFunctionCall","src":"4024:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4017:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4143:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4150:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4139:3:11"},"nodeType":"YulFunctionCall","src":"4139:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"4157:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4162:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4104:34:11"},"nodeType":"YulFunctionCall","src":"4104:65:11"},"nodeType":"YulExpressionStatement","src":"4104:65:11"},{"nodeType":"YulAssignment","src":"4178:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4189:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4216:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4194:21:11"},"nodeType":"YulFunctionCall","src":"4194:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4185:3:11"},"nodeType":"YulFunctionCall","src":"4185:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4178:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3926:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3933:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3941:3:11","type":""}],"src":"3853:377:11"},{"body":{"nodeType":"YulBlock","src":"4354:195:11","statements":[{"nodeType":"YulAssignment","src":"4364:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4376:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4387:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:11"},"nodeType":"YulFunctionCall","src":"4372:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4364:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4411:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4422:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4407:3:11"},"nodeType":"YulFunctionCall","src":"4407:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4430:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4436:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4426:3:11"},"nodeType":"YulFunctionCall","src":"4426:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4400:6:11"},"nodeType":"YulFunctionCall","src":"4400:47:11"},"nodeType":"YulExpressionStatement","src":"4400:47:11"},{"nodeType":"YulAssignment","src":"4456:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4528:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"4537:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4464:63:11"},"nodeType":"YulFunctionCall","src":"4464:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4456:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4326:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4338:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4349:4:11","type":""}],"src":"4236:313:11"},{"body":{"nodeType":"YulBlock","src":"4621:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"4667:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4669:77:11"},"nodeType":"YulFunctionCall","src":"4669:79:11"},"nodeType":"YulExpressionStatement","src":"4669:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4642:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4651:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4638:3:11"},"nodeType":"YulFunctionCall","src":"4638:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4663:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4634:3:11"},"nodeType":"YulFunctionCall","src":"4634:32:11"},"nodeType":"YulIf","src":"4631:119:11"},{"nodeType":"YulBlock","src":"4760:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4775:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4789:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4779:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:11"},"nodeType":"YulFunctionCall","src":"4835:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:11"},"nodeType":"YulFunctionCall","src":"4814:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4804:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4591:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4602:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4614:6:11","type":""}],"src":"4555:329:11"},{"body":{"nodeType":"YulBlock","src":"4979:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4996:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4999:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4989:6:11"},"nodeType":"YulFunctionCall","src":"4989:12:11"},"nodeType":"YulExpressionStatement","src":"4989:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4890:117:11"},{"body":{"nodeType":"YulBlock","src":"5041:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5058:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5061:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5051:6:11"},"nodeType":"YulFunctionCall","src":"5051:88:11"},"nodeType":"YulExpressionStatement","src":"5051:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5155:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5158:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5148:6:11"},"nodeType":"YulFunctionCall","src":"5148:15:11"},"nodeType":"YulExpressionStatement","src":"5148:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5179:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5182:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5172:6:11"},"nodeType":"YulFunctionCall","src":"5172:15:11"},"nodeType":"YulExpressionStatement","src":"5172:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5013:180:11"},{"body":{"nodeType":"YulBlock","src":"5242:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5252:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5274:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5304:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5282:21:11"},"nodeType":"YulFunctionCall","src":"5282:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:11"},"nodeType":"YulFunctionCall","src":"5270:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5256:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5421:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5423:16:11"},"nodeType":"YulFunctionCall","src":"5423:18:11"},"nodeType":"YulExpressionStatement","src":"5423:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5364:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"5376:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5361:2:11"},"nodeType":"YulFunctionCall","src":"5361:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5400:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5412:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5397:2:11"},"nodeType":"YulFunctionCall","src":"5397:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5358:2:11"},"nodeType":"YulFunctionCall","src":"5358:62:11"},"nodeType":"YulIf","src":"5355:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5463:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5452:6:11"},"nodeType":"YulFunctionCall","src":"5452:22:11"},"nodeType":"YulExpressionStatement","src":"5452:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5228:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"5236:4:11","type":""}],"src":"5199:281:11"},{"body":{"nodeType":"YulBlock","src":"5527:88:11","statements":[{"nodeType":"YulAssignment","src":"5537:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5547:18:11"},"nodeType":"YulFunctionCall","src":"5547:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5537:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5596:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"5604:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5576:19:11"},"nodeType":"YulFunctionCall","src":"5576:33:11"},"nodeType":"YulExpressionStatement","src":"5576:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5511:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5520:6:11","type":""}],"src":"5486:129:11"},{"body":{"nodeType":"YulBlock","src":"5703:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"5808:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5810:16:11"},"nodeType":"YulFunctionCall","src":"5810:18:11"},"nodeType":"YulExpressionStatement","src":"5810:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5780:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5788:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5777:2:11"},"nodeType":"YulFunctionCall","src":"5777:30:11"},"nodeType":"YulIf","src":"5774:56:11"},{"nodeType":"YulAssignment","src":"5840:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5852:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5860:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5848:3:11"},"nodeType":"YulFunctionCall","src":"5848:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5840:4:11"}]},{"nodeType":"YulAssignment","src":"5902:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5914:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5920:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:11"},"nodeType":"YulFunctionCall","src":"5910:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5902:4:11"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5687:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5698:4:11","type":""}],"src":"5621:311:11"},{"body":{"nodeType":"YulBlock","src":"6027:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6044:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6047:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6037:6:11"},"nodeType":"YulFunctionCall","src":"6037:12:11"},"nodeType":"YulExpressionStatement","src":"6037:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5938:117:11"},{"body":{"nodeType":"YulBlock","src":"6180:608:11","statements":[{"nodeType":"YulAssignment","src":"6190:90:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6272:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6215:56:11"},"nodeType":"YulFunctionCall","src":"6215:64:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6199:15:11"},"nodeType":"YulFunctionCall","src":"6199:81:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6190:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"6289:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"6300:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6293:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6322:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"6329:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:11"},"nodeType":"YulFunctionCall","src":"6315:21:11"},"nodeType":"YulExpressionStatement","src":"6315:21:11"},{"nodeType":"YulAssignment","src":"6345:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6356:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6363:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6352:3:11"},"nodeType":"YulFunctionCall","src":"6352:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6345:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"6378:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6396:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6408:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6416:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6404:3:11"},"nodeType":"YulFunctionCall","src":"6404:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6392:3:11"},"nodeType":"YulFunctionCall","src":"6392:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6382:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6450:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6464:77:11"},"nodeType":"YulFunctionCall","src":"6464:79:11"},"nodeType":"YulExpressionStatement","src":"6464:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6437:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"6445:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6434:2:11"},"nodeType":"YulFunctionCall","src":"6434:15:11"},"nodeType":"YulIf","src":"6431:122:11"},{"body":{"nodeType":"YulBlock","src":"6638:144:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6653:21:11","value":{"name":"src","nodeType":"YulIdentifier","src":"6671:3:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6657:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6695:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6721:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"6733:3:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6700:20:11"},"nodeType":"YulFunctionCall","src":"6700:37:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:11"},"nodeType":"YulFunctionCall","src":"6688:50:11"},"nodeType":"YulExpressionStatement","src":"6688:50:11"},{"nodeType":"YulAssignment","src":"6751:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6762:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6767:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:11"},"nodeType":"YulFunctionCall","src":"6758:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6751:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6591:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6596:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6588:2:11"},"nodeType":"YulFunctionCall","src":"6588:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6604:25:11","statements":[{"nodeType":"YulAssignment","src":"6606:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6617:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6622:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:11"},"nodeType":"YulFunctionCall","src":"6613:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6606:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"6566:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6568:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"6579:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6572:3:11","type":""}]}]},"src":"6562:220:11"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6150:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6158:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6166:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6174:5:11","type":""}],"src":"6078:710:11"},{"body":{"nodeType":"YulBlock","src":"6888:293:11","statements":[{"body":{"nodeType":"YulBlock","src":"6937:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6939:77:11"},"nodeType":"YulFunctionCall","src":"6939:79:11"},"nodeType":"YulExpressionStatement","src":"6939:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6916:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6924:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6912:3:11"},"nodeType":"YulFunctionCall","src":"6912:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"6931:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6908:3:11"},"nodeType":"YulFunctionCall","src":"6908:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6901:6:11"},"nodeType":"YulFunctionCall","src":"6901:35:11"},"nodeType":"YulIf","src":"6898:122:11"},{"nodeType":"YulVariableDeclaration","src":"7029:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7056:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7043:12:11"},"nodeType":"YulFunctionCall","src":"7043:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7033:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7072:103:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7156:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7144:3:11"},"nodeType":"YulFunctionCall","src":"7144:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"7163:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"7171:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7081:62:11"},"nodeType":"YulFunctionCall","src":"7081:94:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7072:5:11"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6866:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6874:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6882:5:11","type":""}],"src":"6811:370:11"},{"body":{"nodeType":"YulBlock","src":"7276:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7293:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7296:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7286:6:11"},"nodeType":"YulFunctionCall","src":"7286:12:11"},"nodeType":"YulExpressionStatement","src":"7286:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7187:117:11"},{"body":{"nodeType":"YulBlock","src":"7376:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"7481:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7483:16:11"},"nodeType":"YulFunctionCall","src":"7483:18:11"},"nodeType":"YulExpressionStatement","src":"7483:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7453:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7461:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7450:2:11"},"nodeType":"YulFunctionCall","src":"7450:30:11"},"nodeType":"YulIf","src":"7447:56:11"},{"nodeType":"YulAssignment","src":"7513:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7543:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7521:21:11"},"nodeType":"YulFunctionCall","src":"7521:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7513:4:11"}]},{"nodeType":"YulAssignment","src":"7587:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7599:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"7605:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7595:3:11"},"nodeType":"YulFunctionCall","src":"7595:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7587:4:11"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7360:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7371:4:11","type":""}],"src":"7310:307:11"},{"body":{"nodeType":"YulBlock","src":"7687:82:11","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7710:3:11"},{"name":"src","nodeType":"YulIdentifier","src":"7715:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7720:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7697:12:11"},"nodeType":"YulFunctionCall","src":"7697:30:11"},"nodeType":"YulExpressionStatement","src":"7697:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7747:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7752:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:11"},"nodeType":"YulFunctionCall","src":"7743:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"7761:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7736:6:11"},"nodeType":"YulFunctionCall","src":"7736:27:11"},"nodeType":"YulExpressionStatement","src":"7736:27:11"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7669:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7674:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"7679:6:11","type":""}],"src":"7623:146:11"},{"body":{"nodeType":"YulBlock","src":"7858:340:11","statements":[{"nodeType":"YulAssignment","src":"7868:74:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:11"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7893:40:11"},"nodeType":"YulFunctionCall","src":"7893:48:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7877:15:11"},"nodeType":"YulFunctionCall","src":"7877:65:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7868:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7958:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"7965:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7951:6:11"},"nodeType":"YulFunctionCall","src":"7951:21:11"},"nodeType":"YulExpressionStatement","src":"7951:21:11"},{"nodeType":"YulVariableDeclaration","src":"7981:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7996:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"8003:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7992:3:11"},"nodeType":"YulFunctionCall","src":"7992:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7985:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8046:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8048:77:11"},"nodeType":"YulFunctionCall","src":"8048:79:11"},"nodeType":"YulExpressionStatement","src":"8048:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8027:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8032:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8023:3:11"},"nodeType":"YulFunctionCall","src":"8023:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"8041:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8020:2:11"},"nodeType":"YulFunctionCall","src":"8020:25:11"},"nodeType":"YulIf","src":"8017:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8175:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"8180:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8185:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8138:36:11"},"nodeType":"YulFunctionCall","src":"8138:54:11"},"nodeType":"YulExpressionStatement","src":"8138:54:11"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7831:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"7836:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"7844:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7852:5:11","type":""}],"src":"7775:423:11"},{"body":{"nodeType":"YulBlock","src":"8278:277:11","statements":[{"body":{"nodeType":"YulBlock","src":"8327:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8329:77:11"},"nodeType":"YulFunctionCall","src":"8329:79:11"},"nodeType":"YulExpressionStatement","src":"8329:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8306:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8314:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8302:3:11"},"nodeType":"YulFunctionCall","src":"8302:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"8321:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8298:3:11"},"nodeType":"YulFunctionCall","src":"8298:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8291:6:11"},"nodeType":"YulFunctionCall","src":"8291:35:11"},"nodeType":"YulIf","src":"8288:122:11"},{"nodeType":"YulVariableDeclaration","src":"8419:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8446:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8433:12:11"},"nodeType":"YulFunctionCall","src":"8433:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8423:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8462:87:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8522:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8530:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8518:3:11"},"nodeType":"YulFunctionCall","src":"8518:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"8537:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"8545:3:11"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8471:46:11"},"nodeType":"YulFunctionCall","src":"8471:78:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8462:5:11"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8256:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"8264:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8272:5:11","type":""}],"src":"8217:338:11"},{"body":{"nodeType":"YulBlock","src":"8754:1316:11","statements":[{"body":{"nodeType":"YulBlock","src":"8801:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8803:77:11"},"nodeType":"YulFunctionCall","src":"8803:79:11"},"nodeType":"YulExpressionStatement","src":"8803:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8775:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8771:3:11"},"nodeType":"YulFunctionCall","src":"8771:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8796:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8767:3:11"},"nodeType":"YulFunctionCall","src":"8767:33:11"},"nodeType":"YulIf","src":"8764:120:11"},{"nodeType":"YulBlock","src":"8894:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8909:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8923:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8913:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8938:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8984:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:11"},"nodeType":"YulFunctionCall","src":"8969:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8993:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8948:20:11"},"nodeType":"YulFunctionCall","src":"8948:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8938:6:11"}]}]},{"nodeType":"YulBlock","src":"9021:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9036:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9050:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9040:6:11","type":""}]},{"nodeType":"YulAssignment","src":"9066:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9101:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9112:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9097:3:11"},"nodeType":"YulFunctionCall","src":"9097:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9121:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9076:20:11"},"nodeType":"YulFunctionCall","src":"9076:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9066:6:11"}]}]},{"nodeType":"YulBlock","src":"9149:303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9164:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9195:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9206:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:11"},"nodeType":"YulFunctionCall","src":"9191:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9178:12:11"},"nodeType":"YulFunctionCall","src":"9178:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9168:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9257:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9259:77:11"},"nodeType":"YulFunctionCall","src":"9259:79:11"},"nodeType":"YulExpressionStatement","src":"9259:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9229:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9237:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9226:2:11"},"nodeType":"YulFunctionCall","src":"9226:30:11"},"nodeType":"YulIf","src":"9223:117:11"},{"nodeType":"YulAssignment","src":"9354:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9425:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:11"},"nodeType":"YulFunctionCall","src":"9410:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9434:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9364:45:11"},"nodeType":"YulFunctionCall","src":"9364:78:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9354:6:11"}]}]},{"nodeType":"YulBlock","src":"9462:303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9477:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9508:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9519:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9504:3:11"},"nodeType":"YulFunctionCall","src":"9504:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9491:12:11"},"nodeType":"YulFunctionCall","src":"9491:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9481:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9570:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9572:77:11"},"nodeType":"YulFunctionCall","src":"9572:79:11"},"nodeType":"YulExpressionStatement","src":"9572:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9542:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9550:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9539:2:11"},"nodeType":"YulFunctionCall","src":"9539:30:11"},"nodeType":"YulIf","src":"9536:117:11"},{"nodeType":"YulAssignment","src":"9667:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9727:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9738:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:11"},"nodeType":"YulFunctionCall","src":"9723:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9747:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9677:45:11"},"nodeType":"YulFunctionCall","src":"9677:78:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9667:6:11"}]}]},{"nodeType":"YulBlock","src":"9775:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9790:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9821:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9832:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9817:3:11"},"nodeType":"YulFunctionCall","src":"9817:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9804:12:11"},"nodeType":"YulFunctionCall","src":"9804:33:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9794:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9884:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9886:77:11"},"nodeType":"YulFunctionCall","src":"9886:79:11"},"nodeType":"YulExpressionStatement","src":"9886:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9856:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9864:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9853:2:11"},"nodeType":"YulFunctionCall","src":"9853:30:11"},"nodeType":"YulIf","src":"9850:117:11"},{"nodeType":"YulAssignment","src":"9981:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10025:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10036:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10021:3:11"},"nodeType":"YulFunctionCall","src":"10021:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10045:7:11"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9991:29:11"},"nodeType":"YulFunctionCall","src":"9991:62:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9981:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8692:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8703:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8715:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8723:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8731:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8739:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8747:6:11","type":""}],"src":"8561:1509:11"},{"body":{"nodeType":"YulBlock","src":"10142:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"10188:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10190:77:11"},"nodeType":"YulFunctionCall","src":"10190:79:11"},"nodeType":"YulExpressionStatement","src":"10190:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10163:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10172:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10159:3:11"},"nodeType":"YulFunctionCall","src":"10159:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"10184:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10155:3:11"},"nodeType":"YulFunctionCall","src":"10155:32:11"},"nodeType":"YulIf","src":"10152:119:11"},{"nodeType":"YulBlock","src":"10281:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10296:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10310:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10300:6:11","type":""}]},{"nodeType":"YulAssignment","src":"10325:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10360:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10371:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10356:3:11"},"nodeType":"YulFunctionCall","src":"10356:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10380:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10335:20:11"},"nodeType":"YulFunctionCall","src":"10335:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10325:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10112:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10123:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10135:6:11","type":""}],"src":"10076:329:11"},{"body":{"nodeType":"YulBlock","src":"10493:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"10598:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10600:16:11"},"nodeType":"YulFunctionCall","src":"10600:18:11"},"nodeType":"YulExpressionStatement","src":"10600:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10570:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10578:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10567:2:11"},"nodeType":"YulFunctionCall","src":"10567:30:11"},"nodeType":"YulIf","src":"10564:56:11"},{"nodeType":"YulAssignment","src":"10630:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10642:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10650:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10638:3:11"},"nodeType":"YulFunctionCall","src":"10638:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10630:4:11"}]},{"nodeType":"YulAssignment","src":"10692:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10704:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"10710:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10700:3:11"},"nodeType":"YulFunctionCall","src":"10700:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10692:4:11"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10477:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10488:4:11","type":""}],"src":"10411:311:11"},{"body":{"nodeType":"YulBlock","src":"10847:608:11","statements":[{"nodeType":"YulAssignment","src":"10857:90:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10939:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10882:56:11"},"nodeType":"YulFunctionCall","src":"10882:64:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10866:15:11"},"nodeType":"YulFunctionCall","src":"10866:81:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10857:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"10956:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"10967:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10960:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10989:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"10996:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10982:6:11"},"nodeType":"YulFunctionCall","src":"10982:21:11"},"nodeType":"YulExpressionStatement","src":"10982:21:11"},{"nodeType":"YulAssignment","src":"11012:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11023:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11030:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11019:3:11"},"nodeType":"YulFunctionCall","src":"11019:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11012:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"11045:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11063:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11075:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11083:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11071:3:11"},"nodeType":"YulFunctionCall","src":"11071:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11059:3:11"},"nodeType":"YulFunctionCall","src":"11059:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"11049:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11117:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"11131:77:11"},"nodeType":"YulFunctionCall","src":"11131:79:11"},"nodeType":"YulExpressionStatement","src":"11131:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"11104:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"11112:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11101:2:11"},"nodeType":"YulFunctionCall","src":"11101:15:11"},"nodeType":"YulIf","src":"11098:122:11"},{"body":{"nodeType":"YulBlock","src":"11305:144:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11320:21:11","value":{"name":"src","nodeType":"YulIdentifier","src":"11338:3:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"11324:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11362:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11388:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"11400:3:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11367:20:11"},"nodeType":"YulFunctionCall","src":"11367:37:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11355:6:11"},"nodeType":"YulFunctionCall","src":"11355:50:11"},"nodeType":"YulExpressionStatement","src":"11355:50:11"},{"nodeType":"YulAssignment","src":"11418:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11429:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11434:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11425:3:11"},"nodeType":"YulFunctionCall","src":"11425:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11418:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11258:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"11263:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11255:2:11"},"nodeType":"YulFunctionCall","src":"11255:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11271:25:11","statements":[{"nodeType":"YulAssignment","src":"11273:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11284:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11289:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11280:3:11"},"nodeType":"YulFunctionCall","src":"11280:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"11273:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"11233:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11235:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"11246:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"11239:3:11","type":""}]}]},"src":"11229:220:11"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10817:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10825:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"10833:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10841:5:11","type":""}],"src":"10745:710:11"},{"body":{"nodeType":"YulBlock","src":"11555:293:11","statements":[{"body":{"nodeType":"YulBlock","src":"11604:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11606:77:11"},"nodeType":"YulFunctionCall","src":"11606:79:11"},"nodeType":"YulExpressionStatement","src":"11606:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11583:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11591:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11579:3:11"},"nodeType":"YulFunctionCall","src":"11579:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"11598:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11575:3:11"},"nodeType":"YulFunctionCall","src":"11575:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11568:6:11"},"nodeType":"YulFunctionCall","src":"11568:35:11"},"nodeType":"YulIf","src":"11565:122:11"},{"nodeType":"YulVariableDeclaration","src":"11696:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11723:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11710:12:11"},"nodeType":"YulFunctionCall","src":"11710:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11700:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11739:103:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11815:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11823:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11811:3:11"},"nodeType":"YulFunctionCall","src":"11811:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"11830:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"11838:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11748:62:11"},"nodeType":"YulFunctionCall","src":"11748:94:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11739:5:11"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11533:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"11541:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11549:5:11","type":""}],"src":"11478:370:11"},{"body":{"nodeType":"YulBlock","src":"11987:761:11","statements":[{"body":{"nodeType":"YulBlock","src":"12033:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12035:77:11"},"nodeType":"YulFunctionCall","src":"12035:79:11"},"nodeType":"YulExpressionStatement","src":"12035:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12008:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12017:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12004:3:11"},"nodeType":"YulFunctionCall","src":"12004:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"12029:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12000:3:11"},"nodeType":"YulFunctionCall","src":"12000:32:11"},"nodeType":"YulIf","src":"11997:119:11"},{"nodeType":"YulBlock","src":"12126:302:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12141:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12172:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12183:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12168:3:11"},"nodeType":"YulFunctionCall","src":"12168:17:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12155:12:11"},"nodeType":"YulFunctionCall","src":"12155:31:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12145:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12233:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12235:77:11"},"nodeType":"YulFunctionCall","src":"12235:79:11"},"nodeType":"YulExpressionStatement","src":"12235:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12205:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12213:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12202:2:11"},"nodeType":"YulFunctionCall","src":"12202:30:11"},"nodeType":"YulIf","src":"12199:117:11"},{"nodeType":"YulAssignment","src":"12330:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12390:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"12401:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12386:3:11"},"nodeType":"YulFunctionCall","src":"12386:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12410:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12340:45:11"},"nodeType":"YulFunctionCall","src":"12340:78:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12330:6:11"}]}]},{"nodeType":"YulBlock","src":"12438:303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12453:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12484:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12495:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12480:3:11"},"nodeType":"YulFunctionCall","src":"12480:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12467:12:11"},"nodeType":"YulFunctionCall","src":"12467:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12457:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12546:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12548:77:11"},"nodeType":"YulFunctionCall","src":"12548:79:11"},"nodeType":"YulExpressionStatement","src":"12548:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12518:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12526:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12515:2:11"},"nodeType":"YulFunctionCall","src":"12515:30:11"},"nodeType":"YulIf","src":"12512:117:11"},{"nodeType":"YulAssignment","src":"12643:88:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12703:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"12714:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12699:3:11"},"nodeType":"YulFunctionCall","src":"12699:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12723:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12653:45:11"},"nodeType":"YulFunctionCall","src":"12653:78:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12643:6:11"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11949:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11960:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11972:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11980:6:11","type":""}],"src":"11854:894:11"},{"body":{"nodeType":"YulBlock","src":"12828:40:11","statements":[{"nodeType":"YulAssignment","src":"12839:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12855:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12849:5:11"},"nodeType":"YulFunctionCall","src":"12849:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12839:6:11"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12811:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12821:6:11","type":""}],"src":"12754:114:11"},{"body":{"nodeType":"YulBlock","src":"12985:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13002:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13007:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12995:6:11"},"nodeType":"YulFunctionCall","src":"12995:19:11"},"nodeType":"YulExpressionStatement","src":"12995:19:11"},{"nodeType":"YulAssignment","src":"13023:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13042:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13047:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13038:3:11"},"nodeType":"YulFunctionCall","src":"13038:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13023:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12957:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"12962:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12973:11:11","type":""}],"src":"12874:184:11"},{"body":{"nodeType":"YulBlock","src":"13136:60:11","statements":[{"nodeType":"YulAssignment","src":"13146:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13154:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13146:4:11"}]},{"nodeType":"YulAssignment","src":"13167:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13179:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13184:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13175:3:11"},"nodeType":"YulFunctionCall","src":"13175:14:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13167:4:11"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13123:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13131:4:11","type":""}],"src":"13064:132:11"},{"body":{"nodeType":"YulBlock","src":"13257:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13274:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13297:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13279:17:11"},"nodeType":"YulFunctionCall","src":"13279:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13267:6:11"},"nodeType":"YulFunctionCall","src":"13267:37:11"},"nodeType":"YulExpressionStatement","src":"13267:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13245:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13252:3:11","type":""}],"src":"13202:108:11"},{"body":{"nodeType":"YulBlock","src":"13396:99:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13440:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"13448:3:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13406:33:11"},"nodeType":"YulFunctionCall","src":"13406:46:11"},"nodeType":"YulExpressionStatement","src":"13406:46:11"},{"nodeType":"YulAssignment","src":"13461:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13479:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13484:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13475:3:11"},"nodeType":"YulFunctionCall","src":"13475:14:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13461:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13369:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13377:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13385:10:11","type":""}],"src":"13316:179:11"},{"body":{"nodeType":"YulBlock","src":"13576:38:11","statements":[{"nodeType":"YulAssignment","src":"13586:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13598:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13603:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13594:3:11"},"nodeType":"YulFunctionCall","src":"13594:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13586:4:11"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13563:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13571:4:11","type":""}],"src":"13501:113:11"},{"body":{"nodeType":"YulBlock","src":"13774:608:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13784:68:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13846:5:11"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13798:47:11"},"nodeType":"YulFunctionCall","src":"13798:54:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13788:6:11","type":""}]},{"nodeType":"YulAssignment","src":"13861:93:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13942:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13947:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13868:73:11"},"nodeType":"YulFunctionCall","src":"13868:86:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13861:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"13963:71:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14028:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13978:49:11"},"nodeType":"YulFunctionCall","src":"13978:56:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13967:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14043:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14057:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14047:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"14133:224:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14147:34:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14174:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14168:5:11"},"nodeType":"YulFunctionCall","src":"14168:13:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"14151:13:11","type":""}]},{"nodeType":"YulAssignment","src":"14194:70:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"14245:13:11"},{"name":"pos","nodeType":"YulIdentifier","src":"14260:3:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14201:43:11"},"nodeType":"YulFunctionCall","src":"14201:63:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14194:3:11"}]},{"nodeType":"YulAssignment","src":"14277:70:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14340:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14287:52:11"},"nodeType":"YulFunctionCall","src":"14287:60:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14277:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14095:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"14098:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14092:2:11"},"nodeType":"YulFunctionCall","src":"14092:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14106:18:11","statements":[{"nodeType":"YulAssignment","src":"14108:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14117:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"14120:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14113:3:11"},"nodeType":"YulFunctionCall","src":"14113:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14108:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"14077:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14079:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"14088:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14083:1:11","type":""}]}]},"src":"14073:284:11"},{"nodeType":"YulAssignment","src":"14366:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"14373:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14366:3:11"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13753:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13760:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13769:3:11","type":""}],"src":"13650:732:11"},{"body":{"nodeType":"YulBlock","src":"14536:225:11","statements":[{"nodeType":"YulAssignment","src":"14546:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14558:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14569:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14554:3:11"},"nodeType":"YulFunctionCall","src":"14554:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14546:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14593:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14604:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14589:3:11"},"nodeType":"YulFunctionCall","src":"14589:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14612:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14618:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14608:3:11"},"nodeType":"YulFunctionCall","src":"14608:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14582:6:11"},"nodeType":"YulFunctionCall","src":"14582:47:11"},"nodeType":"YulExpressionStatement","src":"14582:47:11"},{"nodeType":"YulAssignment","src":"14638:116:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14740:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"14749:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14646:93:11"},"nodeType":"YulFunctionCall","src":"14646:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14638:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14508:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14520:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14531:4:11","type":""}],"src":"14388:373:11"},{"body":{"nodeType":"YulBlock","src":"14832:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14849:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14872:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14854:17:11"},"nodeType":"YulFunctionCall","src":"14854:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14842:6:11"},"nodeType":"YulFunctionCall","src":"14842:37:11"},"nodeType":"YulExpressionStatement","src":"14842:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14820:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14827:3:11","type":""}],"src":"14767:118:11"},{"body":{"nodeType":"YulBlock","src":"14989:124:11","statements":[{"nodeType":"YulAssignment","src":"14999:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15011:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15022:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15007:3:11"},"nodeType":"YulFunctionCall","src":"15007:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14999:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15079:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15092:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15103:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15088:3:11"},"nodeType":"YulFunctionCall","src":"15088:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15035:43:11"},"nodeType":"YulFunctionCall","src":"15035:71:11"},"nodeType":"YulExpressionStatement","src":"15035:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14961:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14973:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14984:4:11","type":""}],"src":"14891:222:11"},{"body":{"nodeType":"YulBlock","src":"15159:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"15213:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15222:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15225:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15215:6:11"},"nodeType":"YulFunctionCall","src":"15215:12:11"},"nodeType":"YulExpressionStatement","src":"15215:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15182:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15204:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15189:14:11"},"nodeType":"YulFunctionCall","src":"15189:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15179:2:11"},"nodeType":"YulFunctionCall","src":"15179:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15172:6:11"},"nodeType":"YulFunctionCall","src":"15172:40:11"},"nodeType":"YulIf","src":"15169:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15152:5:11","type":""}],"src":"15119:116:11"},{"body":{"nodeType":"YulBlock","src":"15290:84:11","statements":[{"nodeType":"YulAssignment","src":"15300:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15322:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15309:12:11"},"nodeType":"YulFunctionCall","src":"15309:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15300:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15362:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15338:23:11"},"nodeType":"YulFunctionCall","src":"15338:30:11"},"nodeType":"YulExpressionStatement","src":"15338:30:11"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15268:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"15276:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15284:5:11","type":""}],"src":"15241:133:11"},{"body":{"nodeType":"YulBlock","src":"15460:388:11","statements":[{"body":{"nodeType":"YulBlock","src":"15506:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15508:77:11"},"nodeType":"YulFunctionCall","src":"15508:79:11"},"nodeType":"YulExpressionStatement","src":"15508:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15481:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15490:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15477:3:11"},"nodeType":"YulFunctionCall","src":"15477:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"15502:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15473:3:11"},"nodeType":"YulFunctionCall","src":"15473:32:11"},"nodeType":"YulIf","src":"15470:119:11"},{"nodeType":"YulBlock","src":"15599:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15614:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15628:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15618:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15643:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15678:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15689:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15674:3:11"},"nodeType":"YulFunctionCall","src":"15674:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15698:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15653:20:11"},"nodeType":"YulFunctionCall","src":"15653:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15643:6:11"}]}]},{"nodeType":"YulBlock","src":"15726:115:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15741:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15755:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15745:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15771:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15803:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15814:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15799:3:11"},"nodeType":"YulFunctionCall","src":"15799:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15823:7:11"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"15781:17:11"},"nodeType":"YulFunctionCall","src":"15781:50:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15771:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15422:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15433:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15445:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15453:6:11","type":""}],"src":"15380:468:11"},{"body":{"nodeType":"YulBlock","src":"15937:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"15983:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15985:77:11"},"nodeType":"YulFunctionCall","src":"15985:79:11"},"nodeType":"YulExpressionStatement","src":"15985:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15958:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15967:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15954:3:11"},"nodeType":"YulFunctionCall","src":"15954:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"15979:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15950:3:11"},"nodeType":"YulFunctionCall","src":"15950:32:11"},"nodeType":"YulIf","src":"15947:119:11"},{"nodeType":"YulBlock","src":"16076:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16091:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16105:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16095:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16120:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16155:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16166:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16151:3:11"},"nodeType":"YulFunctionCall","src":"16151:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16175:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16130:20:11"},"nodeType":"YulFunctionCall","src":"16130:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16120:6:11"}]}]},{"nodeType":"YulBlock","src":"16203:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16218:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16232:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16222:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16248:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16283:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16294:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16279:3:11"},"nodeType":"YulFunctionCall","src":"16279:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16303:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16258:20:11"},"nodeType":"YulFunctionCall","src":"16258:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16248:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15899:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15910:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15922:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15930:6:11","type":""}],"src":"15854:474:11"},{"body":{"nodeType":"YulBlock","src":"16477:946:11","statements":[{"body":{"nodeType":"YulBlock","src":"16524:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16526:77:11"},"nodeType":"YulFunctionCall","src":"16526:79:11"},"nodeType":"YulExpressionStatement","src":"16526:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16498:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16507:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16494:3:11"},"nodeType":"YulFunctionCall","src":"16494:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"16519:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16490:3:11"},"nodeType":"YulFunctionCall","src":"16490:33:11"},"nodeType":"YulIf","src":"16487:120:11"},{"nodeType":"YulBlock","src":"16617:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16632:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16646:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16636:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16661:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16696:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16707:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16692:3:11"},"nodeType":"YulFunctionCall","src":"16692:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16716:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16671:20:11"},"nodeType":"YulFunctionCall","src":"16671:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16661:6:11"}]}]},{"nodeType":"YulBlock","src":"16744:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16759:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16773:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16763:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16789:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16824:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16835:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16820:3:11"},"nodeType":"YulFunctionCall","src":"16820:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16844:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16799:20:11"},"nodeType":"YulFunctionCall","src":"16799:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16789:6:11"}]}]},{"nodeType":"YulBlock","src":"16872:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16887:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16901:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16891:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16917:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16952:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16963:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16948:3:11"},"nodeType":"YulFunctionCall","src":"16948:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16972:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16927:20:11"},"nodeType":"YulFunctionCall","src":"16927:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16917:6:11"}]}]},{"nodeType":"YulBlock","src":"17000:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17015:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17029:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17019:6:11","type":""}]},{"nodeType":"YulAssignment","src":"17045:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17080:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"17091:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17076:3:11"},"nodeType":"YulFunctionCall","src":"17076:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17100:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17055:20:11"},"nodeType":"YulFunctionCall","src":"17055:53:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17045:6:11"}]}]},{"nodeType":"YulBlock","src":"17128:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17143:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17174:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17185:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17170:3:11"},"nodeType":"YulFunctionCall","src":"17170:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17157:12:11"},"nodeType":"YulFunctionCall","src":"17157:33:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17147:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"17237:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17239:77:11"},"nodeType":"YulFunctionCall","src":"17239:79:11"},"nodeType":"YulExpressionStatement","src":"17239:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17209:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17217:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17206:2:11"},"nodeType":"YulFunctionCall","src":"17206:30:11"},"nodeType":"YulIf","src":"17203:117:11"},{"nodeType":"YulAssignment","src":"17334:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17378:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"17389:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17374:3:11"},"nodeType":"YulFunctionCall","src":"17374:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17398:7:11"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17344:29:11"},"nodeType":"YulFunctionCall","src":"17344:62:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"17334:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16415:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16426:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16438:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16446:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16454:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16462:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16470:6:11","type":""}],"src":"16334:1089:11"},{"body":{"nodeType":"YulBlock","src":"17535:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17557:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17565:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17553:3:11"},"nodeType":"YulFunctionCall","src":"17553:14:11"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"17569:34:11","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17546:6:11"},"nodeType":"YulFunctionCall","src":"17546:58:11"},"nodeType":"YulExpressionStatement","src":"17546:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17625:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17633:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17621:3:11"},"nodeType":"YulFunctionCall","src":"17621:15:11"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17638:12:11","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17614:6:11"},"nodeType":"YulFunctionCall","src":"17614:37:11"},"nodeType":"YulExpressionStatement","src":"17614:37:11"}]},"name":"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17527:6:11","type":""}],"src":"17429:229:11"},{"body":{"nodeType":"YulBlock","src":"17810:220:11","statements":[{"nodeType":"YulAssignment","src":"17820:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17886:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17891:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17827:58:11"},"nodeType":"YulFunctionCall","src":"17827:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17820:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17992:3:11"}],"functionName":{"name":"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","nodeType":"YulIdentifier","src":"17903:88:11"},"nodeType":"YulFunctionCall","src":"17903:93:11"},"nodeType":"YulExpressionStatement","src":"17903:93:11"},{"nodeType":"YulAssignment","src":"18005:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18016:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18021:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18012:3:11"},"nodeType":"YulFunctionCall","src":"18012:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18005:3:11"}]}]},"name":"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17798:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17806:3:11","type":""}],"src":"17664:366:11"},{"body":{"nodeType":"YulBlock","src":"18207:248:11","statements":[{"nodeType":"YulAssignment","src":"18217:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18229:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18240:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18225:3:11"},"nodeType":"YulFunctionCall","src":"18225:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18217:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18264:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18275:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18260:3:11"},"nodeType":"YulFunctionCall","src":"18260:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18283:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"18289:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18279:3:11"},"nodeType":"YulFunctionCall","src":"18279:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18253:6:11"},"nodeType":"YulFunctionCall","src":"18253:47:11"},"nodeType":"YulExpressionStatement","src":"18253:47:11"},{"nodeType":"YulAssignment","src":"18309:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18443:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18317:124:11"},"nodeType":"YulFunctionCall","src":"18317:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18309:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18187:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18202:4:11","type":""}],"src":"18036:419:11"},{"body":{"nodeType":"YulBlock","src":"18489:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18506:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18509:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18499:6:11"},"nodeType":"YulFunctionCall","src":"18499:88:11"},"nodeType":"YulExpressionStatement","src":"18499:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18603:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18606:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18596:6:11"},"nodeType":"YulFunctionCall","src":"18596:15:11"},"nodeType":"YulExpressionStatement","src":"18596:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18627:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18630:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18620:6:11"},"nodeType":"YulFunctionCall","src":"18620:15:11"},"nodeType":"YulExpressionStatement","src":"18620:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"18461:180:11"},{"body":{"nodeType":"YulBlock","src":"18698:269:11","statements":[{"nodeType":"YulAssignment","src":"18708:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18722:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"18728:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18718:3:11"},"nodeType":"YulFunctionCall","src":"18718:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18708:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"18739:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18769:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"18775:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18765:3:11"},"nodeType":"YulFunctionCall","src":"18765:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18743:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"18816:51:11","statements":[{"nodeType":"YulAssignment","src":"18830:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18844:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18852:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18840:3:11"},"nodeType":"YulFunctionCall","src":"18840:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18830:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18796:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18789:6:11"},"nodeType":"YulFunctionCall","src":"18789:26:11"},"nodeType":"YulIf","src":"18786:81:11"},{"body":{"nodeType":"YulBlock","src":"18919:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18933:16:11"},"nodeType":"YulFunctionCall","src":"18933:18:11"},"nodeType":"YulExpressionStatement","src":"18933:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18883:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18906:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18914:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18903:2:11"},"nodeType":"YulFunctionCall","src":"18903:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18880:2:11"},"nodeType":"YulFunctionCall","src":"18880:38:11"},"nodeType":"YulIf","src":"18877:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18682:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18691:6:11","type":""}],"src":"18647:320:11"},{"body":{"nodeType":"YulBlock","src":"19087:34:11","statements":[{"nodeType":"YulAssignment","src":"19097:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"19112:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19097:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19059:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"19064:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19075:11:11","type":""}],"src":"18973:148:11"},{"body":{"nodeType":"YulBlock","src":"19181:87:11","statements":[{"nodeType":"YulAssignment","src":"19191:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"19199:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19191:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19219:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"19222:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19212:6:11"},"nodeType":"YulFunctionCall","src":"19212:14:11"},"nodeType":"YulExpressionStatement","src":"19212:14:11"},{"nodeType":"YulAssignment","src":"19235:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19253:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19256:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19243:9:11"},"nodeType":"YulFunctionCall","src":"19243:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19235:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"19168:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"19176:4:11","type":""}],"src":"19127:141:11"},{"body":{"nodeType":"YulBlock","src":"19405:767:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19415:29:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19438:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19432:5:11"},"nodeType":"YulFunctionCall","src":"19432:12:11"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"19419:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19453:50:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"19493:9:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"19467:25:11"},"nodeType":"YulFunctionCall","src":"19467:36:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19457:6:11","type":""}]},{"nodeType":"YulAssignment","src":"19512:96:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19596:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"19601:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19519:76:11"},"nodeType":"YulFunctionCall","src":"19519:89:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19512:3:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"19657:159:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19710:3:11"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"19719:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19734:4:11","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19730:3:11"},"nodeType":"YulFunctionCall","src":"19730:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19715:3:11"},"nodeType":"YulFunctionCall","src":"19715:25:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19703:6:11"},"nodeType":"YulFunctionCall","src":"19703:38:11"},"nodeType":"YulExpressionStatement","src":"19703:38:11"},{"nodeType":"YulAssignment","src":"19754:52:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19765:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19774:6:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19796:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19789:6:11"},"nodeType":"YulFunctionCall","src":"19789:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19782:6:11"},"nodeType":"YulFunctionCall","src":"19782:22:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19770:3:11"},"nodeType":"YulFunctionCall","src":"19770:35:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19761:3:11"},"nodeType":"YulFunctionCall","src":"19761:45:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19754:3:11"}]}]},"nodeType":"YulCase","src":"19650:166:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19655:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"19832:334:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19877:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19924:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"19892:31:11"},"nodeType":"YulFunctionCall","src":"19892:38:11"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"19881:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19943:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19952:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19947:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"20010:110:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20039:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"20044:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20035:3:11"},"nodeType":"YulFunctionCall","src":"20035:11:11"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20054:7:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20048:5:11"},"nodeType":"YulFunctionCall","src":"20048:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20028:6:11"},"nodeType":"YulFunctionCall","src":"20028:35:11"},"nodeType":"YulExpressionStatement","src":"20028:35:11"},{"nodeType":"YulAssignment","src":"20080:26:11","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20095:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"20104:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20091:3:11"},"nodeType":"YulFunctionCall","src":"20091:15:11"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20080:7:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19977:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"19980:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19974:2:11"},"nodeType":"YulFunctionCall","src":"19974:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19988:21:11","statements":[{"nodeType":"YulAssignment","src":"19990:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19999:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"20002:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19995:3:11"},"nodeType":"YulFunctionCall","src":"19995:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19990:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"19970:3:11","statements":[]},"src":"19966:154:11"},{"nodeType":"YulAssignment","src":"20133:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20144:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"20149:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20140:3:11"},"nodeType":"YulFunctionCall","src":"20140:16:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20133:3:11"}]}]},"nodeType":"YulCase","src":"19825:341:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19830:1:11","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"19628:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19639:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19624:3:11"},"nodeType":"YulFunctionCall","src":"19624:17:11"},"nodeType":"YulSwitch","src":"19617:549:11"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19386:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19393:3:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19401:3:11","type":""}],"src":"19298:874:11"},{"body":{"nodeType":"YulBlock","src":"20288:280:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20298:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20345:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20312:32:11"},"nodeType":"YulFunctionCall","src":"20312:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20302:6:11","type":""}]},{"nodeType":"YulAssignment","src":"20360:96:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20444:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"20449:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20367:76:11"},"nodeType":"YulFunctionCall","src":"20367:89:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20360:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20504:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"20511:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20500:3:11"},"nodeType":"YulFunctionCall","src":"20500:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"20518:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"20523:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20465:34:11"},"nodeType":"YulFunctionCall","src":"20465:65:11"},"nodeType":"YulExpressionStatement","src":"20465:65:11"},{"nodeType":"YulAssignment","src":"20539:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20550:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"20555:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20546:3:11"},"nodeType":"YulFunctionCall","src":"20546:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20539:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20269:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20276:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20284:3:11","type":""}],"src":"20178:390:11"},{"body":{"nodeType":"YulBlock","src":"20755:248:11","statements":[{"nodeType":"YulAssignment","src":"20766:99:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20852:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"20861:3:11"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20773:78:11"},"nodeType":"YulFunctionCall","src":"20773:92:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20766:3:11"}]},{"nodeType":"YulAssignment","src":"20875:102:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20964:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"20973:3:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20882:81:11"},"nodeType":"YulFunctionCall","src":"20882:95:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20875:3:11"}]},{"nodeType":"YulAssignment","src":"20987:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"20994:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20987:3:11"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20726:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20732:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20740:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20751:3:11","type":""}],"src":"20574:429:11"},{"body":{"nodeType":"YulBlock","src":"21115:128:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21137:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21145:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21133:3:11"},"nodeType":"YulFunctionCall","src":"21133:14:11"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"21149:34:11","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21126:6:11"},"nodeType":"YulFunctionCall","src":"21126:58:11"},"nodeType":"YulExpressionStatement","src":"21126:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21205:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21213:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21201:3:11"},"nodeType":"YulFunctionCall","src":"21201:15:11"},{"hexValue":"6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"21218:17:11","type":"","value":"er nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21194:6:11"},"nodeType":"YulFunctionCall","src":"21194:42:11"},"nodeType":"YulExpressionStatement","src":"21194:42:11"}]},"name":"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21107:6:11","type":""}],"src":"21009:234:11"},{"body":{"nodeType":"YulBlock","src":"21395:220:11","statements":[{"nodeType":"YulAssignment","src":"21405:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21471:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21476:2:11","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21412:58:11"},"nodeType":"YulFunctionCall","src":"21412:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21405:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21577:3:11"}],"functionName":{"name":"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370","nodeType":"YulIdentifier","src":"21488:88:11"},"nodeType":"YulFunctionCall","src":"21488:93:11"},"nodeType":"YulExpressionStatement","src":"21488:93:11"},{"nodeType":"YulAssignment","src":"21590:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21601:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21606:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21597:3:11"},"nodeType":"YulFunctionCall","src":"21597:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21590:3:11"}]}]},"name":"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21383:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21391:3:11","type":""}],"src":"21249:366:11"},{"body":{"nodeType":"YulBlock","src":"21792:248:11","statements":[{"nodeType":"YulAssignment","src":"21802:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21814:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21825:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21810:3:11"},"nodeType":"YulFunctionCall","src":"21810:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21802:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21849:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21860:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21845:3:11"},"nodeType":"YulFunctionCall","src":"21845:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21868:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"21874:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21864:3:11"},"nodeType":"YulFunctionCall","src":"21864:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21838:6:11"},"nodeType":"YulFunctionCall","src":"21838:47:11"},"nodeType":"YulExpressionStatement","src":"21838:47:11"},{"nodeType":"YulAssignment","src":"21894:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22028:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21902:124:11"},"nodeType":"YulFunctionCall","src":"21902:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21894:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21772:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21787:4:11","type":""}],"src":"21621:419:11"},{"body":{"nodeType":"YulBlock","src":"22152:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22174:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22182:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22170:3:11"},"nodeType":"YulFunctionCall","src":"22170:14:11"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"22186:34:11","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22163:6:11"},"nodeType":"YulFunctionCall","src":"22163:58:11"},"nodeType":"YulExpressionStatement","src":"22163:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22242:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22250:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22238:3:11"},"nodeType":"YulFunctionCall","src":"22238:15:11"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"22255:11:11","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22231:6:11"},"nodeType":"YulFunctionCall","src":"22231:36:11"},"nodeType":"YulExpressionStatement","src":"22231:36:11"}]},"name":"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22144:6:11","type":""}],"src":"22046:228:11"},{"body":{"nodeType":"YulBlock","src":"22426:220:11","statements":[{"nodeType":"YulAssignment","src":"22436:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22502:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22507:2:11","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22443:58:11"},"nodeType":"YulFunctionCall","src":"22443:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22436:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22608:3:11"}],"functionName":{"name":"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","nodeType":"YulIdentifier","src":"22519:88:11"},"nodeType":"YulFunctionCall","src":"22519:93:11"},"nodeType":"YulExpressionStatement","src":"22519:93:11"},{"nodeType":"YulAssignment","src":"22621:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22632:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22637:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22628:3:11"},"nodeType":"YulFunctionCall","src":"22628:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22621:3:11"}]}]},"name":"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22414:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22422:3:11","type":""}],"src":"22280:366:11"},{"body":{"nodeType":"YulBlock","src":"22823:248:11","statements":[{"nodeType":"YulAssignment","src":"22833:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22845:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22856:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22841:3:11"},"nodeType":"YulFunctionCall","src":"22841:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22833:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22880:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22891:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22876:3:11"},"nodeType":"YulFunctionCall","src":"22876:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22899:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"22905:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22895:3:11"},"nodeType":"YulFunctionCall","src":"22895:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22869:6:11"},"nodeType":"YulFunctionCall","src":"22869:47:11"},"nodeType":"YulExpressionStatement","src":"22869:47:11"},{"nodeType":"YulAssignment","src":"22925:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23059:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22933:124:11"},"nodeType":"YulFunctionCall","src":"22933:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22925:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22803:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22818:4:11","type":""}],"src":"22652:419:11"},{"body":{"nodeType":"YulBlock","src":"23105:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23122:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23125:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23115:6:11"},"nodeType":"YulFunctionCall","src":"23115:88:11"},"nodeType":"YulExpressionStatement","src":"23115:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23219:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23222:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23212:6:11"},"nodeType":"YulFunctionCall","src":"23212:15:11"},"nodeType":"YulExpressionStatement","src":"23212:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23243:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23246:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23236:6:11"},"nodeType":"YulFunctionCall","src":"23236:15:11"},"nodeType":"YulExpressionStatement","src":"23236:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"23077:180:11"},{"body":{"nodeType":"YulBlock","src":"23291:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23308:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23311:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23301:6:11"},"nodeType":"YulFunctionCall","src":"23301:88:11"},"nodeType":"YulExpressionStatement","src":"23301:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23405:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23408:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23398:6:11"},"nodeType":"YulFunctionCall","src":"23398:15:11"},"nodeType":"YulExpressionStatement","src":"23398:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23429:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23432:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23422:6:11"},"nodeType":"YulFunctionCall","src":"23422:15:11"},"nodeType":"YulExpressionStatement","src":"23422:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23263:180:11"},{"body":{"nodeType":"YulBlock","src":"23492:190:11","statements":[{"nodeType":"YulAssignment","src":"23502:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23529:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23511:17:11"},"nodeType":"YulFunctionCall","src":"23511:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23502:5:11"}]},{"body":{"nodeType":"YulBlock","src":"23625:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23627:16:11"},"nodeType":"YulFunctionCall","src":"23627:18:11"},"nodeType":"YulExpressionStatement","src":"23627:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23550:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"23557:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23547:2:11"},"nodeType":"YulFunctionCall","src":"23547:77:11"},"nodeType":"YulIf","src":"23544:103:11"},{"nodeType":"YulAssignment","src":"23656:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23667:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"23674:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23663:3:11"},"nodeType":"YulFunctionCall","src":"23663:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23656:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23478:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23488:3:11","type":""}],"src":"23449:233:11"},{"body":{"nodeType":"YulBlock","src":"23736:362:11","statements":[{"nodeType":"YulAssignment","src":"23746:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23769:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23751:17:11"},"nodeType":"YulFunctionCall","src":"23751:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23746:1:11"}]},{"nodeType":"YulAssignment","src":"23780:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23803:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23785:17:11"},"nodeType":"YulFunctionCall","src":"23785:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23780:1:11"}]},{"nodeType":"YulVariableDeclaration","src":"23814:28:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23837:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"23840:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23833:3:11"},"nodeType":"YulFunctionCall","src":"23833:9:11"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"23818:11:11","type":""}]},{"nodeType":"YulAssignment","src":"23851:41:11","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"23880:11:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23862:17:11"},"nodeType":"YulFunctionCall","src":"23862:30:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23851:7:11"}]},{"body":{"nodeType":"YulBlock","src":"24069:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24071:16:11"},"nodeType":"YulFunctionCall","src":"24071:18:11"},"nodeType":"YulExpressionStatement","src":"24071:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24002:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23995:6:11"},"nodeType":"YulFunctionCall","src":"23995:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24025:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"24032:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"24041:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24028:3:11"},"nodeType":"YulFunctionCall","src":"24028:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24022:2:11"},"nodeType":"YulFunctionCall","src":"24022:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23975:2:11"},"nodeType":"YulFunctionCall","src":"23975:83:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23955:6:11"},"nodeType":"YulFunctionCall","src":"23955:113:11"},"nodeType":"YulIf","src":"23952:139:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23719:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"23722:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23728:7:11","type":""}],"src":"23688:410:11"},{"body":{"nodeType":"YulBlock","src":"24148:147:11","statements":[{"nodeType":"YulAssignment","src":"24158:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24181:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24163:17:11"},"nodeType":"YulFunctionCall","src":"24163:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24158:1:11"}]},{"nodeType":"YulAssignment","src":"24192:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24215:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24197:17:11"},"nodeType":"YulFunctionCall","src":"24197:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24192:1:11"}]},{"nodeType":"YulAssignment","src":"24226:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24237:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"24240:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24233:3:11"},"nodeType":"YulFunctionCall","src":"24233:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24226:3:11"}]},{"body":{"nodeType":"YulBlock","src":"24266:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24268:16:11"},"nodeType":"YulFunctionCall","src":"24268:18:11"},"nodeType":"YulExpressionStatement","src":"24268:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24258:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"24261:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24255:2:11"},"nodeType":"YulFunctionCall","src":"24255:10:11"},"nodeType":"YulIf","src":"24252:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24135:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"24138:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24144:3:11","type":""}],"src":"24104:191:11"},{"body":{"nodeType":"YulBlock","src":"24414:34:11","statements":[{"nodeType":"YulAssignment","src":"24424:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"24439:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24424:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24386:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"24391:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24402:11:11","type":""}],"src":"24301:147:11"},{"body":{"nodeType":"YulBlock","src":"24560:8:11","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24552:6:11","type":""}],"src":"24454:114:11"},{"body":{"nodeType":"YulBlock","src":"24737:235:11","statements":[{"nodeType":"YulAssignment","src":"24747:90:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24830:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"24835:1:11","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24754:75:11"},"nodeType":"YulFunctionCall","src":"24754:83:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24747:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24935:3:11"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"24846:88:11"},"nodeType":"YulFunctionCall","src":"24846:93:11"},"nodeType":"YulExpressionStatement","src":"24846:93:11"},{"nodeType":"YulAssignment","src":"24948:18:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24959:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"24964:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24955:3:11"},"nodeType":"YulFunctionCall","src":"24955:11:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24948:3:11"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24725:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24733:3:11","type":""}],"src":"24574:398:11"},{"body":{"nodeType":"YulBlock","src":"25166:191:11","statements":[{"nodeType":"YulAssignment","src":"25177:154:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25327:3:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25184:141:11"},"nodeType":"YulFunctionCall","src":"25184:147:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25177:3:11"}]},{"nodeType":"YulAssignment","src":"25341:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"25348:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25341:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25153:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25162:3:11","type":""}],"src":"24978:379:11"},{"body":{"nodeType":"YulBlock","src":"25469:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25491:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25499:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25487:3:11"},"nodeType":"YulFunctionCall","src":"25487:14:11"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"25503:34:11","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25480:6:11"},"nodeType":"YulFunctionCall","src":"25480:58:11"},"nodeType":"YulExpressionStatement","src":"25480:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25559:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25567:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25555:3:11"},"nodeType":"YulFunctionCall","src":"25555:15:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"25572:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25548:6:11"},"nodeType":"YulFunctionCall","src":"25548:33:11"},"nodeType":"YulExpressionStatement","src":"25548:33:11"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25461:6:11","type":""}],"src":"25363:225:11"},{"body":{"nodeType":"YulBlock","src":"25740:220:11","statements":[{"nodeType":"YulAssignment","src":"25750:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25816:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25821:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25757:58:11"},"nodeType":"YulFunctionCall","src":"25757:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25750:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25922:3:11"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"25833:88:11"},"nodeType":"YulFunctionCall","src":"25833:93:11"},"nodeType":"YulExpressionStatement","src":"25833:93:11"},{"nodeType":"YulAssignment","src":"25935:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25946:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25951:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25942:3:11"},"nodeType":"YulFunctionCall","src":"25942:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25935:3:11"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25728:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25736:3:11","type":""}],"src":"25594:366:11"},{"body":{"nodeType":"YulBlock","src":"26137:248:11","statements":[{"nodeType":"YulAssignment","src":"26147:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26159:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26170:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26155:3:11"},"nodeType":"YulFunctionCall","src":"26155:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26147:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26194:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26205:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26190:3:11"},"nodeType":"YulFunctionCall","src":"26190:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26213:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"26219:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26209:3:11"},"nodeType":"YulFunctionCall","src":"26209:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26183:6:11"},"nodeType":"YulFunctionCall","src":"26183:47:11"},"nodeType":"YulExpressionStatement","src":"26183:47:11"},{"nodeType":"YulAssignment","src":"26239:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26373:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26247:124:11"},"nodeType":"YulFunctionCall","src":"26247:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26239:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26117:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26132:4:11","type":""}],"src":"25966:419:11"},{"body":{"nodeType":"YulBlock","src":"26419:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26436:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26439:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26429:6:11"},"nodeType":"YulFunctionCall","src":"26429:88:11"},"nodeType":"YulExpressionStatement","src":"26429:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26533:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26536:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26526:6:11"},"nodeType":"YulFunctionCall","src":"26526:15:11"},"nodeType":"YulExpressionStatement","src":"26526:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26557:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26560:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26550:6:11"},"nodeType":"YulFunctionCall","src":"26550:15:11"},"nodeType":"YulExpressionStatement","src":"26550:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"26391:180:11"},{"body":{"nodeType":"YulBlock","src":"26619:143:11","statements":[{"nodeType":"YulAssignment","src":"26629:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26652:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26634:17:11"},"nodeType":"YulFunctionCall","src":"26634:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26629:1:11"}]},{"nodeType":"YulAssignment","src":"26663:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26686:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26668:17:11"},"nodeType":"YulFunctionCall","src":"26668:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26663:1:11"}]},{"body":{"nodeType":"YulBlock","src":"26710:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"26712:16:11"},"nodeType":"YulFunctionCall","src":"26712:18:11"},"nodeType":"YulExpressionStatement","src":"26712:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26707:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26700:6:11"},"nodeType":"YulFunctionCall","src":"26700:9:11"},"nodeType":"YulIf","src":"26697:35:11"},{"nodeType":"YulAssignment","src":"26742:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26751:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"26754:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26747:3:11"},"nodeType":"YulFunctionCall","src":"26747:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"26742:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26608:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"26611:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"26617:1:11","type":""}],"src":"26577:185:11"},{"body":{"nodeType":"YulBlock","src":"26813:149:11","statements":[{"nodeType":"YulAssignment","src":"26823:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26846:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26828:17:11"},"nodeType":"YulFunctionCall","src":"26828:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26823:1:11"}]},{"nodeType":"YulAssignment","src":"26857:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26880:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26862:17:11"},"nodeType":"YulFunctionCall","src":"26862:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26857:1:11"}]},{"nodeType":"YulAssignment","src":"26891:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26903:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"26906:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26899:3:11"},"nodeType":"YulFunctionCall","src":"26899:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"26891:4:11"}]},{"body":{"nodeType":"YulBlock","src":"26933:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26935:16:11"},"nodeType":"YulFunctionCall","src":"26935:18:11"},"nodeType":"YulExpressionStatement","src":"26935:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"26924:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"26930:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26921:2:11"},"nodeType":"YulFunctionCall","src":"26921:11:11"},"nodeType":"YulIf","src":"26918:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26799:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"26802:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"26808:4:11","type":""}],"src":"26768:194:11"},{"body":{"nodeType":"YulBlock","src":"27002:142:11","statements":[{"nodeType":"YulAssignment","src":"27012:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27035:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27017:17:11"},"nodeType":"YulFunctionCall","src":"27017:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27012:1:11"}]},{"nodeType":"YulAssignment","src":"27046:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27069:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27051:17:11"},"nodeType":"YulFunctionCall","src":"27051:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27046:1:11"}]},{"body":{"nodeType":"YulBlock","src":"27093:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27095:16:11"},"nodeType":"YulFunctionCall","src":"27095:18:11"},"nodeType":"YulExpressionStatement","src":"27095:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27090:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27083:6:11"},"nodeType":"YulFunctionCall","src":"27083:9:11"},"nodeType":"YulIf","src":"27080:35:11"},{"nodeType":"YulAssignment","src":"27124:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27133:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"27136:1:11"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"27129:3:11"},"nodeType":"YulFunctionCall","src":"27129:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27124:1:11"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26991:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"26994:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27000:1:11","type":""}],"src":"26968:176:11"},{"body":{"nodeType":"YulBlock","src":"27256:121:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27278:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"27286:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27274:3:11"},"nodeType":"YulFunctionCall","src":"27274:14:11"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"27290:34:11","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27267:6:11"},"nodeType":"YulFunctionCall","src":"27267:58:11"},"nodeType":"YulExpressionStatement","src":"27267:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27346:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"27354:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27342:3:11"},"nodeType":"YulFunctionCall","src":"27342:15:11"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"27359:10:11","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27335:6:11"},"nodeType":"YulFunctionCall","src":"27335:35:11"},"nodeType":"YulExpressionStatement","src":"27335:35:11"}]},"name":"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27248:6:11","type":""}],"src":"27150:227:11"},{"body":{"nodeType":"YulBlock","src":"27529:220:11","statements":[{"nodeType":"YulAssignment","src":"27539:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27605:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"27610:2:11","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27546:58:11"},"nodeType":"YulFunctionCall","src":"27546:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27539:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27711:3:11"}],"functionName":{"name":"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","nodeType":"YulIdentifier","src":"27622:88:11"},"nodeType":"YulFunctionCall","src":"27622:93:11"},"nodeType":"YulExpressionStatement","src":"27622:93:11"},{"nodeType":"YulAssignment","src":"27724:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27735:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"27740:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27731:3:11"},"nodeType":"YulFunctionCall","src":"27731:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27724:3:11"}]}]},"name":"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27517:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27525:3:11","type":""}],"src":"27383:366:11"},{"body":{"nodeType":"YulBlock","src":"27926:248:11","statements":[{"nodeType":"YulAssignment","src":"27936:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27948:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27959:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27944:3:11"},"nodeType":"YulFunctionCall","src":"27944:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27936:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27983:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27994:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27979:3:11"},"nodeType":"YulFunctionCall","src":"27979:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28002:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"28008:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27998:3:11"},"nodeType":"YulFunctionCall","src":"27998:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27972:6:11"},"nodeType":"YulFunctionCall","src":"27972:47:11"},"nodeType":"YulExpressionStatement","src":"27972:47:11"},{"nodeType":"YulAssignment","src":"28028:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28162:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28036:124:11"},"nodeType":"YulFunctionCall","src":"28036:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28028:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27906:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27921:4:11","type":""}],"src":"27755:419:11"},{"body":{"nodeType":"YulBlock","src":"28286:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28308:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28316:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28304:3:11"},"nodeType":"YulFunctionCall","src":"28304:14:11"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"28320:34:11","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28297:6:11"},"nodeType":"YulFunctionCall","src":"28297:58:11"},"nodeType":"YulExpressionStatement","src":"28297:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28376:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28384:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28372:3:11"},"nodeType":"YulFunctionCall","src":"28372:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"28389:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28365:6:11"},"nodeType":"YulFunctionCall","src":"28365:32:11"},"nodeType":"YulExpressionStatement","src":"28365:32:11"}]},"name":"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28278:6:11","type":""}],"src":"28180:224:11"},{"body":{"nodeType":"YulBlock","src":"28556:220:11","statements":[{"nodeType":"YulAssignment","src":"28566:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28632:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"28637:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28573:58:11"},"nodeType":"YulFunctionCall","src":"28573:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28566:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28738:3:11"}],"functionName":{"name":"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","nodeType":"YulIdentifier","src":"28649:88:11"},"nodeType":"YulFunctionCall","src":"28649:93:11"},"nodeType":"YulExpressionStatement","src":"28649:93:11"},{"nodeType":"YulAssignment","src":"28751:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28762:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"28767:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28758:3:11"},"nodeType":"YulFunctionCall","src":"28758:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28751:3:11"}]}]},"name":"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28544:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28552:3:11","type":""}],"src":"28410:366:11"},{"body":{"nodeType":"YulBlock","src":"28953:248:11","statements":[{"nodeType":"YulAssignment","src":"28963:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28975:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"28986:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28971:3:11"},"nodeType":"YulFunctionCall","src":"28971:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28963:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29010:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29021:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29006:3:11"},"nodeType":"YulFunctionCall","src":"29006:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29029:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"29035:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29025:3:11"},"nodeType":"YulFunctionCall","src":"29025:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28999:6:11"},"nodeType":"YulFunctionCall","src":"28999:47:11"},"nodeType":"YulExpressionStatement","src":"28999:47:11"},{"nodeType":"YulAssignment","src":"29055:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29189:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29063:124:11"},"nodeType":"YulFunctionCall","src":"29063:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29055:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28933:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28948:4:11","type":""}],"src":"28782:419:11"},{"body":{"nodeType":"YulBlock","src":"29313:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29335:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29343:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29331:3:11"},"nodeType":"YulFunctionCall","src":"29331:14:11"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"29347:34:11","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29324:6:11"},"nodeType":"YulFunctionCall","src":"29324:58:11"},"nodeType":"YulExpressionStatement","src":"29324:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29403:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29411:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29399:3:11"},"nodeType":"YulFunctionCall","src":"29399:15:11"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"29416:12:11","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29392:6:11"},"nodeType":"YulFunctionCall","src":"29392:37:11"},"nodeType":"YulExpressionStatement","src":"29392:37:11"}]},"name":"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29305:6:11","type":""}],"src":"29207:229:11"},{"body":{"nodeType":"YulBlock","src":"29588:220:11","statements":[{"nodeType":"YulAssignment","src":"29598:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29664:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"29669:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29605:58:11"},"nodeType":"YulFunctionCall","src":"29605:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29598:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29770:3:11"}],"functionName":{"name":"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","nodeType":"YulIdentifier","src":"29681:88:11"},"nodeType":"YulFunctionCall","src":"29681:93:11"},"nodeType":"YulExpressionStatement","src":"29681:93:11"},{"nodeType":"YulAssignment","src":"29783:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29794:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"29799:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29790:3:11"},"nodeType":"YulFunctionCall","src":"29790:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29783:3:11"}]}]},"name":"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29576:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29584:3:11","type":""}],"src":"29442:366:11"},{"body":{"nodeType":"YulBlock","src":"29985:248:11","statements":[{"nodeType":"YulAssignment","src":"29995:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30007:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30018:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30003:3:11"},"nodeType":"YulFunctionCall","src":"30003:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29995:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30042:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30053:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30038:3:11"},"nodeType":"YulFunctionCall","src":"30038:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30061:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"30067:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30057:3:11"},"nodeType":"YulFunctionCall","src":"30057:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30031:6:11"},"nodeType":"YulFunctionCall","src":"30031:47:11"},"nodeType":"YulExpressionStatement","src":"30031:47:11"},{"nodeType":"YulAssignment","src":"30087:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30221:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30095:124:11"},"nodeType":"YulFunctionCall","src":"30095:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30087:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29965:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29980:4:11","type":""}],"src":"29814:419:11"},{"body":{"nodeType":"YulBlock","src":"30465:408:11","statements":[{"nodeType":"YulAssignment","src":"30475:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30487:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30498:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30483:3:11"},"nodeType":"YulFunctionCall","src":"30483:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30475:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30522:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30533:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30518:3:11"},"nodeType":"YulFunctionCall","src":"30518:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30541:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"30547:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30537:3:11"},"nodeType":"YulFunctionCall","src":"30537:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30511:6:11"},"nodeType":"YulFunctionCall","src":"30511:47:11"},"nodeType":"YulExpressionStatement","src":"30511:47:11"},{"nodeType":"YulAssignment","src":"30567:116:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30669:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"30678:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30575:93:11"},"nodeType":"YulFunctionCall","src":"30575:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30567:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30704:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30715:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30700:3:11"},"nodeType":"YulFunctionCall","src":"30700:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30724:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"30730:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30720:3:11"},"nodeType":"YulFunctionCall","src":"30720:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30693:6:11"},"nodeType":"YulFunctionCall","src":"30693:48:11"},"nodeType":"YulExpressionStatement","src":"30693:48:11"},{"nodeType":"YulAssignment","src":"30750:116:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30852:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"30861:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30758:93:11"},"nodeType":"YulFunctionCall","src":"30758:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30750:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30429:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30441:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30449:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30460:4:11","type":""}],"src":"30239:634:11"},{"body":{"nodeType":"YulBlock","src":"30985:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31007:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"31015:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31003:3:11"},"nodeType":"YulFunctionCall","src":"31003:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"31019:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30996:6:11"},"nodeType":"YulFunctionCall","src":"30996:58:11"},"nodeType":"YulExpressionStatement","src":"30996:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30977:6:11","type":""}],"src":"30879:182:11"},{"body":{"nodeType":"YulBlock","src":"31213:220:11","statements":[{"nodeType":"YulAssignment","src":"31223:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31289:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"31294:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31230:58:11"},"nodeType":"YulFunctionCall","src":"31230:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31223:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31395:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"31306:88:11"},"nodeType":"YulFunctionCall","src":"31306:93:11"},"nodeType":"YulExpressionStatement","src":"31306:93:11"},{"nodeType":"YulAssignment","src":"31408:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31419:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"31424:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31415:3:11"},"nodeType":"YulFunctionCall","src":"31415:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31408:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31201:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31209:3:11","type":""}],"src":"31067:366:11"},{"body":{"nodeType":"YulBlock","src":"31610:248:11","statements":[{"nodeType":"YulAssignment","src":"31620:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31632:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31643:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31628:3:11"},"nodeType":"YulFunctionCall","src":"31628:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31620:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31667:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31678:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31663:3:11"},"nodeType":"YulFunctionCall","src":"31663:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31686:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"31692:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31682:3:11"},"nodeType":"YulFunctionCall","src":"31682:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31656:6:11"},"nodeType":"YulFunctionCall","src":"31656:47:11"},"nodeType":"YulExpressionStatement","src":"31656:47:11"},{"nodeType":"YulAssignment","src":"31712:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31846:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31720:124:11"},"nodeType":"YulFunctionCall","src":"31720:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31712:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31590:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31605:4:11","type":""}],"src":"31439:419:11"},{"body":{"nodeType":"YulBlock","src":"31970:114:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31992:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"32000:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31988:3:11"},"nodeType":"YulFunctionCall","src":"31988:14:11"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"32004:34:11","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31981:6:11"},"nodeType":"YulFunctionCall","src":"31981:58:11"},"nodeType":"YulExpressionStatement","src":"31981:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32060:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"32068:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32056:3:11"},"nodeType":"YulFunctionCall","src":"32056:15:11"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"32073:3:11","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32049:6:11"},"nodeType":"YulFunctionCall","src":"32049:28:11"},"nodeType":"YulExpressionStatement","src":"32049:28:11"}]},"name":"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31962:6:11","type":""}],"src":"31864:220:11"},{"body":{"nodeType":"YulBlock","src":"32236:220:11","statements":[{"nodeType":"YulAssignment","src":"32246:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32312:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"32317:2:11","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32253:58:11"},"nodeType":"YulFunctionCall","src":"32253:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32246:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32418:3:11"}],"functionName":{"name":"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","nodeType":"YulIdentifier","src":"32329:88:11"},"nodeType":"YulFunctionCall","src":"32329:93:11"},"nodeType":"YulExpressionStatement","src":"32329:93:11"},{"nodeType":"YulAssignment","src":"32431:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32442:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"32447:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32438:3:11"},"nodeType":"YulFunctionCall","src":"32438:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32431:3:11"}]}]},"name":"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32224:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32232:3:11","type":""}],"src":"32090:366:11"},{"body":{"nodeType":"YulBlock","src":"32633:248:11","statements":[{"nodeType":"YulAssignment","src":"32643:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32655:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32666:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32651:3:11"},"nodeType":"YulFunctionCall","src":"32651:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32643:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32701:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32686:3:11"},"nodeType":"YulFunctionCall","src":"32686:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32709:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"32715:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32705:3:11"},"nodeType":"YulFunctionCall","src":"32705:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32679:6:11"},"nodeType":"YulFunctionCall","src":"32679:47:11"},"nodeType":"YulExpressionStatement","src":"32679:47:11"},{"nodeType":"YulAssignment","src":"32735:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32869:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32743:124:11"},"nodeType":"YulFunctionCall","src":"32743:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32735:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32613:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32628:4:11","type":""}],"src":"32462:419:11"},{"body":{"nodeType":"YulBlock","src":"33013:206:11","statements":[{"nodeType":"YulAssignment","src":"33023:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33035:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"33046:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33031:3:11"},"nodeType":"YulFunctionCall","src":"33031:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33023:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33103:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33116:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"33127:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33112:3:11"},"nodeType":"YulFunctionCall","src":"33112:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33059:43:11"},"nodeType":"YulFunctionCall","src":"33059:71:11"},"nodeType":"YulExpressionStatement","src":"33059:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33184:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33197:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"33208:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33193:3:11"},"nodeType":"YulFunctionCall","src":"33193:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33140:43:11"},"nodeType":"YulFunctionCall","src":"33140:72:11"},"nodeType":"YulExpressionStatement","src":"33140:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32977:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32989:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32997:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33008:4:11","type":""}],"src":"32887:332:11"},{"body":{"nodeType":"YulBlock","src":"33331:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33353:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"33361:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33349:3:11"},"nodeType":"YulFunctionCall","src":"33349:14:11"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"33365:34:11","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33342:6:11"},"nodeType":"YulFunctionCall","src":"33342:58:11"},"nodeType":"YulExpressionStatement","src":"33342:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33421:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"33429:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33417:3:11"},"nodeType":"YulFunctionCall","src":"33417:15:11"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"33434:11:11","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33410:6:11"},"nodeType":"YulFunctionCall","src":"33410:36:11"},"nodeType":"YulExpressionStatement","src":"33410:36:11"}]},"name":"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33323:6:11","type":""}],"src":"33225:228:11"},{"body":{"nodeType":"YulBlock","src":"33605:220:11","statements":[{"nodeType":"YulAssignment","src":"33615:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33681:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"33686:2:11","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33622:58:11"},"nodeType":"YulFunctionCall","src":"33622:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33615:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33787:3:11"}],"functionName":{"name":"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","nodeType":"YulIdentifier","src":"33698:88:11"},"nodeType":"YulFunctionCall","src":"33698:93:11"},"nodeType":"YulExpressionStatement","src":"33698:93:11"},{"nodeType":"YulAssignment","src":"33800:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33811:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"33816:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33807:3:11"},"nodeType":"YulFunctionCall","src":"33807:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33800:3:11"}]}]},"name":"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33593:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33601:3:11","type":""}],"src":"33459:366:11"},{"body":{"nodeType":"YulBlock","src":"34002:248:11","statements":[{"nodeType":"YulAssignment","src":"34012:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34024:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"34035:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34020:3:11"},"nodeType":"YulFunctionCall","src":"34020:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34012:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34059:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"34070:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34055:3:11"},"nodeType":"YulFunctionCall","src":"34055:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34078:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"34084:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34074:3:11"},"nodeType":"YulFunctionCall","src":"34074:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34048:6:11"},"nodeType":"YulFunctionCall","src":"34048:47:11"},"nodeType":"YulExpressionStatement","src":"34048:47:11"},{"nodeType":"YulAssignment","src":"34104:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34238:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34112:124:11"},"nodeType":"YulFunctionCall","src":"34112:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34104:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33982:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33997:4:11","type":""}],"src":"33831:419:11"},{"body":{"nodeType":"YulBlock","src":"34314:40:11","statements":[{"nodeType":"YulAssignment","src":"34325:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34341:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34335:5:11"},"nodeType":"YulFunctionCall","src":"34335:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34325:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34297:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34307:6:11","type":""}],"src":"34256:98:11"},{"body":{"nodeType":"YulBlock","src":"34455:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34472:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"34477:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34465:6:11"},"nodeType":"YulFunctionCall","src":"34465:19:11"},"nodeType":"YulExpressionStatement","src":"34465:19:11"},{"nodeType":"YulAssignment","src":"34493:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34512:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"34517:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34508:3:11"},"nodeType":"YulFunctionCall","src":"34508:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34493:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34427:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"34432:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34443:11:11","type":""}],"src":"34360:168:11"},{"body":{"nodeType":"YulBlock","src":"34624:283:11","statements":[{"nodeType":"YulVariableDeclaration","src":"34634:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34680:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34648:31:11"},"nodeType":"YulFunctionCall","src":"34648:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34638:6:11","type":""}]},{"nodeType":"YulAssignment","src":"34695:77:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34760:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"34765:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34702:57:11"},"nodeType":"YulFunctionCall","src":"34702:70:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34695:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34820:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"34827:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34816:3:11"},"nodeType":"YulFunctionCall","src":"34816:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"34834:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"34839:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"34781:34:11"},"nodeType":"YulFunctionCall","src":"34781:65:11"},"nodeType":"YulExpressionStatement","src":"34781:65:11"},{"nodeType":"YulAssignment","src":"34855:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34866:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34893:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"34871:21:11"},"nodeType":"YulFunctionCall","src":"34871:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34862:3:11"},"nodeType":"YulFunctionCall","src":"34862:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34855:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34605:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34612:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34620:3:11","type":""}],"src":"34534:373:11"},{"body":{"nodeType":"YulBlock","src":"35241:725:11","statements":[{"nodeType":"YulAssignment","src":"35251:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35263:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35274:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35259:3:11"},"nodeType":"YulFunctionCall","src":"35259:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35251:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35332:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35345:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35356:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35341:3:11"},"nodeType":"YulFunctionCall","src":"35341:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35288:43:11"},"nodeType":"YulFunctionCall","src":"35288:71:11"},"nodeType":"YulExpressionStatement","src":"35288:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35413:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35426:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35437:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35422:3:11"},"nodeType":"YulFunctionCall","src":"35422:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35369:43:11"},"nodeType":"YulFunctionCall","src":"35369:72:11"},"nodeType":"YulExpressionStatement","src":"35369:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35462:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35473:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35458:3:11"},"nodeType":"YulFunctionCall","src":"35458:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35482:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"35488:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35478:3:11"},"nodeType":"YulFunctionCall","src":"35478:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35451:6:11"},"nodeType":"YulFunctionCall","src":"35451:48:11"},"nodeType":"YulExpressionStatement","src":"35451:48:11"},{"nodeType":"YulAssignment","src":"35508:116:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35610:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"35619:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35516:93:11"},"nodeType":"YulFunctionCall","src":"35516:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35508:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35645:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35656:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35641:3:11"},"nodeType":"YulFunctionCall","src":"35641:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35665:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"35671:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35661:3:11"},"nodeType":"YulFunctionCall","src":"35661:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35634:6:11"},"nodeType":"YulFunctionCall","src":"35634:48:11"},"nodeType":"YulExpressionStatement","src":"35634:48:11"},{"nodeType":"YulAssignment","src":"35691:116:11","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35793:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"35802:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35699:93:11"},"nodeType":"YulFunctionCall","src":"35699:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35691:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35828:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35839:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35824:3:11"},"nodeType":"YulFunctionCall","src":"35824:19:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35849:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"35855:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35845:3:11"},"nodeType":"YulFunctionCall","src":"35845:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35817:6:11"},"nodeType":"YulFunctionCall","src":"35817:49:11"},"nodeType":"YulExpressionStatement","src":"35817:49:11"},{"nodeType":"YulAssignment","src":"35875:84:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"35945:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"35954:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35883:61:11"},"nodeType":"YulFunctionCall","src":"35883:76:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35875:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35181:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"35193:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35201:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35209:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35217:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35225:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35236:4:11","type":""}],"src":"34913:1053:11"},{"body":{"nodeType":"YulBlock","src":"36034:79:11","statements":[{"nodeType":"YulAssignment","src":"36044:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36059:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36053:5:11"},"nodeType":"YulFunctionCall","src":"36053:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36044:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36101:5:11"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"36075:25:11"},"nodeType":"YulFunctionCall","src":"36075:32:11"},"nodeType":"YulExpressionStatement","src":"36075:32:11"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36012:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"36020:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36028:5:11","type":""}],"src":"35972:141:11"},{"body":{"nodeType":"YulBlock","src":"36195:273:11","statements":[{"body":{"nodeType":"YulBlock","src":"36241:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36243:77:11"},"nodeType":"YulFunctionCall","src":"36243:79:11"},"nodeType":"YulExpressionStatement","src":"36243:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36216:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"36225:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36212:3:11"},"nodeType":"YulFunctionCall","src":"36212:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"36237:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36208:3:11"},"nodeType":"YulFunctionCall","src":"36208:32:11"},"nodeType":"YulIf","src":"36205:119:11"},{"nodeType":"YulBlock","src":"36334:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"36349:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"36363:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36353:6:11","type":""}]},{"nodeType":"YulAssignment","src":"36378:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36423:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"36434:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36419:3:11"},"nodeType":"YulFunctionCall","src":"36419:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36443:7:11"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"36388:30:11"},"nodeType":"YulFunctionCall","src":"36388:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36378:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36165:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36176:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36188:6:11","type":""}],"src":"36119:349:11"},{"body":{"nodeType":"YulBlock","src":"36527:53:11","statements":[{"nodeType":"YulAssignment","src":"36537:36:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36562:3:11","type":"","value":"224"},{"name":"value","nodeType":"YulIdentifier","src":"36567:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"36558:3:11"},"nodeType":"YulFunctionCall","src":"36558:15:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"36537:8:11"}]}]},"name":"shift_right_224_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36508:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"36518:8:11","type":""}],"src":"36474:106:11"},{"body":{"nodeType":"YulBlock","src":"36625:144:11","statements":[{"body":{"nodeType":"YulBlock","src":"36662:101:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36691:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36694:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36697:1:11","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"36676:14:11"},"nodeType":"YulFunctionCall","src":"36676:23:11"},"nodeType":"YulExpressionStatement","src":"36676:23:11"},{"nodeType":"YulAssignment","src":"36712:41:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36750:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36744:5:11"},"nodeType":"YulFunctionCall","src":"36744:8:11"}],"functionName":{"name":"shift_right_224_unsigned","nodeType":"YulIdentifier","src":"36719:24:11"},"nodeType":"YulFunctionCall","src":"36719:34:11"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"36712:3:11"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"36641:14:11"},"nodeType":"YulFunctionCall","src":"36641:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"36659:1:11","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36638:2:11"},"nodeType":"YulFunctionCall","src":"36638:23:11"},"nodeType":"YulIf","src":"36635:128:11"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"36621:3:11","type":""}],"src":"36586:183:11"},{"body":{"nodeType":"YulBlock","src":"36818:668:11","statements":[{"body":{"nodeType":"YulBlock","src":"36858:9:11","statements":[{"nodeType":"YulLeave","src":"36860:5:11"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"36834:14:11"},"nodeType":"YulFunctionCall","src":"36834:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"36852:4:11","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36831:2:11"},"nodeType":"YulFunctionCall","src":"36831:26:11"},"nodeType":"YulIf","src":"36828:39:11"},{"nodeType":"YulVariableDeclaration","src":"36877:32:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"36889:18:11"},"nodeType":"YulFunctionCall","src":"36889:20:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"36881:4:11","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36933:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"36939:1:11","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"36946:14:11"},"nodeType":"YulFunctionCall","src":"36946:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"36964:1:11","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36942:3:11"},"nodeType":"YulFunctionCall","src":"36942:24:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"36918:14:11"},"nodeType":"YulFunctionCall","src":"36918:49:11"},"nodeType":"YulExpressionStatement","src":"36918:49:11"},{"nodeType":"YulVariableDeclaration","src":"36977:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36997:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36991:5:11"},"nodeType":"YulFunctionCall","src":"36991:11:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36981:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"37128:29:11","statements":[{"nodeType":"YulLeave","src":"37142:5:11"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37033:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37041:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37030:2:11"},"nodeType":"YulFunctionCall","src":"37030:30:11"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37081:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37089:4:11","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37077:3:11"},"nodeType":"YulFunctionCall","src":"37077:17:11"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"37096:14:11"},"nodeType":"YulFunctionCall","src":"37096:16:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37074:2:11"},"nodeType":"YulFunctionCall","src":"37074:39:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"37014:2:11"},"nodeType":"YulFunctionCall","src":"37014:113:11"},"nodeType":"YulIf","src":"37011:146:11"},{"nodeType":"YulVariableDeclaration","src":"37167:28:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37182:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"37188:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37178:3:11"},"nodeType":"YulFunctionCall","src":"37178:17:11"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"37171:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37204:24:11","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"37224:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37218:5:11"},"nodeType":"YulFunctionCall","src":"37218:10:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37208:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"37271:9:11","statements":[{"nodeType":"YulLeave","src":"37273:5:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37243:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37251:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37240:2:11"},"nodeType":"YulFunctionCall","src":"37240:30:11"},"nodeType":"YulIf","src":"37237:43:11"},{"nodeType":"YulVariableDeclaration","src":"37290:38:11","value":{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"37309:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"37314:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37305:3:11"},"nodeType":"YulFunctionCall","src":"37305:14:11"},{"name":"length","nodeType":"YulIdentifier","src":"37321:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37301:3:11"},"nodeType":"YulFunctionCall","src":"37301:27:11"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"37294:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"37385:9:11","statements":[{"nodeType":"YulLeave","src":"37387:5:11"}]},"condition":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"37343:3:11"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37352:4:11"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"37362:14:11"},"nodeType":"YulFunctionCall","src":"37362:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"37380:1:11","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37358:3:11"},"nodeType":"YulFunctionCall","src":"37358:24:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37348:3:11"},"nodeType":"YulFunctionCall","src":"37348:35:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37340:2:11"},"nodeType":"YulFunctionCall","src":"37340:44:11"},"nodeType":"YulIf","src":"37337:57:11"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37424:4:11"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37434:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37446:4:11","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"37452:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37442:3:11"},"nodeType":"YulFunctionCall","src":"37442:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37430:3:11"},"nodeType":"YulFunctionCall","src":"37430:30:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"37404:19:11"},"nodeType":"YulFunctionCall","src":"37404:57:11"},"nodeType":"YulExpressionStatement","src":"37404:57:11"},{"nodeType":"YulAssignment","src":"37470:10:11","value":{"name":"msg","nodeType":"YulIdentifier","src":"37477:3:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37470:3:11"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"36814:3:11","type":""}],"src":"36775:711:11"},{"body":{"nodeType":"YulBlock","src":"37598:133:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37620:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37628:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37616:3:11"},"nodeType":"YulFunctionCall","src":"37616:14:11"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535","kind":"string","nodeType":"YulLiteral","src":"37632:34:11","type":"","value":"ERC1155: transfer to non ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37609:6:11"},"nodeType":"YulFunctionCall","src":"37609:58:11"},"nodeType":"YulExpressionStatement","src":"37609:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37688:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37696:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37684:3:11"},"nodeType":"YulFunctionCall","src":"37684:15:11"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"37701:22:11","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37677:6:11"},"nodeType":"YulFunctionCall","src":"37677:47:11"},"nodeType":"YulExpressionStatement","src":"37677:47:11"}]},"name":"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37590:6:11","type":""}],"src":"37492:239:11"},{"body":{"nodeType":"YulBlock","src":"37883:220:11","statements":[{"nodeType":"YulAssignment","src":"37893:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37959:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"37964:2:11","type":"","value":"52"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37900:58:11"},"nodeType":"YulFunctionCall","src":"37900:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37893:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38065:3:11"}],"functionName":{"name":"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","nodeType":"YulIdentifier","src":"37976:88:11"},"nodeType":"YulFunctionCall","src":"37976:93:11"},"nodeType":"YulExpressionStatement","src":"37976:93:11"},{"nodeType":"YulAssignment","src":"38078:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38089:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"38094:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38085:3:11"},"nodeType":"YulFunctionCall","src":"38085:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38078:3:11"}]}]},"name":"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37871:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37879:3:11","type":""}],"src":"37737:366:11"},{"body":{"nodeType":"YulBlock","src":"38280:248:11","statements":[{"nodeType":"YulAssignment","src":"38290:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38302:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38313:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38298:3:11"},"nodeType":"YulFunctionCall","src":"38298:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38290:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38337:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38348:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38333:3:11"},"nodeType":"YulFunctionCall","src":"38333:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38356:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"38362:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38352:3:11"},"nodeType":"YulFunctionCall","src":"38352:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38326:6:11"},"nodeType":"YulFunctionCall","src":"38326:47:11"},"nodeType":"YulExpressionStatement","src":"38326:47:11"},{"nodeType":"YulAssignment","src":"38382:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38516:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38390:124:11"},"nodeType":"YulFunctionCall","src":"38390:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38382:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38260:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38275:4:11","type":""}],"src":"38109:419:11"},{"body":{"nodeType":"YulBlock","src":"38640:121:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38662:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"38670:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38658:3:11"},"nodeType":"YulFunctionCall","src":"38658:14:11"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"38674:34:11","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38651:6:11"},"nodeType":"YulFunctionCall","src":"38651:58:11"},"nodeType":"YulExpressionStatement","src":"38651:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38730:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"38738:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38726:3:11"},"nodeType":"YulFunctionCall","src":"38726:15:11"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"38743:10:11","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38719:6:11"},"nodeType":"YulFunctionCall","src":"38719:35:11"},"nodeType":"YulExpressionStatement","src":"38719:35:11"}]},"name":"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38632:6:11","type":""}],"src":"38534:227:11"},{"body":{"nodeType":"YulBlock","src":"38913:220:11","statements":[{"nodeType":"YulAssignment","src":"38923:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38989:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"38994:2:11","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38930:58:11"},"nodeType":"YulFunctionCall","src":"38930:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38923:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39095:3:11"}],"functionName":{"name":"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","nodeType":"YulIdentifier","src":"39006:88:11"},"nodeType":"YulFunctionCall","src":"39006:93:11"},"nodeType":"YulExpressionStatement","src":"39006:93:11"},{"nodeType":"YulAssignment","src":"39108:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39119:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"39124:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39115:3:11"},"nodeType":"YulFunctionCall","src":"39115:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39108:3:11"}]}]},"name":"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38901:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38909:3:11","type":""}],"src":"38767:366:11"},{"body":{"nodeType":"YulBlock","src":"39310:248:11","statements":[{"nodeType":"YulAssignment","src":"39320:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39332:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"39343:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39328:3:11"},"nodeType":"YulFunctionCall","src":"39328:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39320:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39367:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"39378:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39363:3:11"},"nodeType":"YulFunctionCall","src":"39363:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39386:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"39392:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39382:3:11"},"nodeType":"YulFunctionCall","src":"39382:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39356:6:11"},"nodeType":"YulFunctionCall","src":"39356:47:11"},"nodeType":"YulExpressionStatement","src":"39356:47:11"},{"nodeType":"YulAssignment","src":"39412:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39546:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39420:124:11"},"nodeType":"YulFunctionCall","src":"39420:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39412:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39290:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39305:4:11","type":""}],"src":"39139:419:11"},{"body":{"nodeType":"YulBlock","src":"39792:523:11","statements":[{"nodeType":"YulAssignment","src":"39802:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39814:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"39825:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39810:3:11"},"nodeType":"YulFunctionCall","src":"39810:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39802:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39883:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39896:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"39907:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39892:3:11"},"nodeType":"YulFunctionCall","src":"39892:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39839:43:11"},"nodeType":"YulFunctionCall","src":"39839:71:11"},"nodeType":"YulExpressionStatement","src":"39839:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39964:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39977:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"39988:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39973:3:11"},"nodeType":"YulFunctionCall","src":"39973:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39920:43:11"},"nodeType":"YulFunctionCall","src":"39920:72:11"},"nodeType":"YulExpressionStatement","src":"39920:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40046:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40059:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"40070:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40055:3:11"},"nodeType":"YulFunctionCall","src":"40055:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40002:43:11"},"nodeType":"YulFunctionCall","src":"40002:72:11"},"nodeType":"YulExpressionStatement","src":"40002:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"40128:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40141:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"40152:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40137:3:11"},"nodeType":"YulFunctionCall","src":"40137:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40084:43:11"},"nodeType":"YulFunctionCall","src":"40084:72:11"},"nodeType":"YulExpressionStatement","src":"40084:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40177:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"40188:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40173:3:11"},"nodeType":"YulFunctionCall","src":"40173:19:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40198:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"40204:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40194:3:11"},"nodeType":"YulFunctionCall","src":"40194:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40166:6:11"},"nodeType":"YulFunctionCall","src":"40166:49:11"},"nodeType":"YulExpressionStatement","src":"40166:49:11"},{"nodeType":"YulAssignment","src":"40224:84:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"40294:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"40303:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40232:61:11"},"nodeType":"YulFunctionCall","src":"40232:76:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40224:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39732:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"39744:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39752:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39760:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39768:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39776:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39787:4:11","type":""}],"src":"39564:751:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: mint to the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xD3DD5FE0 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A3 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x3CA JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x3FD17366 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x438A67E7 EQ PUSH2 0x2E3 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x1FFEAA4 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x387DA42 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x2498 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH2 0x9AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xCE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xD3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x2845 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x2885 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x65F JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x66F JUMPI POP PUSH2 0x66E DUP3 PUSH2 0xFC9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x693 SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BF SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP3 EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCEEA21B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH2 0x75B DUP4 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x76C SWAP3 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0x1193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7E7 JUMPI POP PUSH2 0x7E6 DUP6 PUSH2 0x7E1 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST JUMPDEST PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x833 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x119B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x842 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x2C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x926 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x973 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x94B JUMPI PUSH2 0x94A PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x966 JUMPI PUSH2 0x965 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4CC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x986 JUMPI PUSH2 0x985 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x99C SWAP1 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 POP PUSH2 0x92C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x9C0 PUSH1 0x0 PUSH2 0x153A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA25 SWAP1 PUSH2 0x29DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x914EDB0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 SLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x2CD0 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x36C64B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST GT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDEFAE2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 DUP2 PUSH1 0x8 SLOAD PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST GT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x846FB9E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x21BD401700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCA3 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCC6 CALLER PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1600 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCDC PUSH2 0xCD5 PUSH2 0x1193 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x17B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCE8 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH2 0xD42 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xD6D SWAP1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8A PUSH2 0x1193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xED0 JUMPI POP PUSH2 0xECF DUP6 PUSH2 0xECA PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST JUMPDEST PUSH2 0xF0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF06 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x191C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF2B PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA3 DUP2 PUSH2 0x153A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x118E JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x10AC JUMPI DUP1 DUP1 PUSH2 0x1095 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x2E4D JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C8 JUMPI PUSH2 0x10C7 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1187 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x2E7E JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x2EB2 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x2E4D JUMP JUMPDEST SWAP5 POP PUSH2 0x10FE JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D6 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1258 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH2 0x1268 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1289 JUMPI PUSH2 0x1288 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1340 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x1412 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 POP PUSH2 0x126B JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1490 SWAP3 SWAP2 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x14A6 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x14B4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BC7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14C4 PUSH2 0x1193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14E2 PUSH2 0x9C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1538 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152F SWAP1 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1666 SWAP1 PUSH2 0x31AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1679 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1686 DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1693 DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x16A4 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB7 JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1781 SWAP3 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1798 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x17A7 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1E18 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1815 SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x198B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1982 SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1995 PUSH2 0x1193 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19A2 DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19AF DUP6 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x19BF DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4D SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B0B SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1B88 SWAP3 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1B9E DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1BAC DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1E18 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA6 JUMP JUMPDEST ISZERO PUSH2 0x1D96 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C68 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C65 SWAP2 SWAP1 PUSH2 0x335B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D0D JUMPI PUSH2 0x1C74 PUSH2 0x3395 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1CD0 JUMPI POP PUSH2 0x1C88 PUSH2 0x33B7 JUMP JUMPDEST DUP1 PUSH2 0x1C93 JUMPI POP PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC7 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D04 SWAP1 PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8B SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DBD JUMPI PUSH2 0x1DBC PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DEB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x2C2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E37 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA6 JUMP JUMPDEST ISZERO PUSH2 0x1FE7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x356B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EB9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB6 SWAP2 SWAP1 PUSH2 0x335B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F5E JUMPI PUSH2 0x1EC5 PUSH2 0x3395 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1F21 JUMPI POP PUSH2 0x1ED9 PUSH2 0x33B7 JUMP JUMPDEST DUP1 PUSH2 0x1EE4 JUMPI POP PUSH2 0x1F23 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F18 SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F55 SWAP1 PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1FE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDC SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2003 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203E DUP2 PUSH2 0x2023 JUMP JUMPDEST DUP2 EQ PUSH2 0x2049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205B DUP2 PUSH2 0x2035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2074 DUP2 PUSH2 0x2061 JUMP JUMPDEST DUP2 EQ PUSH2 0x207F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2091 DUP2 PUSH2 0x206B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AE JUMPI PUSH2 0x20AD PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20BC DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CD DUP6 DUP3 DUP7 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20E0 DUP2 PUSH2 0x2061 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2136 DUP2 PUSH2 0x2101 JUMP JUMPDEST DUP2 EQ PUSH2 0x2141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2153 DUP2 PUSH2 0x212D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216F JUMPI PUSH2 0x216E PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x217D DUP5 DUP3 DUP6 ADD PUSH2 0x2144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219B DUP2 PUSH2 0x2186 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221E DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2228 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2238 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x2241 DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2266 DUP2 DUP5 PUSH2 0x2213 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2284 JUMPI PUSH2 0x2283 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2292 DUP5 DUP3 DUP6 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22D8 DUP3 PUSH2 0x2202 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22F7 JUMPI PUSH2 0x22F6 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230A PUSH2 0x1FEF JUMP JUMPDEST SWAP1 POP PUSH2 0x2316 DUP3 DUP3 PUSH2 0x22CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2336 JUMPI PUSH2 0x2335 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x235F PUSH2 0x235A DUP5 PUSH2 0x231B JUMP JUMPDEST PUSH2 0x2300 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2382 JUMPI PUSH2 0x2381 PUSH2 0x2347 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23AB JUMPI DUP1 PUSH2 0x2397 DUP9 DUP3 PUSH2 0x2082 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2384 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23CA JUMPI PUSH2 0x23C9 PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23DA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x234C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2403 JUMPI PUSH2 0x2402 PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH2 0x240C DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243B PUSH2 0x2436 DUP5 PUSH2 0x23E8 JUMP JUMPDEST PUSH2 0x2300 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x23E3 JUMP JUMPDEST JUMPDEST PUSH2 0x2462 DUP5 DUP3 DUP6 PUSH2 0x2419 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x247F JUMPI PUSH2 0x247E PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x248F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2428 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24B4 JUMPI PUSH2 0x24B3 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C2 DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x24D3 DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x2500 DUP9 DUP3 DUP10 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x252D DUP9 DUP3 DUP10 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x255A DUP9 DUP3 DUP10 ADD PUSH2 0x246A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257D JUMPI PUSH2 0x257C PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x258B DUP5 DUP3 DUP6 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25AF JUMPI PUSH2 0x25AE PUSH2 0x22A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D3 PUSH2 0x25CE DUP5 PUSH2 0x2594 JUMP JUMPDEST PUSH2 0x2300 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x25F6 JUMPI PUSH2 0x25F5 PUSH2 0x2347 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x261F JUMPI DUP1 PUSH2 0x260B DUP9 DUP3 PUSH2 0x204C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25F8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x264E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x266E JUMPI PUSH2 0x266D PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x268C JUMPI PUSH2 0x268B PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x2698 DUP6 DUP3 DUP7 ADD PUSH2 0x2629 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B9 JUMPI PUSH2 0x26B8 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x26C5 DUP6 DUP3 DUP7 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2704 DUP2 PUSH2 0x2061 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2716 DUP4 DUP4 PUSH2 0x26FB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273A DUP3 PUSH2 0x26CF JUMP JUMPDEST PUSH2 0x2744 DUP2 DUP6 PUSH2 0x26DA JUMP JUMPDEST SWAP4 POP PUSH2 0x274F DUP4 PUSH2 0x26EB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2780 JUMPI DUP2 MLOAD PUSH2 0x2767 DUP9 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP8 POP PUSH2 0x2772 DUP4 PUSH2 0x2722 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2753 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27A7 DUP2 DUP5 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH2 0x2023 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E2 DUP2 PUSH2 0x2186 JUMP JUMPDEST DUP2 EQ PUSH2 0x27ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27FF DUP2 PUSH2 0x27D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x281C JUMPI PUSH2 0x281B PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x282A DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x283B DUP6 DUP3 DUP7 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285C JUMPI PUSH2 0x285B PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x286A DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x287B DUP6 DUP3 DUP7 ADD PUSH2 0x204C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x28A1 JUMPI PUSH2 0x28A0 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28AF DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x28C0 DUP9 DUP3 DUP10 ADD PUSH2 0x204C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x28D1 DUP9 DUP3 DUP10 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x28E2 DUP9 DUP3 DUP10 ADD PUSH2 0x2082 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2903 JUMPI PUSH2 0x2902 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH2 0x290F DUP9 DUP3 DUP10 ADD PUSH2 0x246A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 PUSH1 0x2A DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2983 DUP3 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29A7 DUP2 PUSH2 0x296B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A08 JUMPI PUSH2 0x2A07 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2A3B DUP2 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x2A45 DUP2 DUP7 PUSH2 0x2A0E JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2A60 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2A75 JUMPI PUSH2 0x2AA8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2AA8 JUMP JUMPDEST PUSH2 0x2A7E DUP6 PUSH2 0x2A19 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AA0 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A81 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABC DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2AC6 DUP2 DUP6 PUSH2 0x2A0E JUMP JUMPDEST SWAP4 POP PUSH2 0x2AD6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEE DUP3 DUP6 PUSH2 0x2A2E JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFA DUP3 DUP5 PUSH2 0x2AB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B62 PUSH1 0x2F DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B6D DUP3 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B91 DUP2 PUSH2 0x2B55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF4 PUSH1 0x29 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFF DUP3 PUSH2 0x2B98 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C23 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C93 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CC5 JUMPI PUSH2 0x2CC4 PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDB DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE6 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2CF4 DUP2 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2D0B JUMPI PUSH2 0x2D0A PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1D DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D28 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D40 JUMPI PUSH2 0x2D3F PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D61 PUSH1 0x0 DUP4 PUSH2 0x2D46 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6C DUP3 PUSH2 0x2D51 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D82 DUP3 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 PUSH1 0x26 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP3 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E17 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E58 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E63 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E73 JUMPI PUSH2 0x2E72 PUSH2 0x2E1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E89 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E94 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EAC JUMPI PUSH2 0x2EAB PUSH2 0x2C59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBD DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC8 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2ED8 JUMPI PUSH2 0x2ED7 PUSH2 0x2E1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3F PUSH1 0x28 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4A DUP3 PUSH2 0x2EE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F6E DUP2 PUSH2 0x2F32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 PUSH1 0x25 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FDC DUP3 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3000 DUP2 PUSH2 0x2FC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3063 PUSH1 0x2A DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x306E DUP3 PUSH2 0x3007 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3092 DUP2 PUSH2 0x3056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B3 DUP2 DUP6 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x30C7 DUP2 DUP5 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3106 PUSH1 0x20 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3111 DUP3 PUSH2 0x30D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3135 DUP2 PUSH2 0x30F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3198 PUSH1 0x21 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x31A3 DUP3 PUSH2 0x313C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C7 DUP2 PUSH2 0x318B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x31F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 PUSH1 0x29 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x325E DUP3 PUSH2 0x31F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3282 DUP2 PUSH2 0x3246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B0 DUP3 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x32BA DUP2 DUP6 PUSH2 0x3294 JUMP JUMPDEST SWAP4 POP PUSH2 0x32CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x32D3 DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x32F3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x3300 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x27AF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3312 DUP2 DUP7 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3326 DUP2 DUP6 PUSH2 0x272F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x333A DUP2 DUP5 PUSH2 0x32A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3355 DUP2 PUSH2 0x212D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3371 JUMPI PUSH2 0x3370 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337F DUP5 DUP3 DUP6 ADD PUSH2 0x3346 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x33B4 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x33B1 PUSH1 0x0 MLOAD PUSH2 0x3388 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x3444 JUMPI PUSH2 0x33C9 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x33F1 JUMPI POP POP PUSH2 0x3444 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x340F JUMPI POP POP POP POP PUSH2 0x3444 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x342C JUMPI POP POP POP POP POP PUSH2 0x3444 JUMP JUMPDEST PUSH2 0x343B DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x22CF JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A3 PUSH1 0x34 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x34AE DUP3 PUSH2 0x3447 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D2 DUP2 PUSH2 0x3496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3535 PUSH1 0x28 DUP4 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3540 DUP3 PUSH2 0x34D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3564 DUP2 PUSH2 0x3528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3580 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x358D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x359A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x35A7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x20D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x35B9 DUP2 DUP5 PUSH2 0x32A5 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xA8 0xE2 PUSH16 0x22F1A1AFD7E42C1F2B0F57BDD3BA54DB CREATE PUSH4 0xEC14CFCC BASEFEE PC SWAP5 BLOCKHASH 0xA8 ADD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"461:2790:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2284:97:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;732:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;611:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2755:203;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2637:84;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4065:427:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2103:104:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2443:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2569:508:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;661:29:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1701:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3145:153:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1947:109:10;;;;;;;;;;;;;:::i;:::-;;3027:221;;;;;;;;;;;;;:::i;:::-;;3365:166:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3598:395;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:227:1;2271:7;2317:1;2298:21;;:7;:21;;;2290:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2383:9;:13;2393:2;2383:13;;;;;;;;;;;:22;2397:7;2383:22;;;;;;;;;;;;;;;;2376:29;;2185:227;;;;:::o;1236:305::-;1338:4;1388:26;1373:41;;;:11;:41;;;;:109;;;;1445:37;1430:52;;;:11;:52;;;;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1373:161;1354:180;;1236:305;;;:::o;2284:97:10:-;2336:7;2363:10;;2356:17;;2284:97;:::o;732:40::-;;;;:::o;611:43::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2755:203::-;2810:13;823:1;2840:2;:8;2836:40;;2857:19;;;;;;;;;;;;;;2836:40;2918:8;2928:20;2945:2;2928:16;:20::i;:::-;2901:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2887:63;;2755:203;;;:::o;2637:84::-;2680:4;2704:9;;;;;;;;;;;2697:16;;2637:84;:::o;4065:427:1:-;4298:12;:10;:12::i;:::-;4290:20;;:4;:20;;;:60;;;;4314:36;4331:4;4337:12;:10;:12::i;:::-;4314:16;:36::i;:::-;4290:60;4269:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;4433:52;4456:4;4462:2;4466:3;4471:7;4480:4;4433:22;:52::i;:::-;4065:427;;;;;:::o;2103:104:10:-;1094:13:0;:11;:13::i;:::-;2190:9:10::1;2177:10;:22;;;;2103:104:::0;:::o;2443:119::-;2505:7;2532:13;:22;2546:7;2532:22;;;;;;;;;;;;;;;;2525:29;;2443:119;;;:::o;2569:508:1:-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2846:30;2893:8;:15;2879:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2961:3;;;;:::i;:::-;;;2920:120;;;;3057:13;3050:20;;;2569:508;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;661:29:10:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1701:198::-;1762:6;1088:9;;;;;;;;;;;1083:38;;1106:15;;;;;;;;;;;;;;1083:38;1161:6;1148:10;;:19;;;;:::i;:::-;1136:9;:31;1132:61;;;1176:17;;;;;;;;;;;;;;1132:61;917:1;1236:6;1208:13;:25;1222:10;1208:25;;;;;;;;;;;;;;;;:34;;;;:::i;:::-;:51;1204:92;;;1281:15;;;;;;;;;;;;;;1204:92;963:3;1324:6;1311:10;;:19;;;;:::i;:::-;:32;1307:56;;;1352:11;;;;;;;;;;;;;;1307:56;1392:9;1378:23;;:10;:23;;;1374:63;;1410:27;;;;;;;;;;;;;;1374:63;1810:6:::1;1781:13;:25;1795:10;1781:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;1841:6;1827:10;;:20;;;;;;;:::i;:::-;;;;;;;;1858:33;1864:10;823:1;1880:6;1858:33;;;;;;;;;;;::::0;:5:::1;:33::i;:::-;1701:198:::0;;:::o;3145:153:1:-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3145:153;;:::o;1947:109:10:-;1094:13:0;:11;:13::i;:::-;2000:9:10::1;;;;;;;;;;;1999:10;:49;;2043:5;2031:9;;:17;;;;;;;;;;;;;;;;;1999:49;;;2024:4;2012:9;;:16;;;;;;;;;;;;;;;;;1999:49;;1947:109::o:0;3027:221::-;1094:13:0;:11;:13::i;:::-;3079:15:10::1;3097:21;3079:39;;3130:12;3156:10;3148:24;;3180:7;3148:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3129:63;;;3208:7;3203:37;;3224:16;;;;;;;;;;;;;;3203:37;3068:180;;3027:221::o:0;3365:166:1:-;3464:4;3487:18;:27;3506:7;3487:27;;;;;;;;;;;;;;;:37;3515:8;3487:37;;;;;;;;;;;;;;;;;;;;;;;;;3480:44;;3365:166;;;;:::o;3598:395::-;3806:12;:10;:12::i;:::-;3798:20;;:4;:20;;;:60;;;;3822:36;3839:4;3845:12;:10;:12::i;:::-;3822:16;:36::i;:::-;3798:60;3777:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;3941:45;3959:4;3965:2;3969;3973:6;3981:4;3941:17;:45::i;:::-;3598:395;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;392:703:7:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;6235:1115:1:-;6455:7;:14;6441:3;:10;:28;6433:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6546:1;6532:16;;:2;:16;;;6524:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6601:16;6620:12;:10;:12::i;:::-;6601:31;;6643:60;6664:8;6674:4;6680:2;6684:3;6689:7;6698:4;6643:20;:60::i;:::-;6719:9;6714:411;6738:3;:10;6734:1;:14;6714:411;;;6769:10;6782:3;6786:1;6782:6;;;;;;;;:::i;:::-;;;;;;;;6769:19;;6802:14;6819:7;6827:1;6819:10;;;;;;;;:::i;:::-;;;;;;;;6802:27;;6844:19;6866:9;:13;6876:2;6866:13;;;;;;;;;;;:19;6880:4;6866:19;;;;;;;;;;;;;;;;6844:41;;6922:6;6907:11;:21;;6899:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7053:6;7039:11;:20;7017:9;:13;7027:2;7017:13;;;;;;;;;;;:19;7031:4;7017:19;;;;;;;;;;;;;;;:42;;;;7108:6;7087:9;:13;7097:2;7087:13;;;;;;;;;;;:17;7101:2;7087:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6755:370;;;6750:3;;;;:::i;:::-;;;6714:411;;;;7170:2;7140:47;;7164:4;7140:47;;7154:8;7140:47;;;7174:3;7179:7;7140:47;;;;;;;:::i;:::-;;;;;;;;7198:59;7218:8;7228:4;7234:2;7238:3;7243:7;7252:4;7198:19;:59::i;:::-;7268:75;7304:8;7314:4;7320:2;7324:3;7329:7;7338:4;7268:35;:75::i;:::-;6423:927;6235:1115;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;8632:709:1:-;8793:1;8779:16;;:2;:16;;;8771:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;8844:16;8863:12;:10;:12::i;:::-;8844:31;;8885:20;8908:21;8926:2;8908:17;:21::i;:::-;8885:44;;8939:24;8966:25;8984:6;8966:17;:25::i;:::-;8939:52;;9002:66;9023:8;9041:1;9045:2;9049:3;9054:7;9063:4;9002:20;:66::i;:::-;9100:6;9079:9;:13;9089:2;9079:13;;;;;;;;;;;:17;9093:2;9079:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;9158:2;9121:52;;9154:1;9121:52;;9136:8;9121:52;;;9162:2;9166:6;9121:52;;;;;;;:::i;:::-;;;;;;;;9184:65;9204:8;9222:1;9226:2;9230:3;9235:7;9244:4;9184:19;:65::i;:::-;9260:74;9291:8;9309:1;9313:2;9317;9321:6;9329:4;9260:30;:74::i;:::-;8761:580;;;8632:709;;;;:::o;12912:323::-;13062:8;13053:17;;:5;:17;;;13045:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13164:8;13126:18;:25;13145:5;13126:25;;;;;;;;;;;;;;;:35;13152:8;13126:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13209:8;13187:41;;13202:5;13187:41;;;13219:8;13187:41;;;;;;:::i;:::-;;;;;;;;12912:323;;;:::o;4942:947::-;5137:1;5123:16;;:2;:16;;;5115:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5192:16;5211:12;:10;:12::i;:::-;5192:31;;5233:20;5256:21;5274:2;5256:17;:21::i;:::-;5233:44;;5287:24;5314:25;5332:6;5314:17;:25::i;:::-;5287:52;;5350:60;5371:8;5381:4;5387:2;5391:3;5396:7;5405:4;5350:20;:60::i;:::-;5421:19;5443:9;:13;5453:2;5443:13;;;;;;;;;;;:19;5457:4;5443:19;;;;;;;;;;;;;;;;5421:41;;5495:6;5480:11;:21;;5472:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5618:6;5604:11;:20;5582:9;:13;5592:2;5582:13;;;;;;;;;;;:19;5596:4;5582:19;;;;;;;;;;;;;;;:42;;;;5665:6;5644:9;:13;5654:2;5644:13;;;;;;;;;;;:17;5658:2;5644:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5718:2;5687:46;;5712:4;5687:46;;5702:8;5687:46;;;5722:2;5726:6;5687:46;;;;;;;:::i;:::-;;;;;;;;5744:59;5764:8;5774:4;5780:2;5784:3;5789:7;5798:4;5744:19;:59::i;:::-;5814:68;5845:8;5855:4;5861:2;5865;5869:6;5877:4;5814:30;:68::i;:::-;5105:784;;;;4942:947;;;;;:::o;14171:214::-;;;;;;;:::o;15318:213::-;;;;;;;:::o;16268:792::-;16500:15;:2;:13;;;:15::i;:::-;16496:558;;;16552:2;16535:43;;;16579:8;16589:4;16595:3;16600:7;16609:4;16535:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16531:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16920:6;16913:14;;;;;;;;;;;:::i;:::-;;;;;;;;16531:513;;;16967:62;;;;;;;;;;:::i;:::-;;;;;;;;16531:513;16705:48;;;16693:60;;;:8;:60;;;;16689:157;;16777:50;;;;;;;;;;:::i;:::-;;;;;;;;16689:157;16615:245;16496:558;16268:792;;;;;;:::o;17066:193::-;17132:16;17160:22;17199:1;17185:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:41;;17222:7;17211:5;17217:1;17211:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17247:5;17240:12;;;17066:193;;;:::o;15537:725::-;15744:15;:2;:13;;;:15::i;:::-;15740:516;;;15796:2;15779:38;;;15818:8;15828:4;15834:2;15838:6;15846:4;15779:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15775:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16122:6;16115:14;;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;;;16169:62;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;15912:43;;;15900:55;;;:8;:55;;;;15896:152;;15979:50;;;;;;;;;;:::i;:::-;;;;;;;;15896:152;15852:210;15740:516;15537:725;;;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:99::-;3265:6;3299:5;3293:12;3283:22;;3213:99;;;:::o;3318:169::-;3402:11;3436:6;3431:3;3424:19;3476:4;3471:3;3467:14;3452:29;;3318:169;;;;:::o;3493:246::-;3574:1;3584:113;3598:6;3595:1;3592:13;3584:113;;;3683:1;3678:3;3674:11;3668:18;3664:1;3659:3;3655:11;3648:39;3620:2;3617:1;3613:10;3608:15;;3584:113;;;3731:1;3722:6;3717:3;3713:16;3706:27;3555:184;3493:246;;;:::o;3745:102::-;3786:6;3837:2;3833:7;3828:2;3821:5;3817:14;3813:28;3803:38;;3745:102;;;:::o;3853:377::-;3941:3;3969:39;4002:5;3969:39;:::i;:::-;4024:71;4088:6;4083:3;4024:71;:::i;:::-;4017:78;;4104:65;4162:6;4157:3;4150:4;4143:5;4139:16;4104:65;:::i;:::-;4194:29;4216:6;4194:29;:::i;:::-;4189:3;4185:39;4178:46;;3945:285;3853:377;;;;:::o;4236:313::-;4349:4;4387:2;4376:9;4372:18;4364:26;;4436:9;4430:4;4426:20;4422:1;4411:9;4407:17;4400:47;4464:78;4537:4;4528:6;4464:78;:::i;:::-;4456:86;;4236:313;;;;:::o;4555:329::-;4614:6;4663:2;4651:9;4642:7;4638:23;4634:32;4631:119;;;4669:79;;:::i;:::-;4631:119;4789:1;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4760:117;4555:329;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:329::-;10135:6;10184:2;10172:9;10163:7;10159:23;10155:32;10152:119;;;10190:79;;:::i;:::-;10152:119;10310:1;10335:53;10380:7;10371:6;10360:9;10356:22;10335:53;:::i;:::-;10325:63;;10281:117;10076:329;;;;:::o;10411:311::-;10488:4;10578:18;10570:6;10567:30;10564:56;;;10600:18;;:::i;:::-;10564:56;10650:4;10642:6;10638:17;10630:25;;10710:4;10704;10700:15;10692:23;;10411:311;;;:::o;10745:710::-;10841:5;10866:81;10882:64;10939:6;10882:64;:::i;:::-;10866:81;:::i;:::-;10857:90;;10967:5;10996:6;10989:5;10982:21;11030:4;11023:5;11019:16;11012:23;;11083:4;11075:6;11071:17;11063:6;11059:30;11112:3;11104:6;11101:15;11098:122;;;11131:79;;:::i;:::-;11098:122;11246:6;11229:220;11263:6;11258:3;11255:15;11229:220;;;11338:3;11367:37;11400:3;11388:10;11367:37;:::i;:::-;11362:3;11355:50;11434:4;11429:3;11425:14;11418:21;;11305:144;11289:4;11284:3;11280:14;11273:21;;11229:220;;;11233:21;10847:608;;10745:710;;;;;:::o;11478:370::-;11549:5;11598:3;11591:4;11583:6;11579:17;11575:27;11565:122;;11606:79;;:::i;:::-;11565:122;11723:6;11710:20;11748:94;11838:3;11830:6;11823:4;11815:6;11811:17;11748:94;:::i;:::-;11739:103;;11555:293;11478:370;;;;:::o;11854:894::-;11972:6;11980;12029:2;12017:9;12008:7;12004:23;12000:32;11997:119;;;12035:79;;:::i;:::-;11997:119;12183:1;12172:9;12168:17;12155:31;12213:18;12205:6;12202:30;12199:117;;;12235:79;;:::i;:::-;12199:117;12340:78;12410:7;12401:6;12390:9;12386:22;12340:78;:::i;:::-;12330:88;;12126:302;12495:2;12484:9;12480:18;12467:32;12526:18;12518:6;12515:30;12512:117;;;12548:79;;:::i;:::-;12512:117;12653:78;12723:7;12714:6;12703:9;12699:22;12653:78;:::i;:::-;12643:88;;12438:303;11854:894;;;;;:::o;12754:114::-;12821:6;12855:5;12849:12;12839:22;;12754:114;;;:::o;12874:184::-;12973:11;13007:6;13002:3;12995:19;13047:4;13042:3;13038:14;13023:29;;12874:184;;;;:::o;13064:132::-;13131:4;13154:3;13146:11;;13184:4;13179:3;13175:14;13167:22;;13064:132;;;:::o;13202:108::-;13279:24;13297:5;13279:24;:::i;:::-;13274:3;13267:37;13202:108;;:::o;13316:179::-;13385:10;13406:46;13448:3;13440:6;13406:46;:::i;:::-;13484:4;13479:3;13475:14;13461:28;;13316:179;;;;:::o;13501:113::-;13571:4;13603;13598:3;13594:14;13586:22;;13501:113;;;:::o;13650:732::-;13769:3;13798:54;13846:5;13798:54;:::i;:::-;13868:86;13947:6;13942:3;13868:86;:::i;:::-;13861:93;;13978:56;14028:5;13978:56;:::i;:::-;14057:7;14088:1;14073:284;14098:6;14095:1;14092:13;14073:284;;;14174:6;14168:13;14201:63;14260:3;14245:13;14201:63;:::i;:::-;14194:70;;14287:60;14340:6;14287:60;:::i;:::-;14277:70;;14133:224;14120:1;14117;14113:9;14108:14;;14073:284;;;14077:14;14373:3;14366:10;;13774:608;;;13650:732;;;;:::o;14388:373::-;14531:4;14569:2;14558:9;14554:18;14546:26;;14618:9;14612:4;14608:20;14604:1;14593:9;14589:17;14582:47;14646:108;14749:4;14740:6;14646:108;:::i;:::-;14638:116;;14388:373;;;;:::o;14767:118::-;14854:24;14872:5;14854:24;:::i;:::-;14849:3;14842:37;14767:118;;:::o;14891:222::-;14984:4;15022:2;15011:9;15007:18;14999:26;;15035:71;15103:1;15092:9;15088:17;15079:6;15035:71;:::i;:::-;14891:222;;;;:::o;15119:116::-;15189:21;15204:5;15189:21;:::i;:::-;15182:5;15179:32;15169:60;;15225:1;15222;15215:12;15169:60;15119:116;:::o;15241:133::-;15284:5;15322:6;15309:20;15300:29;;15338:30;15362:5;15338:30;:::i;:::-;15241:133;;;;:::o;15380:468::-;15445:6;15453;15502:2;15490:9;15481:7;15477:23;15473:32;15470:119;;;15508:79;;:::i;:::-;15470:119;15628:1;15653:53;15698:7;15689:6;15678:9;15674:22;15653:53;:::i;:::-;15643:63;;15599:117;15755:2;15781:50;15823:7;15814:6;15803:9;15799:22;15781:50;:::i;:::-;15771:60;;15726:115;15380:468;;;;;:::o;15854:474::-;15922:6;15930;15979:2;15967:9;15958:7;15954:23;15950:32;15947:119;;;15985:79;;:::i;:::-;15947:119;16105:1;16130:53;16175:7;16166:6;16155:9;16151:22;16130:53;:::i;:::-;16120:63;;16076:117;16232:2;16258:53;16303:7;16294:6;16283:9;16279:22;16258:53;:::i;:::-;16248:63;;16203:118;15854:474;;;;;:::o;16334:1089::-;16438:6;16446;16454;16462;16470;16519:3;16507:9;16498:7;16494:23;16490:33;16487:120;;;16526:79;;:::i;:::-;16487:120;16646:1;16671:53;16716:7;16707:6;16696:9;16692:22;16671:53;:::i;:::-;16661:63;;16617:117;16773:2;16799:53;16844:7;16835:6;16824:9;16820:22;16799:53;:::i;:::-;16789:63;;16744:118;16901:2;16927:53;16972:7;16963:6;16952:9;16948:22;16927:53;:::i;:::-;16917:63;;16872:118;17029:2;17055:53;17100:7;17091:6;17080:9;17076:22;17055:53;:::i;:::-;17045:63;;17000:118;17185:3;17174:9;17170:19;17157:33;17217:18;17209:6;17206:30;17203:117;;;17239:79;;:::i;:::-;17203:117;17344:62;17398:7;17389:6;17378:9;17374:22;17344:62;:::i;:::-;17334:72;;17128:288;16334:1089;;;;;;;;:::o;17429:229::-;17569:34;17565:1;17557:6;17553:14;17546:58;17638:12;17633:2;17625:6;17621:15;17614:37;17429:229;:::o;17664:366::-;17806:3;17827:67;17891:2;17886:3;17827:67;:::i;:::-;17820:74;;17903:93;17992:3;17903:93;:::i;:::-;18021:2;18016:3;18012:12;18005:19;;17664:366;;;:::o;18036:419::-;18202:4;18240:2;18229:9;18225:18;18217:26;;18289:9;18283:4;18279:20;18275:1;18264:9;18260:17;18253:47;18317:131;18443:4;18317:131;:::i;:::-;18309:139;;18036:419;;;:::o;18461:180::-;18509:77;18506:1;18499:88;18606:4;18603:1;18596:15;18630:4;18627:1;18620:15;18647:320;18691:6;18728:1;18722:4;18718:12;18708:22;;18775:1;18769:4;18765:12;18796:18;18786:81;;18852:4;18844:6;18840:17;18830:27;;18786:81;18914:2;18906:6;18903:14;18883:18;18880:38;18877:84;;18933:18;;:::i;:::-;18877:84;18698:269;18647:320;;;:::o;18973:148::-;19075:11;19112:3;19097:18;;18973:148;;;;:::o;19127:141::-;19176:4;19199:3;19191:11;;19222:3;19219:1;19212:14;19256:4;19253:1;19243:18;19235:26;;19127:141;;;:::o;19298:874::-;19401:3;19438:5;19432:12;19467:36;19493:9;19467:36;:::i;:::-;19519:89;19601:6;19596:3;19519:89;:::i;:::-;19512:96;;19639:1;19628:9;19624:17;19655:1;19650:166;;;;19830:1;19825:341;;;;19617:549;;19650:166;19734:4;19730:9;19719;19715:25;19710:3;19703:38;19796:6;19789:14;19782:22;19774:6;19770:35;19765:3;19761:45;19754:52;;19650:166;;19825:341;19892:38;19924:5;19892:38;:::i;:::-;19952:1;19966:154;19980:6;19977:1;19974:13;19966:154;;;20054:7;20048:14;20044:1;20039:3;20035:11;20028:35;20104:1;20095:7;20091:15;20080:26;;20002:4;19999:1;19995:12;19990:17;;19966:154;;;20149:6;20144:3;20140:16;20133:23;;19832:334;;19617:549;;19405:767;;19298:874;;;;:::o;20178:390::-;20284:3;20312:39;20345:5;20312:39;:::i;:::-;20367:89;20449:6;20444:3;20367:89;:::i;:::-;20360:96;;20465:65;20523:6;20518:3;20511:4;20504:5;20500:16;20465:65;:::i;:::-;20555:6;20550:3;20546:16;20539:23;;20288:280;20178:390;;;;:::o;20574:429::-;20751:3;20773:92;20861:3;20852:6;20773:92;:::i;:::-;20766:99;;20882:95;20973:3;20964:6;20882:95;:::i;:::-;20875:102;;20994:3;20987:10;;20574:429;;;;;:::o;21009:234::-;21149:34;21145:1;21137:6;21133:14;21126:58;21218:17;21213:2;21205:6;21201:15;21194:42;21009:234;:::o;21249:366::-;21391:3;21412:67;21476:2;21471:3;21412:67;:::i;:::-;21405:74;;21488:93;21577:3;21488:93;:::i;:::-;21606:2;21601:3;21597:12;21590:19;;21249:366;;;:::o;21621:419::-;21787:4;21825:2;21814:9;21810:18;21802:26;;21874:9;21868:4;21864:20;21860:1;21849:9;21845:17;21838:47;21902:131;22028:4;21902:131;:::i;:::-;21894:139;;21621:419;;;:::o;22046:228::-;22186:34;22182:1;22174:6;22170:14;22163:58;22255:11;22250:2;22242:6;22238:15;22231:36;22046:228;:::o;22280:366::-;22422:3;22443:67;22507:2;22502:3;22443:67;:::i;:::-;22436:74;;22519:93;22608:3;22519:93;:::i;:::-;22637:2;22632:3;22628:12;22621:19;;22280:366;;;:::o;22652:419::-;22818:4;22856:2;22845:9;22841:18;22833:26;;22905:9;22899:4;22895:20;22891:1;22880:9;22876:17;22869:47;22933:131;23059:4;22933:131;:::i;:::-;22925:139;;22652:419;;;:::o;23077:180::-;23125:77;23122:1;23115:88;23222:4;23219:1;23212:15;23246:4;23243:1;23236:15;23263:180;23311:77;23308:1;23301:88;23408:4;23405:1;23398:15;23432:4;23429:1;23422:15;23449:233;23488:3;23511:24;23529:5;23511:24;:::i;:::-;23502:33;;23557:66;23550:5;23547:77;23544:103;;23627:18;;:::i;:::-;23544:103;23674:1;23667:5;23663:13;23656:20;;23449:233;;;:::o;23688:410::-;23728:7;23751:20;23769:1;23751:20;:::i;:::-;23746:25;;23785:20;23803:1;23785:20;:::i;:::-;23780:25;;23840:1;23837;23833:9;23862:30;23880:11;23862:30;:::i;:::-;23851:41;;24041:1;24032:7;24028:15;24025:1;24022:22;24002:1;23995:9;23975:83;23952:139;;24071:18;;:::i;:::-;23952:139;23736:362;23688:410;;;;:::o;24104:191::-;24144:3;24163:20;24181:1;24163:20;:::i;:::-;24158:25;;24197:20;24215:1;24197:20;:::i;:::-;24192:25;;24240:1;24237;24233:9;24226:16;;24261:3;24258:1;24255:10;24252:36;;;24268:18;;:::i;:::-;24252:36;24104:191;;;;:::o;24301:147::-;24402:11;24439:3;24424:18;;24301:147;;;;:::o;24454:114::-;;:::o;24574:398::-;24733:3;24754:83;24835:1;24830:3;24754:83;:::i;:::-;24747:90;;24846:93;24935:3;24846:93;:::i;:::-;24964:1;24959:3;24955:11;24948:18;;24574:398;;;:::o;24978:379::-;25162:3;25184:147;25327:3;25184:147;:::i;:::-;25177:154;;25348:3;25341:10;;24978:379;;;:::o;25363:225::-;25503:34;25499:1;25491:6;25487:14;25480:58;25572:8;25567:2;25559:6;25555:15;25548:33;25363:225;:::o;25594:366::-;25736:3;25757:67;25821:2;25816:3;25757:67;:::i;:::-;25750:74;;25833:93;25922:3;25833:93;:::i;:::-;25951:2;25946:3;25942:12;25935:19;;25594:366;;;:::o;25966:419::-;26132:4;26170:2;26159:9;26155:18;26147:26;;26219:9;26213:4;26209:20;26205:1;26194:9;26190:17;26183:47;26247:131;26373:4;26247:131;:::i;:::-;26239:139;;25966:419;;;:::o;26391:180::-;26439:77;26436:1;26429:88;26536:4;26533:1;26526:15;26560:4;26557:1;26550:15;26577:185;26617:1;26634:20;26652:1;26634:20;:::i;:::-;26629:25;;26668:20;26686:1;26668:20;:::i;:::-;26663:25;;26707:1;26697:35;;26712:18;;:::i;:::-;26697:35;26754:1;26751;26747:9;26742:14;;26577:185;;;;:::o;26768:194::-;26808:4;26828:20;26846:1;26828:20;:::i;:::-;26823:25;;26862:20;26880:1;26862:20;:::i;:::-;26857:25;;26906:1;26903;26899:9;26891:17;;26930:1;26924:4;26921:11;26918:37;;;26935:18;;:::i;:::-;26918:37;26768:194;;;;:::o;26968:176::-;27000:1;27017:20;27035:1;27017:20;:::i;:::-;27012:25;;27051:20;27069:1;27051:20;:::i;:::-;27046:25;;27090:1;27080:35;;27095:18;;:::i;:::-;27080:35;27136:1;27133;27129:9;27124:14;;26968:176;;;;:::o;27150:227::-;27290:34;27286:1;27278:6;27274:14;27267:58;27359:10;27354:2;27346:6;27342:15;27335:35;27150:227;:::o;27383:366::-;27525:3;27546:67;27610:2;27605:3;27546:67;:::i;:::-;27539:74;;27622:93;27711:3;27622:93;:::i;:::-;27740:2;27735:3;27731:12;27724:19;;27383:366;;;:::o;27755:419::-;27921:4;27959:2;27948:9;27944:18;27936:26;;28008:9;28002:4;27998:20;27994:1;27983:9;27979:17;27972:47;28036:131;28162:4;28036:131;:::i;:::-;28028:139;;27755:419;;;:::o;28180:224::-;28320:34;28316:1;28308:6;28304:14;28297:58;28389:7;28384:2;28376:6;28372:15;28365:32;28180:224;:::o;28410:366::-;28552:3;28573:67;28637:2;28632:3;28573:67;:::i;:::-;28566:74;;28649:93;28738:3;28649:93;:::i;:::-;28767:2;28762:3;28758:12;28751:19;;28410:366;;;:::o;28782:419::-;28948:4;28986:2;28975:9;28971:18;28963:26;;29035:9;29029:4;29025:20;29021:1;29010:9;29006:17;28999:47;29063:131;29189:4;29063:131;:::i;:::-;29055:139;;28782:419;;;:::o;29207:229::-;29347:34;29343:1;29335:6;29331:14;29324:58;29416:12;29411:2;29403:6;29399:15;29392:37;29207:229;:::o;29442:366::-;29584:3;29605:67;29669:2;29664:3;29605:67;:::i;:::-;29598:74;;29681:93;29770:3;29681:93;:::i;:::-;29799:2;29794:3;29790:12;29783:19;;29442:366;;;:::o;29814:419::-;29980:4;30018:2;30007:9;30003:18;29995:26;;30067:9;30061:4;30057:20;30053:1;30042:9;30038:17;30031:47;30095:131;30221:4;30095:131;:::i;:::-;30087:139;;29814:419;;;:::o;30239:634::-;30460:4;30498:2;30487:9;30483:18;30475:26;;30547:9;30541:4;30537:20;30533:1;30522:9;30518:17;30511:47;30575:108;30678:4;30669:6;30575:108;:::i;:::-;30567:116;;30730:9;30724:4;30720:20;30715:2;30704:9;30700:18;30693:48;30758:108;30861:4;30852:6;30758:108;:::i;:::-;30750:116;;30239:634;;;;;:::o;30879:182::-;31019:34;31015:1;31007:6;31003:14;30996:58;30879:182;:::o;31067:366::-;31209:3;31230:67;31294:2;31289:3;31230:67;:::i;:::-;31223:74;;31306:93;31395:3;31306:93;:::i;:::-;31424:2;31419:3;31415:12;31408:19;;31067:366;;;:::o;31439:419::-;31605:4;31643:2;31632:9;31628:18;31620:26;;31692:9;31686:4;31682:20;31678:1;31667:9;31663:17;31656:47;31720:131;31846:4;31720:131;:::i;:::-;31712:139;;31439:419;;;:::o;31864:220::-;32004:34;32000:1;31992:6;31988:14;31981:58;32073:3;32068:2;32060:6;32056:15;32049:28;31864:220;:::o;32090:366::-;32232:3;32253:67;32317:2;32312:3;32253:67;:::i;:::-;32246:74;;32329:93;32418:3;32329:93;:::i;:::-;32447:2;32442:3;32438:12;32431:19;;32090:366;;;:::o;32462:419::-;32628:4;32666:2;32655:9;32651:18;32643:26;;32715:9;32709:4;32705:20;32701:1;32690:9;32686:17;32679:47;32743:131;32869:4;32743:131;:::i;:::-;32735:139;;32462:419;;;:::o;32887:332::-;33008:4;33046:2;33035:9;33031:18;33023:26;;33059:71;33127:1;33116:9;33112:17;33103:6;33059:71;:::i;:::-;33140:72;33208:2;33197:9;33193:18;33184:6;33140:72;:::i;:::-;32887:332;;;;;:::o;33225:228::-;33365:34;33361:1;33353:6;33349:14;33342:58;33434:11;33429:2;33421:6;33417:15;33410:36;33225:228;:::o;33459:366::-;33601:3;33622:67;33686:2;33681:3;33622:67;:::i;:::-;33615:74;;33698:93;33787:3;33698:93;:::i;:::-;33816:2;33811:3;33807:12;33800:19;;33459:366;;;:::o;33831:419::-;33997:4;34035:2;34024:9;34020:18;34012:26;;34084:9;34078:4;34074:20;34070:1;34059:9;34055:17;34048:47;34112:131;34238:4;34112:131;:::i;:::-;34104:139;;33831:419;;;:::o;34256:98::-;34307:6;34341:5;34335:12;34325:22;;34256:98;;;:::o;34360:168::-;34443:11;34477:6;34472:3;34465:19;34517:4;34512:3;34508:14;34493:29;;34360:168;;;;:::o;34534:373::-;34620:3;34648:38;34680:5;34648:38;:::i;:::-;34702:70;34765:6;34760:3;34702:70;:::i;:::-;34695:77;;34781:65;34839:6;34834:3;34827:4;34820:5;34816:16;34781:65;:::i;:::-;34871:29;34893:6;34871:29;:::i;:::-;34866:3;34862:39;34855:46;;34624:283;34534:373;;;;:::o;34913:1053::-;35236:4;35274:3;35263:9;35259:19;35251:27;;35288:71;35356:1;35345:9;35341:17;35332:6;35288:71;:::i;:::-;35369:72;35437:2;35426:9;35422:18;35413:6;35369:72;:::i;:::-;35488:9;35482:4;35478:20;35473:2;35462:9;35458:18;35451:48;35516:108;35619:4;35610:6;35516:108;:::i;:::-;35508:116;;35671:9;35665:4;35661:20;35656:2;35645:9;35641:18;35634:48;35699:108;35802:4;35793:6;35699:108;:::i;:::-;35691:116;;35855:9;35849:4;35845:20;35839:3;35828:9;35824:19;35817:49;35883:76;35954:4;35945:6;35883:76;:::i;:::-;35875:84;;34913:1053;;;;;;;;:::o;35972:141::-;36028:5;36059:6;36053:13;36044:22;;36075:32;36101:5;36075:32;:::i;:::-;35972:141;;;;:::o;36119:349::-;36188:6;36237:2;36225:9;36216:7;36212:23;36208:32;36205:119;;;36243:79;;:::i;:::-;36205:119;36363:1;36388:63;36443:7;36434:6;36423:9;36419:22;36388:63;:::i;:::-;36378:73;;36334:127;36119:349;;;;:::o;36474:106::-;36518:8;36567:5;36562:3;36558:15;36537:36;;36474:106;;;:::o;36586:183::-;36621:3;36659:1;36641:16;36638:23;36635:128;;;36697:1;36694;36691;36676:23;36719:34;36750:1;36744:8;36719:34;:::i;:::-;36712:41;;36635:128;36586:183;:::o;36775:711::-;36814:3;36852:4;36834:16;36831:26;36860:5;36828:39;36889:20;;:::i;:::-;36964:1;36946:16;36942:24;36939:1;36933:4;36918:49;36997:4;36991:11;37096:16;37089:4;37081:6;37077:17;37074:39;37041:18;37033:6;37030:30;37014:113;37011:146;;;37142:5;;;;37011:146;37188:6;37182:4;37178:17;37224:3;37218:10;37251:18;37243:6;37240:30;37237:43;;;37273:5;;;;;;37237:43;37321:6;37314:4;37309:3;37305:14;37301:27;37380:1;37362:16;37358:24;37352:4;37348:35;37343:3;37340:44;37337:57;;;37387:5;;;;;;;37337:57;37404;37452:6;37446:4;37442:17;37434:6;37430:30;37424:4;37404:57;:::i;:::-;37477:3;37470:10;;36818:668;;;;;36775:711;;:::o;37492:239::-;37632:34;37628:1;37620:6;37616:14;37609:58;37701:22;37696:2;37688:6;37684:15;37677:47;37492:239;:::o;37737:366::-;37879:3;37900:67;37964:2;37959:3;37900:67;:::i;:::-;37893:74;;37976:93;38065:3;37976:93;:::i;:::-;38094:2;38089:3;38085:12;38078:19;;37737:366;;;:::o;38109:419::-;38275:4;38313:2;38302:9;38298:18;38290:26;;38362:9;38356:4;38352:20;38348:1;38337:9;38333:17;38326:47;38390:131;38516:4;38390:131;:::i;:::-;38382:139;;38109:419;;;:::o;38534:227::-;38674:34;38670:1;38662:6;38658:14;38651:58;38743:10;38738:2;38730:6;38726:15;38719:35;38534:227;:::o;38767:366::-;38909:3;38930:67;38994:2;38989:3;38930:67;:::i;:::-;38923:74;;39006:93;39095:3;39006:93;:::i;:::-;39124:2;39119:3;39115:12;39108:19;;38767:366;;;:::o;39139:419::-;39305:4;39343:2;39332:9;39328:18;39320:26;;39392:9;39386:4;39382:20;39378:1;39367:9;39363:17;39356:47;39420:131;39546:4;39420:131;:::i;:::-;39412:139;;39139:419;;;:::o;39564:751::-;39787:4;39825:3;39814:9;39810:19;39802:27;;39839:71;39907:1;39896:9;39892:17;39883:6;39839:71;:::i;:::-;39920:72;39988:2;39977:9;39973:18;39964:6;39920:72;:::i;:::-;40002;40070:2;40059:9;40055:18;40046:6;40002:72;:::i;:::-;40084;40152:2;40141:9;40137:18;40128:6;40084:72;:::i;:::-;40204:9;40198:4;40194:20;40188:3;40177:9;40173:19;40166:49;40232:76;40303:4;40294:6;40232:76;:::i;:::-;40224:84;;39564:751;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2763800","executionCost":"infinite","totalCost":"infinite"},"external":{"_mintPrice()":"2519","amountMinted(address)":"2952","balanceOf(address,uint256)":"infinite","balanceOfBatch(address[],uint256[])":"infinite","changeMintPrice(uint256)":"24873","getState()":"2524","isApprovedForAll(address,address)":"infinite","mint(uint256)":"infinite","name()":"infinite","owner()":"2589","renounceOwnership()":"30443","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"819","symbol()":"infinite","toggleMint()":"28886","totalAmountMinted()":"2505","transferOwnership(address)":"30876","uri(uint256)":"infinite","withdrawal()":"infinite"}},"methodIdentifiers":{"_mintPrice()":"0387da42","amountMinted(address)":"438a67e7","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","changeMintPrice(uint256)":"3fd17366","getState()":"1865c57d","isApprovedForAll(address,address)":"e985e9c5","mint(uint256)":"a0712d68","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","toggleMint()":"d3dd5fe0","totalAmountMinted()":"01ffeaa4","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c","withdrawal()":"d4e93292"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractsNotAllowedToMint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBuyPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintedOut\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"amountMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintPrice\",\"type\":\"uint256\"}],\"name\":\"changeMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmountMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"amountMinted(address)\":{\"returns\":{\"_0\":\"the amount to token minted by account\"}},\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getState()\":{\"returns\":{\"_0\":\"_mintActive true if mint is active and vice versa\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalAmountMinted()\":{\"returns\":{\"_0\":\"total Basic Island Nft minted so far for token id 1\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"returns\":{\"_0\":\"tokenUri\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeMintPrice(uint256)\":{\"notice\":\"changes the mint price\"},\"mint(uint256)\":{\"notice\":\"mint and sends the token to the callers address\"},\"toggleMint()\":{\"notice\":\"Toggle mint on and off\"},\"withdrawal()\":{\"notice\":\"withdraws the matic in the contract to _addr\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BasicIslandGenesis.sol\":\"BasicIslandGenesis\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner nor approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner nor approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/BasicIslandGenesis.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\r\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport {ERC1155} from \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\r\\n\\r\\nerror MintedOut();\\r\\nerror MintNotActive();\\r\\nerror AlreadyMinted();\\r\\nerror TransferFailed();\\r\\nerror InvalidBuyPrice();\\r\\nerror TokenDoesNotExist();\\r\\nerror ContractsNotAllowedToMint();\\r\\n\\r\\ncontract BasicIslandGenesis is ERC1155, Ownable {\\r\\n    using Strings for uint256;\\r\\n\\r\\n    string private _baseURI;\\r\\n    bool private _mintOpen;\\r\\n\\r\\n    string public name = \\\"Basic Island Genesis\\\";\\r\\n    string public symbol = \\\"DESC\\\";\\r\\n\\r\\n    uint256 private _mintCount;\\r\\n    uint256 public _mintPrice = 250 * 10**18; //250 matic\\r\\n\\r\\n    uint256 private constant ID = 1;\\r\\n    uint256 private constant RESERVE = 10;\\r\\n    uint256 private constant MAX_PER_WALLET = 2;\\r\\n    uint256 private constant MAX_SUPPLY = 500;\\r\\n\\r\\n    mapping(address => uint256) private _amountMinted;\\r\\n\\r\\n    modifier allowedToMint(uint256 amount) {\\r\\n        if (!_mintOpen) revert MintNotActive();\\r\\n        if (msg.value < _mintPrice * amount) revert InvalidBuyPrice();\\r\\n        if (_amountMinted[msg.sender] + amount > MAX_PER_WALLET)\\r\\n            revert AlreadyMinted();\\r\\n        if (_mintCount + amount > MAX_SUPPLY) revert MintedOut();\\r\\n        if (msg.sender != tx.origin) revert ContractsNotAllowedToMint();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(string memory uri_, address addr) ERC1155(uri_) {\\r\\n        _baseURI = uri_;\\r\\n        _mint(addr, ID, RESERVE, \\\"\\\");\\r\\n        _mintCount = RESERVE;\\r\\n    }\\r\\n\\r\\n    ///@notice mint and sends the token to the callers address\\r\\n    function mint(uint256 amount) external payable allowedToMint(amount) {\\r\\n        _amountMinted[msg.sender] += amount;\\r\\n        _mintCount += amount;\\r\\n        _mint(msg.sender, ID, amount, \\\"\\\");\\r\\n    }\\r\\n\\r\\n    /// @notice Toggle mint on and off\\r\\n    function toggleMint() external onlyOwner {\\r\\n        !_mintOpen ? _mintOpen = true : _mintOpen = false;\\r\\n    }\\r\\n\\r\\n    ///@notice changes the mint price\\r\\n    function changeMintPrice(uint256 mintPrice) external onlyOwner {\\r\\n        _mintPrice = mintPrice;\\r\\n    }\\r\\n\\r\\n    /// @return total Basic Island Nft minted so far for token id 1\\r\\n    function totalAmountMinted() external view returns (uint256) {\\r\\n        return _mintCount;\\r\\n    }\\r\\n\\r\\n    ///@return the amount to token minted by account\\r\\n    function amountMinted(address account) external view returns (uint256) {\\r\\n        return _amountMinted[account];\\r\\n    }\\r\\n\\r\\n    /// @return _mintActive true if mint is active and vice versa\\r\\n    function getState() external view returns (bool) {\\r\\n        return _mintOpen;\\r\\n    }\\r\\n\\r\\n    /// @return tokenUri\\r\\n    function uri(uint256 id) public view override returns (string memory) {\\r\\n        if (id != ID) revert TokenDoesNotExist();\\r\\n        return string(abi.encodePacked(_baseURI, Strings.toString(id)));\\r\\n    }\\r\\n\\r\\n    ///@notice withdraws the matic in the contract to _addr\\r\\n    function withdrawal() external onlyOwner {\\r\\n        uint256 balance = address(this).balance;\\r\\n        (bool success, ) = payable(msg.sender).call{value: balance}(\\\"\\\");\\r\\n        if (!success) revert TransferFailed();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x62694a766280f4aae7f9c936a5bcb2f3670ac7015be594fe32a4d3d36a000ee1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":7,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_owner","offset":0,"slot":"3","type":"t_address"},{"astId":2123,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_baseURI","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2125,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_mintOpen","offset":0,"slot":"5","type":"t_bool"},{"astId":2128,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"name","offset":0,"slot":"6","type":"t_string_storage"},{"astId":2131,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"symbol","offset":0,"slot":"7","type":"t_string_storage"},{"astId":2133,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_mintCount","offset":0,"slot":"8","type":"t_uint256"},{"astId":2140,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_mintPrice","offset":0,"slot":"9","type":"t_uint256"},{"astId":2156,"contract":"contracts/BasicIslandGenesis.sol:BasicIslandGenesis","label":"_amountMinted","offset":0,"slot":"10","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"changeMintPrice(uint256)":{"notice":"changes the mint price"},"mint(uint256)":{"notice":"mint and sends the token to the callers address"},"toggleMint()":{"notice":"Toggle mint on and off"},"withdrawal()":{"notice":"withdraws the matic in the contract to _addr"}},"version":1}}}}}}